Token                 Lexeme                          Line#  Column#
INT                   int                             3      1      
IDENTIFIER            main                            3      5      
L_PAREN               (                               3      9      
R_PAREN               )                               3      10     
L_BRACES              {                               3      12     
LONG                  long                            4      5      
IDENTIFIER            reversedN                       4      10     
ASSIGNMENT            =                               4      20     
INT_CONSTANT          0                               4      22     
COMMA                 ,                               4      23     
IDENTIFIER            remainder                       4      25     
COMMA                 ,                               4      34     
IDENTIFIER            originalN                       4      36     
SEMI_COLON            ;                               4      45     
LONG                  long                            6      5      
IDENTIFIER            n                               6      10     
ASSIGNMENT            =                               6      12     
INT_CONSTANT          123454321                       6      14     
SEMI_COLON            ;                               6      23     
IDENTIFIER            originalN                       7      5      
ASSIGNMENT            =                               7      15     
IDENTIFIER            n                               7      17     
SEMI_COLON            ;                               7      18     
WHILE                 while                           10     5      
L_PAREN               (                               10     11     
IDENTIFIER            n                               10     12     
NOT_EQUALS            !=                              10     14     
INT_CONSTANT          0                               10     17     
R_PAREN               )                               10     18     
L_BRACES              {                               10     20     
IDENTIFIER            remainder                       11     9      
ASSIGNMENT            =                               11     19     
IDENTIFIER            n                               11     21     
MODULUS               %                               11     23     
INT_CONSTANT          10                              11     25     
SEMI_COLON            ;                               11     27     
IDENTIFIER            reversedN                       12     9      
ASSIGNMENT            =                               12     19     
IDENTIFIER            reversedN                       12     21     
MULTIPLY              *                               12     31     
INT_CONSTANT          10                              12     33     
ADD                   +                               12     36     
IDENTIFIER            remainder                       12     38     
SEMI_COLON            ;                               12     47     
IDENTIFIER            n                               13     9      
DIVIDE_ASSIGNMENT     /=                              13     11     
INT_CONSTANT          10                              13     14     
SEMI_COLON            ;                               13     16     
R_BRACES              }                               14     5      
INT                   int                             16     5      
IDENTIFIER            is_palindrome                   16     9      
SEMI_COLON            ;                               16     22     
IF                    if                              18     5      
L_PAREN               (                               18     8      
IDENTIFIER            originalN                       18     9      
EQUALS                ==                              18     19     
IDENTIFIER            reversedN                       18     22     
R_PAREN               )                               18     31     
IDENTIFIER            is_palindrome                   19     9      
ASSIGNMENT            =                               19     23     
INT_CONSTANT          1                               19     25     
SEMI_COLON            ;                               19     26     
ELSE                  else                            20     5      
IDENTIFIER            is_palindrome                   21     9      
ASSIGNMENT            =                               21     23     
INT_CONSTANT          0                               21     25     
SEMI_COLON            ;                               21     26     
RETURN                return                          23     5      
INT_CONSTANT          0                               23     12     
SEMI_COLON            ;                               23     13     
R_BRACES              }                               24     1      
