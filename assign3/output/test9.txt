Token                 Lexeme                          Line#  Column#
INT                   int                             3      1      
IDENTIFIER            prime                           3      5      
L_SQBR                [                               3      10     
INT_CONSTANT          10000                           3      11     
R_SQBR                ]                               3      16     
SEMI_COLON            ;                               3      17     
INT                   int                             4      1      
IDENTIFIER            n                               4      5      
ASSIGNMENT            =                               4      7      
INT_CONSTANT          10000                           4      9      
SEMI_COLON            ;                               4      14     
VOID                  void                            6      1      
IDENTIFIER            sieve                           6      6      
L_PAREN               (                               6      11     
R_PAREN               )                               6      12     
L_BRACES              {                               6      13     
INT                   int                             7      5      
IDENTIFIER            i                               7      9      
ASSIGNMENT            =                               7      11     
INT_CONSTANT          2                               7      12     
SEMI_COLON            ;                               7      13     
FOR                   for                             8      5      
L_PAREN               (                               8      8      
IDENTIFIER            i                               8      9      
ASSIGNMENT            =                               8      10     
INT_CONSTANT          2                               8      11     
SEMI_COLON            ;                               8      12     
IDENTIFIER            i                               8      13     
MULTIPLY              *                               8      14     
IDENTIFIER            i                               8      15     
LESS_EQUALS           <=                              8      16     
IDENTIFIER            n                               8      18     
SEMI_COLON            ;                               8      19     
IDENTIFIER            i                               8      20     
INCREMENT             ++                              8      21     
R_PAREN               )                               8      23     
L_BRACES              {                               8      24     
IF                    if                              9      9      
L_PAREN               (                               9      11     
IDENTIFIER            prime                           9      12     
L_SQBR                [                               9      17     
IDENTIFIER            i                               9      18     
R_SQBR                ]                               9      19     
EQUALS                ==                              9      21     
INT_CONSTANT          0                               9      24     
R_PAREN               )                               9      25     
CONTINUE              continue                        9      26     
SEMI_COLON            ;                               9      34     
INT                   int                             10     9      
IDENTIFIER            j                               10     13     
SEMI_COLON            ;                               10     14     
FOR                   for                             11     9      
L_PAREN               (                               11     12     
IDENTIFIER            j                               11     13     
ASSIGNMENT            =                               11     15     
IDENTIFIER            i                               11     17     
MULTIPLY              *                               11     18     
IDENTIFIER            i                               11     19     
SEMI_COLON            ;                               11     20     
IDENTIFIER            j                               11     21     
MULTIPLY              *                               11     22     
IDENTIFIER            j                               11     23     
LESS_EQUALS           <=                              11     25     
IDENTIFIER            n                               11     27     
SEMI_COLON            ;                               11     28     
IDENTIFIER            j                               11     29     
ADD_ASSIGNMENT        +=                              11     31     
IDENTIFIER            i                               11     34     
R_PAREN               )                               11     35     
L_BRACES              {                               11     36     
IDENTIFIER            prime                           12     13     
L_SQBR                [                               12     18     
IDENTIFIER            j                               12     19     
R_SQBR                ]                               12     20     
ASSIGNMENT            =                               12     22     
INT_CONSTANT          0                               12     23     
SEMI_COLON            ;                               12     24     
R_BRACES              }                               13     9      
R_BRACES              }                               14     5      
RETURN                return                          15     5      
SEMI_COLON            ;                               15     11     
R_BRACES              }                               16     1      
INT                   int                             19     1      
IDENTIFIER            main                            19     5      
L_PAREN               (                               19     9      
R_PAREN               )                               19     10     
L_BRACES              {                               19     11     
INT                   int                             20     5      
IDENTIFIER            i                               20     9      
SEMI_COLON            ;                               20     10     
FOR                   for                             21     5      
L_PAREN               (                               21     8      
IDENTIFIER            i                               21     9      
ASSIGNMENT            =                               21     10     
INT_CONSTANT          2                               21     11     
SEMI_COLON            ;                               21     12     
IDENTIFIER            i                               21     13     
LESS                  <                               21     14     
INT_CONSTANT          10000                           21     15     
SEMI_COLON            ;                               21     20     
IDENTIFIER            i                               21     21     
INCREMENT             ++                              21     22     
R_PAREN               )                               21     24     
IDENTIFIER            prime                           21     25     
L_SQBR                [                               21     30     
IDENTIFIER            i                               21     31     
R_SQBR                ]                               21     32     
ASSIGNMENT            =                               21     34     
INT_CONSTANT          1                               21     35     
SEMI_COLON            ;                               21     36     
IDENTIFIER            sieve                           22     5      
L_PAREN               (                               22     10     
R_PAREN               )                               22     11     
SEMI_COLON            ;                               22     12     
RETURN                return                          23     5      
INT_CONSTANT          0                               23     12     
SEMI_COLON            ;                               23     13     
R_BRACES              }                               24     1      
