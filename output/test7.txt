Token                 Lexeme                          Line#  Column#
INT                   int                             2      1      
IDENTIFIER            b                               2      5      
SEMI_COLON            ;                               2      6      
STRUCT                struct                          4      1      
IDENTIFIER            A                               4      8      
L_BRACES              {                               4      9      
STRUCT                struct                          5      5      
IDENTIFIER            A                               5      12     
MULTIPLY              *                               5      14     
IDENTIFIER            ptr                             5      15     
SEMI_COLON            ;                               5      18     
R_BRACES              }                               6      1      
SEMI_COLON            ;                               6      2      
INT                   int                             8      1      
IDENTIFIER            main                            8      5      
L_PAREN               (                               8      9      
R_PAREN               )                               8      10     
L_BRACES              {                               8      11     
STRUCT                struct                          9      5      
IDENTIFIER            a                               9      12     
IDENTIFIER            d                               9      14     
SEMI_COLON            ;                               9      15     
STRUCT                struct                          10     5      
IDENTIFIER            a                               10     12     
MULTIPLY              *                               10     14     
IDENTIFIER            g                               10     15     
SEMI_COLON            ;                               10     16     
IDENTIFIER            d                               12     5      
DOT                   .                               12     6      
IDENTIFIER            z                               12     7      
DOT                   .                               12     8      
IDENTIFIER            c                               12     9      
ASSIGNMENT            =                               12     11     
INT_CONSTANT          5                               12     13     
SEMI_COLON            ;                               12     14     
IDENTIFIER            d                               13     5      
DOT                   .                               13     6      
IDENTIFIER            p                               13     7      
ASSIGNMENT            =                               13     9      
BITWISE_AND           &                               13     11     
IDENTIFIER            d                               13     12     
SEMI_COLON            ;                               13     13     
INT                   int                             14     5      
IDENTIFIER            s                               14     9      
ASSIGNMENT            =                               14     11     
INT_CONSTANT          4                               14     13     
LESS                  <                               14     14     
INT_CONSTANT          5                               14     15     
SEMI_COLON            ;                               14     16     
CHAR                  char                            15     5      
IDENTIFIER            a                               15     10     
ASSIGNMENT            =                               15     12     
BITWISE_AND           &                               15     14     
IDENTIFIER            g                               15     15     
SEMI_COLON            ;                               15     16     
INT                   int                             16     5      
MULTIPLY              *                               16     9      
IDENTIFIER            l                               16     10     
ASSIGNMENT            =                               16     12     
BITWISE_AND           &                               16     14     
IDENTIFIER            d                               16     15     
ADD                   +                               16     17     
INT_CONSTANT          5                               16     19     
SEMI_COLON            ;                               16     20     
INT                   int                             18     5      
IDENTIFIER            q                               18     9      
L_SQBR                [                               18     10     
INT_CONSTANT          5                               18     11     
R_SQBR                ]                               18     12     
L_SQBR                [                               18     13     
INT_CONSTANT          3                               18     14     
R_SQBR                ]                               18     15     
ASSIGNMENT            =                               18     17     
L_BRACES              {                               18     19     
L_BRACES              {                               18     20     
CHAR_CONSTANT         'a'                             18     21     
COMMA                 ,                               18     24     
CHAR_CONSTANT         'b'                             18     25     
R_BRACES              }                               18     28     
COMMA                 ,                               18     29     
L_BRACES              {                               18     30     
CHAR_CONSTANT         'a'                             18     31     
COMMA                 ,                               18     34     
CHAR_CONSTANT         'b'                             18     35     
R_BRACES              }                               18     38     
R_BRACES              }                               18     39     
SEMI_COLON            ;                               18     40     
INT                   int                             19     5      
IDENTIFIER            x                               19     9      
ASSIGNMENT            =                               19     11     
BITWISE_AND           &                               19     13     
IDENTIFIER            a                               19     14     
SEMI_COLON            ;                               19     15     
IDENTIFIER            x                               20     5      
ADD_ASSIGNMENT        +=                              20     7      
BITWISE_AND           &                               20     10     
IDENTIFIER            a                               20     11     
SEMI_COLON            ;                               20     12     
IDENTIFIER            x                               21     5      
ADD_ASSIGNMENT        +=                              21     7      
INT_CONSTANT          5                               21     10     
SEMI_COLON            ;                               21     11     
IDENTIFIER            x                               22     5      
ASSIGNMENT            =                               22     7      
SUBSTRACT             -                               22     9      
IDENTIFIER            x                               22     10     
SEMI_COLON            ;                               22     11     
IDENTIFIER            x                               23     5      
ASSIGNMENT            =                               23     7      
LOGICAL_NOT           !                               23     9      
IDENTIFIER            x                               23     10     
SEMI_COLON            ;                               23     11     
IDENTIFIER            x                               24     5      
ASSIGNMENT            =                               24     8      
MULTIPLY              *                               24     10     
IDENTIFIER            l                               24     11     
SEMI_COLON            ;                               24     12     
IDENTIFIER            x                               25     5      
ASSIGNMENT            =                               25     7      
INCREMENT             ++                              25     9      
IDENTIFIER            l                               25     11     
SEMI_COLON            ;                               25     12     
IDENTIFIER            x                               26     5      
ASSIGNMENT            =                               26     7      
CHAR_CONSTANT         'a'                             26     9      
ADD                   +                               26     13     
CHAR_CONSTANT         'b'                             26     15     
SEMI_COLON            ;                               26     18     
IDENTIFIER            b                               31     5      
ASSIGNMENT            =                               31     7      
SIZEOF                sizeof                          31     9      
L_PAREN               (                               31     15     
INT_CONSTANT          5                               31     16     
R_PAREN               )                               31     17     
SEMI_COLON            ;                               31     18     
IF                    if                              33     5      
L_PAREN               (                               33     7      
INT_CONSTANT          0                               33     8      
COMMA                 ,                               33     9      
IDENTIFIER            b                               33     10     
COMMA                 ,                               33     11     
INT_CONSTANT          1                               33     12     
R_PAREN               )                               33     13     
L_BRACES              {                               33     14     
IDENTIFIER            b                               35     9      
ASSIGNMENT            =                               35     11     
INT_CONSTANT          4                               35     13     
SEMI_COLON            ;                               35     14     
R_BRACES              }                               36     5      
SWITCH                switch                          37     5      
L_PAREN               (                               37     12     
IDENTIFIER            b                               37     13     
R_PAREN               )                               37     14     
L_BRACES              {                               38     5      
CASE                  case                            39     9      
L_PAREN               (                               39     14     
INT_CONSTANT          5                               39     15     
R_PAREN               )                               39     16     
COLON                 :                               39     18     
L_BRACES              {                               39     20     
IDENTIFIER            a                               39     21     
ASSIGNMENT            =                               39     23     
CHAR_CONSTANT         'c'                             39     25     
SEMI_COLON            ;                               39     28     
BREAK                 break                           40     13     
SEMI_COLON            ;                               40     18     
R_BRACES              }                               40     19     
DEFAULT               default                         41     9      
COLON                 :                               41     16     
L_BRACES              {                               42     13     
IDENTIFIER            a                               42     14     
ASSIGNMENT            =                               42     16     
CHAR_CONSTANT         'd'                             42     18     
SEMI_COLON            ;                               42     21     
BREAK                 break                           43     13     
SEMI_COLON            ;                               43     18     
R_BRACES              }                               43     19     
R_BRACES              }                               44     5      
INT                   int                             48     1      
IDENTIFIER            main                            48     5      
L_PAREN               (                               48     9      
INT                   int                             48     10     
IDENTIFIER            argc                            48     14     
COMMA                 ,                               48     18     
CHAR                  char                            48     20     
IDENTIFIER            argv                            48     25     
L_SQBR                [                               48     29     
R_SQBR                ]                               48     30     
R_PAREN               )                               48     31     
L_BRACES              {                               48     32     
STRUCT                struct                          50     5      
IDENTIFIER            A                               50     12     
IDENTIFIER            d                               50     14     
SEMI_COLON            ;                               50     15     
INT                   int                             51     5      
IDENTIFIER            s                               51     9      
ASSIGNMENT            =                               51     11     
SIZEOF                sizeof                          51     13     
L_PAREN               (                               51     19     
IDENTIFIER            d                               51     20     
R_PAREN               )                               51     21     
SEMI_COLON            ;                               51     22     
CHAR                  char                            52     5      
MULTIPLY              *                               52     9      
IDENTIFIER            str                             52     11     
ASSIGNMENT            =                               52     15     
L_BRACES              {                               52     17     
CHAR_CONSTANT         'q'                             52     18     
COMMA                 ,                               52     21     
CHAR_CONSTANT         'r'                             52     22     
COMMA                 ,                               52     25     
CHAR_CONSTANT         's'                             52     26     
R_BRACES              }                               52     29     
SEMI_COLON            ;                               52     30     
FLOAT                 float                           53     5      
IDENTIFIER            cd                              53     11     
SEMI_COLON            ;                               53     13     
DOUBLE                double                          54     5      
IDENTIFIER            a                               54     12     
ASSIGNMENT            =                               54     14     
REAL_CONSTANT         3.2                             54     16     
COMMA                 ,                               54     19     
MULTIPLY              *                               54     21     
IDENTIFIER            ptr                             54     22     
COMMA                 ,                               54     25     
IDENTIFIER            c                               54     27     
ASSIGNMENT            =                               54     28     
IDENTIFIER            cd                              54     29     
SEMI_COLON            ;                               54     31     
INT                   int                             55     5      
MULTIPLY              *                               55     9      
IDENTIFIER            ptr3                            55     11     
ASSIGNMENT            =                               55     16     
BITWISE_AND           &                               55     18     
IDENTIFIER            s                               55     19     
SEMI_COLON            ;                               55     20     
LONG                  long                            56     5      
MULTIPLY              *                               56     9      
MULTIPLY              *                               56     10     
IDENTIFIER            ptr1                            56     12     
ASSIGNMENT            =                               56     17     
BITWISE_AND           &                               56     19     
IDENTIFIER            ptr3                            56     20     
SEMI_COLON            ;                               56     24     
INT                   int                             57     5      
IDENTIFIER            i                               57     9      
ASSIGNMENT            =                               57     11     
INT_CONSTANT          0                               57     12     
COMMA                 ,                               57     13     
IDENTIFIER            n                               57     15     
ASSIGNMENT            =                               57     17     
INT_CONSTANT          1000                            57     19     
SEMI_COLON            ;                               57     23     
WHILE                 while                           58     5      
L_PAREN               (                               58     10     
IDENTIFIER            i                               58     11     
INCREMENT             ++                              58     12     
LESS                  <                               58     15     
IDENTIFIER            n                               58     17     
R_PAREN               )                               58     18     
L_BRACES              {                               58     19     
INT                   int                             59     9      
IDENTIFIER            sieve                           59     13     
L_SQBR                [                               59     18     
INT_CONSTANT          1000                            59     19     
R_SQBR                ]                               59     23     
SEMI_COLON            ;                               59     24     
INT                   int                             60     9      
IDENTIFIER            j                               60     13     
SEMI_COLON            ;                               60     14     
FOR                   for                             61     9      
L_PAREN               (                               61     12     
IDENTIFIER            i                               61     13     
SEMI_COLON            ;                               61     14     
IDENTIFIER            j                               61     15     
LESS                  <                               61     16     
IDENTIFIER            n                               61     17     
SEMI_COLON            ;                               61     18     
IDENTIFIER            j                               61     19     
INCREMENT             ++                              61     20     
R_PAREN               )                               61     22     
L_BRACES              {                               61     23     
IDENTIFIER            sieve                           62     13     
L_SQBR                [                               62     18     
IDENTIFIER            j                               62     19     
R_SQBR                ]                               62     20     
ASSIGNMENT            =                               62     22     
INT_CONSTANT          1                               62     24     
SEMI_COLON            ;                               62     25     
IF                    if                              63     13     
L_PAREN               (                               63     16     
IDENTIFIER            j                               63     17     
MODULUS               %                               63     18     
INT_CONSTANT          2                               63     19     
MODULUS               %                               63     20     
INT_CONSTANT          3                               63     21     
EQUALS                ==                              63     23     
INT_CONSTANT          4                               63     26     
R_PAREN               )                               63     27     
BREAK                 break                           63     28     
SEMI_COLON            ;                               63     33     
ELSE                  else                            64     13     
CONTINUE              continue                        64     18     
SEMI_COLON            ;                               64     26     
R_BRACES              }                               65     9      
IDENTIFIER            i                               66     9      
DECREMENT             --                              66     10     
SEMI_COLON            ;                               66     12     
INT                   int                             67     9      
IDENTIFIER            c                               67     13     
ASSIGNMENT            =                               67     15     
IDENTIFIER            i                               67     17     
INCREMENT             ++                              67     18     
ADD                   +                               67     21     
INT_CONSTANT          1                               67     23     
SEMI_COLON            ;                               67     24     
R_BRACES              }                               68     5      
RETURN                return                          69     5      
REAL_CONSTANT         3.2                             69     12     
SEMI_COLON            ;                               69     15     
R_BRACES              }                               70     1      
