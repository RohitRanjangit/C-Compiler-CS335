Token                 Lexeme                          Line#  Column#
INT                   int                             2      1      
IDENTIFIER            b                               2      5      
SEMI_COLON            ;                               2      6      
STRUCT                struct                          4      1      
IDENTIFIER            A                               4      8      
L_BRACES              {                               4      9      
STRUCT                struct                          5      5      
IDENTIFIER            A                               5      12     
MULTIPLY              *                               5      14     
IDENTIFIER            ptr                             5      15     
SEMI_COLON            ;                               5      18     
INT                   int                             6      5      
IDENTIFIER            a                               6      9      
SEMI_COLON            ;                               6      10     
R_BRACES              }                               7      1      
SEMI_COLON            ;                               7      2      
INT                   int                             9      1      
IDENTIFIER            main                            9      5      
L_PAREN               (                               9      9      
INT                   int                             9      10     
IDENTIFIER            argc                            9      14     
COMMA                 ,                               9      18     
CHAR                  char                            9      20     
IDENTIFIER            argv                            9      25     
L_SQBR                [                               9      29     
INT_CONSTANT          4                               9      30     
R_SQBR                ]                               9      31     
R_PAREN               )                               9      32     
L_BRACES              {                               9      33     
STRUCT                struct                          11     5      
IDENTIFIER            A                               11     12     
MULTIPLY              *                               11     14     
IDENTIFIER            d                               11     15     
SEMI_COLON            ;                               11     16     
IDENTIFIER            d                               12     5      
ARROW                 ->                              12     6      
IDENTIFIER            a                               12     8      
SEMI_COLON            ;                               12     9      
INT                   int                             13     5      
IDENTIFIER            s                               13     9      
ASSIGNMENT            =                               13     11     
SIZEOF                sizeof                          13     13     
L_PAREN               (                               13     19     
IDENTIFIER            d                               13     20     
R_PAREN               )                               13     21     
SEMI_COLON            ;                               13     22     
CHAR                  char                            14     5      
MULTIPLY              *                               14     9      
IDENTIFIER            str                             14     11     
ASSIGNMENT            =                               14     15     
STR_CONSTANT          "aman"                          14     17     
SEMI_COLON            ;                               14     23     
AUTO                  auto                            15     5      
IDENTIFIER            w                               15     10     
ASSIGNMENT            =                               15     12     
INT_CONSTANT          4                               15     14     
SEMI_COLON            ;                               15     15     
FLOAT                 float                           16     5      
IDENTIFIER            cd                              16     11     
SEMI_COLON            ;                               16     13     
FLOAT                 float                           17     5      
IDENTIFIER            a                               17     11     
ASSIGNMENT            =                               17     13     
REAL_CONSTANT         3.2                             17     15     
COMMA                 ,                               17     18     
MULTIPLY              *                               17     20     
IDENTIFIER            ptr                             17     21     
COMMA                 ,                               17     24     
IDENTIFIER            c                               17     26     
ASSIGNMENT            =                               17     27     
IDENTIFIER            cd                              17     28     
SEMI_COLON            ;                               17     30     
INT                   int                             18     5      
MULTIPLY              *                               18     9      
IDENTIFIER            ptr3                            18     11     
ASSIGNMENT            =                               18     16     
BITWISE_AND           &                               18     18     
IDENTIFIER            s                               18     19     
SEMI_COLON            ;                               18     20     
LONG                  long                            19     5      
MULTIPLY              *                               19     9      
MULTIPLY              *                               19     10     
IDENTIFIER            ptr1                            19     12     
ASSIGNMENT            =                               19     17     
BITWISE_AND           &                               19     19     
IDENTIFIER            ptr3                            19     20     
SEMI_COLON            ;                               19     24     
INT                   int                             20     5      
IDENTIFIER            i                               20     9      
ASSIGNMENT            =                               20     11     
INT_CONSTANT          0                               20     12     
COMMA                 ,                               20     13     
IDENTIFIER            n                               20     15     
ASSIGNMENT            =                               20     17     
INT_CONSTANT          1000                            20     19     
SEMI_COLON            ;                               20     23     
WHILE                 while                           21     5      
L_PAREN               (                               21     10     
IDENTIFIER            i                               21     11     
INCREMENT             ++                              21     12     
LESS                  <                               21     15     
IDENTIFIER            n                               21     17     
R_PAREN               )                               21     18     
L_BRACES              {                               21     19     
INT                   int                             22     9      
IDENTIFIER            sieve                           22     13     
L_SQBR                [                               22     18     
INT_CONSTANT          1000                            22     19     
R_SQBR                ]                               22     23     
SEMI_COLON            ;                               22     24     
INT                   int                             23     9      
IDENTIFIER            j                               23     13     
SEMI_COLON            ;                               23     14     
FOR                   for                             24     9      
L_PAREN               (                               24     12     
IDENTIFIER            i                               24     13     
SEMI_COLON            ;                               24     14     
IDENTIFIER            j                               24     15     
LESS                  <                               24     16     
IDENTIFIER            n                               24     17     
SEMI_COLON            ;                               24     18     
IDENTIFIER            j                               24     19     
INCREMENT             ++                              24     20     
R_PAREN               )                               24     22     
L_BRACES              {                               24     23     
IDENTIFIER            sieve                           25     13     
L_SQBR                [                               25     18     
IDENTIFIER            j                               25     19     
R_SQBR                ]                               25     20     
ASSIGNMENT            =                               25     22     
INT_CONSTANT          1                               25     24     
SEMI_COLON            ;                               25     25     
IF                    if                              26     13     
L_PAREN               (                               26     16     
IDENTIFIER            j                               26     17     
MODULUS               %                               26     18     
INT_CONSTANT          2                               26     19     
MODULUS               %                               26     20     
INT_CONSTANT          3                               26     21     
EQUALS                ==                              26     23     
INT_CONSTANT          4                               26     26     
R_PAREN               )                               26     27     
BREAK                 break                           26     28     
SEMI_COLON            ;                               26     33     
ELSE                  else                            27     13     
CONTINUE              continue                        27     18     
SEMI_COLON            ;                               27     26     
R_BRACES              }                               28     9      
IDENTIFIER            i                               29     9      
DECREMENT             --                              29     10     
SEMI_COLON            ;                               29     12     
INT                   int                             30     9      
IDENTIFIER            c                               30     13     
ASSIGNMENT            =                               30     15     
IDENTIFIER            i                               30     17     
INCREMENT             ++                              30     18     
ADD                   +                               30     21     
INT_CONSTANT          1                               30     23     
SEMI_COLON            ;                               30     24     
R_BRACES              }                               31     5      
RETURN                return                          32     5      
REAL_CONSTANT         9.2                             32     12     
SEMI_COLON            ;                               32     15     
R_BRACES              }                               33     1      
