Token                 Lexeme                          Line#  Column#
STRUCT                struct                          2      1      
IDENTIFIER            A                               2      8      
L_BRACES              {                               2      9      
STRUCT                struct                          3      5      
IDENTIFIER            A                               3      12     
MULTIPLY              *                               3      14     
IDENTIFIER            ptr                             3      15     
SEMI_COLON            ;                               3      18     
R_BRACES              }                               4      1      
SEMI_COLON            ;                               4      2      
INT                   int                             6      1      
IDENTIFIER            prime                           6      5      
L_PAREN               (                               6      10     
INT                   int                             6      11     
IDENTIFIER            a                               6      15     
R_PAREN               )                               6      16     
L_BRACES              {                               6      17     
INT                   int                             7      5      
IDENTIFIER            i                               7      9      
SEMI_COLON            ;                               7      10     
FOR                   for                             8      5      
L_PAREN               (                               8      8      
IDENTIFIER            i                               8      9      
ASSIGNMENT            =                               8      11     
INT_CONSTANT          0                               8      12     
SEMI_COLON            ;                               8      14     
IDENTIFIER            i                               8      15     
LESS                  <                               8      16     
IDENTIFIER            a                               8      17     
SEMI_COLON            ;                               8      18     
IDENTIFIER            i                               8      19     
INCREMENT             ++                              8      20     
R_PAREN               )                               8      22     
L_BRACES              {                               8      23     
IF                    if                              9      9      
L_PAREN               (                               9      11     
IDENTIFIER            a                               9      12     
MODULUS               %                               9      13     
IDENTIFIER            i                               9      14     
EQUALS                ==                              9      16     
INT_CONSTANT          0                               9      19     
R_PAREN               )                               9      20     
RETURN                return                          9      21     
IDENTIFIER            i                               9      28     
SEMI_COLON            ;                               9      29     
R_BRACES              }                               10     5      
RETURN                return                          11     5      
INT_CONSTANT          1                               11     12     
SEMI_COLON            ;                               11     13     
R_BRACES              }                               12     1      
INT                   int                             15     1      
IDENTIFIER            main                            15     5      
L_PAREN               (                               15     9      
INT                   int                             15     10     
IDENTIFIER            argc                            15     14     
COMMA                 ,                               15     18     
CHAR                  char                            15     20     
IDENTIFIER            argv                            15     25     
L_SQBR                [                               15     29     
R_SQBR                ]                               15     30     
R_PAREN               )                               15     31     
L_BRACES              {                               15     32     
STRUCT                struct                          17     5      
IDENTIFIER            A                               17     12     
IDENTIFIER            d                               17     14     
SEMI_COLON            ;                               17     15     
INT                   int                             18     5      
IDENTIFIER            s                               18     9      
ASSIGNMENT            =                               18     11     
SIZEOF                sizeof                          18     13     
L_PAREN               (                               18     19     
IDENTIFIER            d                               18     20     
R_PAREN               )                               18     21     
SEMI_COLON            ;                               18     22     
CHAR                  char                            19     5      
MULTIPLY              *                               19     9      
IDENTIFIER            str                             19     11     
ASSIGNMENT            =                               19     15     
L_BRACES              {                               19     17     
CHAR_CONSTANT         'q'                             19     18     
COMMA                 ,                               19     21     
CHAR_CONSTANT         'r'                             19     22     
COMMA                 ,                               19     25     
CHAR_CONSTANT         's'                             19     26     
R_BRACES              }                               19     29     
SEMI_COLON            ;                               19     30     
FLOAT                 float                           20     5      
IDENTIFIER            cd                              20     11     
SEMI_COLON            ;                               20     13     
DOUBLE                double                          21     5      
IDENTIFIER            a                               21     12     
ASSIGNMENT            =                               21     14     
REAL_CONSTANT         3.2                             21     16     
COMMA                 ,                               21     19     
MULTIPLY              *                               21     21     
IDENTIFIER            ptr                             21     22     
COMMA                 ,                               21     25     
IDENTIFIER            c                               21     27     
ASSIGNMENT            =                               21     28     
IDENTIFIER            cd                              21     29     
SEMI_COLON            ;                               21     31     
INT                   int                             22     5      
MULTIPLY              *                               22     9      
IDENTIFIER            ptr3                            22     11     
ASSIGNMENT            =                               22     16     
BITWISE_AND           &                               22     18     
IDENTIFIER            s                               22     19     
SEMI_COLON            ;                               22     20     
LONG                  long                            23     5      
MULTIPLY              *                               23     9      
MULTIPLY              *                               23     10     
IDENTIFIER            ptr1                            23     12     
ASSIGNMENT            =                               23     17     
BITWISE_AND           &                               23     19     
IDENTIFIER            ptr3                            23     20     
SEMI_COLON            ;                               23     24     
INT                   int                             24     5      
IDENTIFIER            i                               24     9      
ASSIGNMENT            =                               24     11     
INT_CONSTANT          0                               24     12     
COMMA                 ,                               24     13     
IDENTIFIER            n                               24     15     
ASSIGNMENT            =                               24     17     
INT_CONSTANT          1000                            24     19     
SEMI_COLON            ;                               24     23     
WHILE                 while                           25     5      
L_PAREN               (                               25     10     
IDENTIFIER            i                               25     11     
INCREMENT             ++                              25     12     
LESS                  <                               25     15     
IDENTIFIER            n                               25     17     
R_PAREN               )                               25     18     
L_BRACES              {                               25     19     
INT                   int                             26     9      
IDENTIFIER            sieve                           26     13     
L_SQBR                [                               26     18     
INT_CONSTANT          1000                            26     19     
R_SQBR                ]                               26     23     
SEMI_COLON            ;                               26     24     
INT                   int                             27     9      
IDENTIFIER            j                               27     13     
SEMI_COLON            ;                               27     14     
FOR                   for                             28     9      
L_PAREN               (                               28     12     
IDENTIFIER            i                               28     13     
SEMI_COLON            ;                               28     14     
IDENTIFIER            j                               28     15     
LESS                  <                               28     16     
IDENTIFIER            n                               28     17     
SEMI_COLON            ;                               28     18     
IDENTIFIER            j                               28     19     
INCREMENT             ++                              28     20     
R_PAREN               )                               28     22     
L_BRACES              {                               28     23     
IDENTIFIER            sieve                           29     13     
L_SQBR                [                               29     18     
IDENTIFIER            j                               29     19     
R_SQBR                ]                               29     20     
ASSIGNMENT            =                               29     22     
INT_CONSTANT          1                               29     24     
SEMI_COLON            ;                               29     25     
IF                    if                              30     13     
L_PAREN               (                               30     16     
IDENTIFIER            j                               30     17     
MODULUS               %                               30     18     
INT_CONSTANT          2                               30     19     
MODULUS               %                               30     20     
INT_CONSTANT          3                               30     21     
EQUALS                ==                              30     23     
INT_CONSTANT          4                               30     26     
R_PAREN               )                               30     27     
BREAK                 break                           30     28     
SEMI_COLON            ;                               30     33     
ELSE                  else                            31     13     
CONTINUE              continue                        31     18     
SEMI_COLON            ;                               31     26     
R_BRACES              }                               32     9      
IDENTIFIER            i                               33     9      
DECREMENT             --                              33     10     
SEMI_COLON            ;                               33     12     
INT                   int                             34     9      
IDENTIFIER            c                               34     13     
ASSIGNMENT            =                               34     15     
IDENTIFIER            i                               34     17     
INCREMENT             ++                              34     18     
ADD                   +                               34     21     
INT_CONSTANT          1                               34     23     
SEMI_COLON            ;                               34     24     
R_BRACES              }                               35     5      
RETURN                return                          36     5      
REAL_CONSTANT         3.2                             36     12     
SEMI_COLON            ;                               36     15     
R_BRACES              }                               37     1      
