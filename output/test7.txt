Token                 Lexeme                          Line#  Column#
INT                   int                             2      1      
IDENTIFIER            b                               2      5      
SEMI_COLON            ;                               2      6      
STRUCT                struct                          4      1      
IDENTIFIER            A                               4      8      
L_BRACES              {                               4      9      
STRUCT                struct                          5      5      
IDENTIFIER            A                               5      12     
MULTIPLY              *                               5      14     
IDENTIFIER            ptr                             5      15     
SEMI_COLON            ;                               5      18     
INT                   int                             6      5      
IDENTIFIER            a                               6      9      
SEMI_COLON            ;                               6      10     
R_BRACES              }                               7      1      
SEMI_COLON            ;                               7      2      
INT                   int                             9      1      
IDENTIFIER            main                            9      5      
L_PAREN               (                               9      9      
INT                   int                             9      10     
IDENTIFIER            argc                            9      14     
COMMA                 ,                               9      18     
CHAR                  char                            9      20     
IDENTIFIER            argv                            9      25     
L_SQBR                [                               9      29     
INT_CONSTANT          4                               9      30     
R_SQBR                ]                               9      31     
R_PAREN               )                               9      32     
L_BRACES              {                               9      33     
STRUCT                struct                          11     5      
IDENTIFIER            A                               11     12     
MULTIPLY              *                               11     14     
IDENTIFIER            d                               11     15     
SEMI_COLON            ;                               11     16     
IDENTIFIER            d                               12     5      
ARROW                 ->                              12     6      
IDENTIFIER            a                               12     8      
SEMI_COLON            ;                               12     9      
INT                   int                             13     5      
IDENTIFIER            s                               13     9      
ASSIGNMENT            =                               13     11     
SIZEOF                sizeof                          13     13     
L_PAREN               (                               13     19     
IDENTIFIER            d                               13     20     
R_PAREN               )                               13     21     
SEMI_COLON            ;                               13     22     
CHAR                  char                            14     5      
MULTIPLY              *                               14     9      
IDENTIFIER            str                             14     11     
ASSIGNMENT            =                               14     15     
L_BRACES              {                               14     17     
CHAR_CONSTANT         'q'                             14     18     
COMMA                 ,                               14     21     
CHAR_CONSTANT         'r'                             14     22     
COMMA                 ,                               14     25     
CHAR_CONSTANT         's'                             14     26     
R_BRACES              }                               14     29     
SEMI_COLON            ;                               14     30     
FLOAT                 float                           15     5      
IDENTIFIER            cd                              15     11     
SEMI_COLON            ;                               15     13     
DOUBLE                double                          16     5      
IDENTIFIER            a                               16     12     
ASSIGNMENT            =                               16     14     
REAL_CONSTANT         3.2                             16     16     
COMMA                 ,                               16     19     
MULTIPLY              *                               16     21     
IDENTIFIER            ptr                             16     22     
COMMA                 ,                               16     25     
IDENTIFIER            c                               16     27     
ASSIGNMENT            =                               16     28     
IDENTIFIER            cd                              16     29     
SEMI_COLON            ;                               16     31     
INT                   int                             17     5      
MULTIPLY              *                               17     9      
IDENTIFIER            ptr3                            17     11     
ASSIGNMENT            =                               17     16     
BITWISE_AND           &                               17     18     
IDENTIFIER            s                               17     19     
SEMI_COLON            ;                               17     20     
LONG                  long                            18     5      
MULTIPLY              *                               18     9      
MULTIPLY              *                               18     10     
IDENTIFIER            ptr1                            18     12     
ASSIGNMENT            =                               18     17     
BITWISE_AND           &                               18     19     
IDENTIFIER            ptr3                            18     20     
SEMI_COLON            ;                               18     24     
INT                   int                             19     5      
IDENTIFIER            i                               19     9      
ASSIGNMENT            =                               19     11     
INT_CONSTANT          0                               19     12     
COMMA                 ,                               19     13     
IDENTIFIER            n                               19     15     
ASSIGNMENT            =                               19     17     
INT_CONSTANT          1000                            19     19     
SEMI_COLON            ;                               19     23     
WHILE                 while                           20     5      
L_PAREN               (                               20     10     
IDENTIFIER            i                               20     11     
INCREMENT             ++                              20     12     
LESS                  <                               20     15     
IDENTIFIER            n                               20     17     
R_PAREN               )                               20     18     
L_BRACES              {                               20     19     
INT                   int                             21     9      
IDENTIFIER            sieve                           21     13     
L_SQBR                [                               21     18     
INT_CONSTANT          1000                            21     19     
R_SQBR                ]                               21     23     
SEMI_COLON            ;                               21     24     
INT                   int                             22     9      
IDENTIFIER            j                               22     13     
SEMI_COLON            ;                               22     14     
FOR                   for                             23     9      
L_PAREN               (                               23     12     
IDENTIFIER            i                               23     13     
SEMI_COLON            ;                               23     14     
IDENTIFIER            j                               23     15     
LESS                  <                               23     16     
IDENTIFIER            n                               23     17     
SEMI_COLON            ;                               23     18     
IDENTIFIER            j                               23     19     
INCREMENT             ++                              23     20     
R_PAREN               )                               23     22     
L_BRACES              {                               23     23     
IDENTIFIER            sieve                           24     13     
L_SQBR                [                               24     18     
IDENTIFIER            j                               24     19     
R_SQBR                ]                               24     20     
ASSIGNMENT            =                               24     22     
INT_CONSTANT          1                               24     24     
SEMI_COLON            ;                               24     25     
IF                    if                              25     13     
L_PAREN               (                               25     16     
IDENTIFIER            j                               25     17     
MODULUS               %                               25     18     
INT_CONSTANT          2                               25     19     
MODULUS               %                               25     20     
INT_CONSTANT          3                               25     21     
EQUALS                ==                              25     23     
INT_CONSTANT          4                               25     26     
R_PAREN               )                               25     27     
BREAK                 break                           25     28     
SEMI_COLON            ;                               25     33     
ELSE                  else                            26     13     
CONTINUE              continue                        26     18     
SEMI_COLON            ;                               26     26     
R_BRACES              }                               27     9      
IDENTIFIER            i                               28     9      
DECREMENT             --                              28     10     
SEMI_COLON            ;                               28     12     
INT                   int                             29     9      
IDENTIFIER            c                               29     13     
ASSIGNMENT            =                               29     15     
IDENTIFIER            i                               29     17     
INCREMENT             ++                              29     18     
ADD                   +                               29     21     
INT_CONSTANT          1                               29     23     
SEMI_COLON            ;                               29     24     
R_BRACES              }                               30     5      
RETURN                return                          31     5      
REAL_CONSTANT         3.2                             31     12     
SEMI_COLON            ;                               31     15     
R_BRACES              }                               32     1      
