Token                 Lexeme                          Line#  Column#
INT                   int                             1      1      
IDENTIFIER            a                               1      5      
COMMA                 ,                               1      6      
IDENTIFIER            b                               1      8      
COMMA                 ,                               1      9      
IDENTIFIER            c                               1      10     
SEMI_COLON            ;                               1      11     
INT                   int                             3      1      
IDENTIFIER            main                            3      5      
L_PAREN               (                               3      9      
R_PAREN               )                               3      10     
SEMI_COLON            ;                               3      11     
STRUCT                struct                          5      1      
IDENTIFIER            main                            5      8      
L_BRACES              {                               5      12     
INT                   int                             6      5      
IDENTIFIER            f                               6      9      
SEMI_COLON            ;                               6      10     
STRUCT                struct                          7      5      
IDENTIFIER            main                            7      12     
MULTIPLY              *                               7      16     
IDENTIFIER            main                            7      18     
SEMI_COLON            ;                               7      22     
R_BRACES              }                               8      1      
SEMI_COLON            ;                               8      2      
STRUCT                struct                          11     1      
IDENTIFIER            Node                            11     8      
L_BRACES              {                               11     12     
INT                   int                             12     5      
IDENTIFIER            a                               12     9      
SEMI_COLON            ;                               12     10     
INT                   int                             13     5      
IDENTIFIER            b                               13     9      
SEMI_COLON            ;                               13     10     
STRUCT                struct                          14     5      
IDENTIFIER            Node                            14     12     
MULTIPLY              *                               14     16     
IDENTIFIER            next                            14     18     
COMMA                 ,                               14     22     
MULTIPLY              *                               14     24     
IDENTIFIER            ptr                             14     25     
SEMI_COLON            ;                               14     28     
STRUCT                struct                          15     5      
IDENTIFIER            Node                            15     12     
MULTIPLY              *                               15     16     
IDENTIFIER            left                            15     18     
SEMI_COLON            ;                               15     22     
R_BRACES              }                               16     1      
SEMI_COLON            ;                               16     2      
VOID                  void                            18     1      
IDENTIFIER            insert                          18     6      
L_PAREN               (                               18     12     
R_PAREN               )                               18     13     
L_BRACES              {                               18     14     
STRUCT                struct                          19     5      
IDENTIFIER            Node                            19     12     
IDENTIFIER            a                               19     17     
SEMI_COLON            ;                               19     18     
STRUCT                struct                          20     5      
IDENTIFIER            Node                            20     12     
MULTIPLY              *                               20     16     
IDENTIFIER            ptr                             20     18     
ASSIGNMENT            =                               20     22     
BITWISE_AND           &                               20     24     
IDENTIFIER            a                               20     25     
SEMI_COLON            ;                               20     26     
IDENTIFIER            ptr                             21     5      
ARROW                 ->                              21     8      
IDENTIFIER            a                               21     10     
ASSIGNMENT            =                               21     12     
INT_CONSTANT          45                              21     14     
SEMI_COLON            ;                               21     16     
IDENTIFIER            ptr                             22     5      
ARROW                 ->                              22     8      
IDENTIFIER            next                            22     10     
ASSIGNMENT            =                               22     15     
NULL                  NULL                            22     17     
SEMI_COLON            ;                               22     21     
R_BRACES              }                               23     1      
INT                   int                             25     1      
MULTIPLY              *                               25     4      
IDENTIFIER            foo                             25     6      
L_PAREN               (                               25     9      
INT                   int                             25     10     
IDENTIFIER            t                               25     14     
COMMA                 ,                               25     15     
INT                   int                             25     17     
IDENTIFIER            u                               25     21     
COMMA                 ,                               25     22     
CHAR                  char                            25     24     
IDENTIFIER            str                             25     29     
L_SQBR                [                               25     32     
INT_CONSTANT          24                              25     33     
R_SQBR                ]                               25     35     
R_PAREN               )                               25     36     
L_BRACES              {                               25     37     
WHILE                 while                           26     5      
L_PAREN               (                               26     11     
IDENTIFIER            t                               26     12     
DECREMENT             --                              26     13     
R_PAREN               )                               26     15     
L_BRACES              {                               27     5      
INT                   int                             28     9      
IDENTIFIER            i                               28     13     
SEMI_COLON            ;                               28     14     
IDENTIFIER            i                               29     9      
ASSIGNMENT            =                               29     10     
INT_CONSTANT          0                               29     11     
SEMI_COLON            ;                               29     12     
FOR                   for                             30     9      
L_PAREN               (                               30     12     
IDENTIFIER            i                               30     13     
ASSIGNMENT            =                               30     14     
INT_CONSTANT          0                               30     15     
SEMI_COLON            ;                               30     16     
IDENTIFIER            i                               30     17     
LESS                  <                               30     18     
INT_CONSTANT          24                              30     19     
SEMI_COLON            ;                               30     21     
IDENTIFIER            i                               30     22     
INCREMENT             ++                              30     23     
R_PAREN               )                               30     25     
IDENTIFIER            str                             30     26     
L_SQBR                [                               30     29     
IDENTIFIER            i                               30     30     
R_SQBR                ]                               30     31     
ASSIGNMENT            =                               30     33     
L_PAREN               (                               30     35     
CHAR                  char                            30     36     
R_PAREN               )                               30     40     
L_PAREN               (                               30     41     
CHAR_CONSTANT         'a'                             30     42     
ADD                   +                               30     46     
IDENTIFIER            i                               30     48     
R_PAREN               )                               30     49     
SEMI_COLON            ;                               30     50     
R_BRACES              }                               31     5      
RETURN                return                          32     5      
L_PAREN               (                               32     12     
VOID                  void                            32     13     
MULTIPLY              *                               32     17     
R_PAREN               )                               32     18     
IDENTIFIER            t                               32     19     
ADD                   +                               32     21     
IDENTIFIER            u                               32     23     
SEMI_COLON            ;                               32     24     
R_BRACES              }                               33     1      
INT                   int                             35     1      
IDENTIFIER            zoo                             35     5      
L_PAREN               (                               35     8      
FLOAT                 float                           35     9      
IDENTIFIER            a                               35     15     
COMMA                 ,                               35     16     
FLOAT                 float                           35     18     
IDENTIFIER            d                               35     24     
R_PAREN               )                               35     25     
L_BRACES              {                               35     26     
RETURN                return                          36     5      
L_PAREN               (                               36     12     
INT                   int                             36     13     
R_PAREN               )                               36     16     
IDENTIFIER            a                               36     17     
MODULUS               %                               36     18     
L_PAREN               (                               36     19     
LONG                  long                            36     20     
R_PAREN               )                               36     24     
IDENTIFIER            d                               36     25     
SEMI_COLON            ;                               36     26     
R_BRACES              }                               37     1      
INT                   int                             39     1      
IDENTIFIER            ter                             39     5      
L_PAREN               (                               39     8      
INT                   int                             39     9      
IDENTIFIER            c                               39     13     
R_PAREN               )                               39     14     
L_BRACES              {                               39     15     
RETURN                return                          40     5      
IDENTIFIER            a                               40     12     
GREATER               >                               40     14     
IDENTIFIER            b                               40     16     
QUES_MARK             ?                               40     18     
IDENTIFIER            a                               40     20     
COLON                 :                               40     21     
L_PAREN               (                               40     22     
IDENTIFIER            b                               40     23     
MODULUS               %                               40     25     
IDENTIFIER            a                               40     26     
QUES_MARK             ?                               40     28     
IDENTIFIER            c                               40     30     
COLON                 :                               40     32     
IDENTIFIER            c                               40     33     
R_PAREN               )                               40     34     
SEMI_COLON            ;                               40     35     
R_BRACES              }                               41     1      
INT                   int                             43     1      
IDENTIFIER            main                            43     5      
L_PAREN               (                               43     9      
R_PAREN               )                               43     10     
L_BRACES              {                               43     11     
STRUCT                struct                          45     5      
IDENTIFIER            inside                          45     12     
L_BRACES              {                               45     18     
INT                   int                             46     9      
IDENTIFIER            x                               46     13     
SEMI_COLON            ;                               46     14     
STRUCT                struct                          47     9      
IDENTIFIER            inside                          47     16     
MULTIPLY              *                               47     23     
IDENTIFIER            s                               47     24     
SEMI_COLON            ;                               47     25     
R_BRACES              }                               48     5      
SEMI_COLON            ;                               48     6      
STRUCT                struct                          50     5      
IDENTIFIER            inside                          50     12     
IDENTIFIER            main1                           50     19     
SEMI_COLON            ;                               50     24     
IDENTIFIER            main1                           52     5      
DOT                   .                               52     10     
IDENTIFIER            x                               52     11     
ASSIGNMENT            =                               52     12     
IDENTIFIER            main1                           52     14     
DOT                   .                               52     19     
IDENTIFIER            s                               52     20     
ARROW                 ->                              52     21     
IDENTIFIER            x                               52     23     
SEMI_COLON            ;                               52     24     
INT                   int                             54     5      
IDENTIFIER            a                               54     9      
L_SQBR                [                               54     10     
INT_CONSTANT          45                              54     11     
R_SQBR                ]                               54     13     
L_SQBR                [                               54     14     
INT_CONSTANT          50                              54     15     
R_SQBR                ]                               54     17     
SEMI_COLON            ;                               54     18     
INT                   int                             55     5      
IDENTIFIER            z                               55     9      
ASSIGNMENT            =                               55     11     
BITWISE_AND           &                               55     13     
IDENTIFIER            a                               55     14     
SEMI_COLON            ;                               55     15     
IDENTIFIER            z                               56     5      
ASSIGNMENT            =                               56     7      
INT_CONSTANT          0                               56     9      
SEMI_COLON            ;                               56     10     
DO                    do                              57     5      
L_BRACES              {                               57     7      
INT                   int                             58     9      
IDENTIFIER            j                               58     13     
ASSIGNMENT            =                               58     15     
IDENTIFIER            z                               58     17     
ADD                   +                               58     19     
INT_CONSTANT          1                               58     21     
SEMI_COLON            ;                               58     22     
IDENTIFIER            a                               59     9      
L_SQBR                [                               59     10     
INT_CONSTANT          12                              59     11     
R_SQBR                ]                               59     13     
L_SQBR                [                               59     14     
INT_CONSTANT          13                              59     15     
R_SQBR                ]                               59     17     
ASSIGNMENT            =                               59     19     
IDENTIFIER            j                               59     21     
INCREMENT             ++                              59     22     
SEMI_COLON            ;                               59     24     
IDENTIFIER            a                               60     9      
L_SQBR                [                               60     10     
INT_CONSTANT          9                               60     11     
R_SQBR                ]                               60     12     
L_SQBR                [                               60     13     
INT_CONSTANT          15                              60     14     
R_SQBR                ]                               60     16     
ASSIGNMENT            =                               60     18     
INT_CONSTANT          0                               60     20     
SEMI_COLON            ;                               60     21     
IF                    if                              61     9      
L_PAREN               (                               61     11     
IDENTIFIER            j                               61     12     
EQUALS                ==                              61     14     
INT_CONSTANT          1000                            61     17     
ADD                   +                               61     22     
L_PAREN               (                               61     24     
FLOAT                 float                           61     25     
R_PAREN               )                               61     30     
INT_CONSTANT          1                               61     31     
R_PAREN               )                               61     32     
L_BRACES              {                               61     33     
BREAK                 break                           62     13     
SEMI_COLON            ;                               62     18     
R_BRACES              }                               63     9      
ELSE                  else                            63     10     
IF                    if                              63     15     
L_PAREN               (                               63     17     
IDENTIFIER            j                               63     18     
NOT_EQUALS            !=                              63     20     
ADD                   +                               63     23     
INT_CONSTANT          23                              63     24     
ADD                   +                               63     28     
L_PAREN               (                               63     30     
FLOAT                 float                           63     31     
R_PAREN               )                               63     36     
REAL_CONSTANT         23.4                            63     37     
R_PAREN               )                               63     41     
CONTINUE              continue                        63     42     
SEMI_COLON            ;                               63     50     
IDENTIFIER            z                               64     9      
ASSIGNMENT            =                               64     11     
INCREMENT             ++                              64     13     
IDENTIFIER            z                               64     15     
SEMI_COLON            ;                               64     16     
R_BRACES              }                               65     5      
WHILE                 while                           65     6      
L_PAREN               (                               65     11     
IDENTIFIER            z                               65     12     
LESS                  <                               65     14     
INT_CONSTANT          100                             65     16     
R_PAREN               )                               65     19     
SEMI_COLON            ;                               65     20     
INT                   int                             67     5      
IDENTIFIER            cc                              67     9      
ASSIGNMENT            =                               67     12     
INT_CONSTANT          0                               67     14     
SEMI_COLON            ;                               67     15     
IDENTIFIER            cc                              68     5      
ASSIGNMENT            =                               68     8      
INT_CONSTANT          4                               68     10     
MULTIPLY              *                               68     11     
INT_CONSTANT          5                               68     12     
ADD                   +                               68     13     
INT_CONSTANT          1000292                         68     14     
SEMI_COLON            ;                               68     21     
FOR                   for                             69     5      
L_PAREN               (                               69     8      
SEMI_COLON            ;                               69     9      
SEMI_COLON            ;                               69     10     
IDENTIFIER            cc                              69     11     
ADD_ASSIGNMENT        +=                              69     14     
IDENTIFIER            cc                              69     17     
MODULUS               %                               69     19     
INT_CONSTANT          2                               69     20     
ADD                   +                               69     22     
REAL_CONSTANT         3.45                            69     24     
R_PAREN               )                               69     28     
L_BRACES              {                               69     29     
BOOL                  bool                            70     9      
IDENTIFIER            flag                            70     14     
ASSIGNMENT            =                               70     19     
INT_CONSTANT          1                               70     21     
SEMI_COLON            ;                               70     22     
IF                    if                              71     9      
L_PAREN               (                               71     11     
IDENTIFIER            cc                              71     12     
MODULUS               %                               71     14     
INT_CONSTANT          22                              71     15     
MODULUS               %                               71     18     
INT_CONSTANT          34                              71     20     
R_PAREN               )                               71     22     
L_BRACES              {                               71     23     
INT                   int                             72     13     
IDENTIFIER            k                               72     17     
SEMI_COLON            ;                               72     18     
FOR                   for                             73     13     
L_PAREN               (                               73     16     
IDENTIFIER            k                               73     17     
ASSIGNMENT            =                               73     19     
INT_CONSTANT          23                              73     21     
SEMI_COLON            ;                               73     23     
IDENTIFIER            k                               73     24     
LESS                  <                               73     25     
INT_CONSTANT          46                              73     26     
SEMI_COLON            ;                               73     28     
R_PAREN               )                               73     29     
L_BRACES              {                               73     30     
IF                    if                              74     17     
L_PAREN               (                               74     19     
L_PAREN               (                               74     20     
IDENTIFIER            k                               74     21     
NOT_EQUALS            !=                              74     23     
INT_CONSTANT          0                               74     26     
R_PAREN               )                               74     27     
LOGICAL_AND           &&                              74     29     
IDENTIFIER            cc                              74     32     
EQUALS                ==                              74     35     
IDENTIFIER            k                               74     38     
R_PAREN               )                               74     39     
IDENTIFIER            flag                            74     40     
ASSIGNMENT            =                               74     45     
INT_CONSTANT          0                               74     47     
SEMI_COLON            ;                               74     48     
ELSE                  else                            75     17     
BREAK                 break                           75     22     
SEMI_COLON            ;                               75     27     
R_BRACES              }                               76     13     
FOR                   for                             77     13     
L_PAREN               (                               77     16     
SEMI_COLON            ;                               77     17     
IDENTIFIER            flag                            77     18     
NOT_EQUALS            !=                              77     22     
IDENTIFIER            flag                            77     24     
ADD                   +                               77     29     
INT_CONSTANT          3                               77     31     
SEMI_COLON            ;                               77     32     
R_PAREN               )                               77     33     
L_BRACES              {                               77     34     
CONTINUE              continue                        78     17     
SEMI_COLON            ;                               78     25     
IF                    if                              79     17     
L_PAREN               (                               79     19     
IDENTIFIER            flag                            79     20     
BITWISE_XOR           ^                               79     25     
INT_CONSTANT          3                               79     27     
R_PAREN               )                               79     28     
BREAK                 break                           79     29     
SEMI_COLON            ;                               79     34     
R_BRACES              }                               80     13     
R_BRACES              }                               81     9      
IF                    if                              82     9      
L_PAREN               (                               82     11     
LOGICAL_NOT           !                               82     12     
IDENTIFIER            flag                            82     13     
R_PAREN               )                               82     17     
CONTINUE              continue                        82     18     
SEMI_COLON            ;                               82     26     
R_BRACES              }                               83     5      
SWITCH                switch                          85     5      
L_PAREN               (                               85     12     
L_PAREN               (                               85     13     
LONG                  long                            85     14     
R_PAREN               )                               85     18     
INT_CONSTANT          23                              85     19     
R_PAREN               )                               85     21     
L_BRACES              {                               86     5      
CASE                  case                            87     5      
INT_CONSTANT          23                              87     10     
COLON                 :                               87     12     
L_BRACES              {                               87     14     
MULTIPLY              *                               87     15     
MULTIPLY              *                               87     16     
IDENTIFIER            a                               87     17     
ADD_ASSIGNMENT        +=                              87     19     
IDENTIFIER            b                               87     22     
SEMI_COLON            ;                               87     23     
BREAK                 break                           87     24     
SEMI_COLON            ;                               87     29     
R_BRACES              }                               87     30     
DEFAULT               default                         88     5      
COLON                 :                               88     12     
L_BRACES              {                               88     13     
IDENTIFIER            b                               89     9      
ADD_ASSIGNMENT        +=                              89     11     
MULTIPLY              *                               89     14     
MULTIPLY              *                               89     15     
IDENTIFIER            a                               89     16     
LOGICAL_OR            ||                              89     18     
IDENTIFIER            c                               89     21     
ADD                   +                               89     23     
INT_CONSTANT          4                               89     25     
SEMI_COLON            ;                               89     26     
BREAK                 break                           90     9      
SEMI_COLON            ;                               90     14     
R_BRACES              }                               91     5      
R_BRACES              }                               92     5      
RETURN                return                          94     5      
MULTIPLY              *                               94     12     
L_PAREN               (                               94     13     
IDENTIFIER            foo                             94     14     
L_PAREN               (                               94     17     
INT_CONSTANT          4                               94     18     
COMMA                 ,                               94     19     
INT_CONSTANT          5                               94     20     
COMMA                 ,                               94     21     
STR_CONSTANT          "str24"                         94     22     
R_PAREN               )                               94     29     
ADD                   +                               94     31     
L_PAREN               (                               94     33     
LONG                  long                            94     34     
R_PAREN               )                               94     38     
BITWISE_AND           &                               94     39     
IDENTIFIER            z                               94     40     
R_PAREN               )                               94     41     
SEMI_COLON            ;                               94     42     
R_BRACES              }                               95     1      
