Token                 Lexeme                          Line#  Column#
STRUCT                struct                          68     1      
IDENTIFIER            node                            68     8      
L_BRACES              {                               68     13     
INT                   int                             69     5      
IDENTIFIER            data                            69     9      
SEMI_COLON            ;                               69     13     
STRUCT                struct                          70     5      
IDENTIFIER            node                            70     12     
MULTIPLY              *                               70     16     
IDENTIFIER            left                            70     18     
SEMI_COLON            ;                               70     22     
STRUCT                struct                          71     5      
IDENTIFIER            node                            71     12     
MULTIPLY              *                               71     16     
IDENTIFIER            right                           71     18     
SEMI_COLON            ;                               71     23     
R_BRACES              }                               72     1      
SEMI_COLON            ;                               72     2      
VOID                  void                            74     1      
IDENTIFIER            printf                          74     6      
L_PAREN               (                               74     12     
CHAR                  char                            74     13     
IDENTIFIER            a                               74     18     
L_SQBR                [                               74     19     
INT_CONSTANT          100                             74     20     
R_SQBR                ]                               74     23     
COMMA                 ,                               74     24     
INT                   int                             74     26     
IDENTIFIER            b                               74     30     
R_PAREN               )                               74     31     
SEMI_COLON            ;                               74     32     
VOID                  void                            75     1      
IDENTIFIER            scanf                           75     6      
L_PAREN               (                               75     11     
CHAR                  char                            75     12     
IDENTIFIER            a                               75     17     
L_SQBR                [                               75     18     
INT_CONSTANT          100                             75     19     
R_SQBR                ]                               75     22     
COMMA                 ,                               75     23     
INT                   int                             75     25     
MULTIPLY              *                               75     29     
IDENTIFIER            b                               75     30     
R_PAREN               )                               75     31     
SEMI_COLON            ;                               75     32     
VOID                  void                            76     1      
IDENTIFIER            printfs                         76     6      
L_PAREN               (                               76     13     
CHAR                  char                            76     14     
IDENTIFIER            a                               76     19     
L_SQBR                [                               76     20     
INT_CONSTANT          100                             76     21     
R_SQBR                ]                               76     24     
R_PAREN               )                               76     25     
SEMI_COLON            ;                               76     26     
VOID                  void                            77     1      
MULTIPLY              *                               77     6      
IDENTIFIER            malloc                          77     7      
L_PAREN               (                               77     13     
INT                   int                             77     14     
IDENTIFIER            s                               77     18     
R_PAREN               )                               77     19     
SEMI_COLON            ;                               77     20     
STRUCT                struct                          79     1      
IDENTIFIER            node                            79     8      
MULTIPLY              *                               79     12     
IDENTIFIER            newNode                         79     14     
L_PAREN               (                               79     21     
INT                   int                             79     22     
IDENTIFIER            data                            79     26     
R_PAREN               )                               79     30     
L_BRACES              {                               80     1      
STRUCT                struct                          81     5      
IDENTIFIER            node                            81     12     
MULTIPLY              *                               81     16     
IDENTIFIER            node                            81     18     
ASSIGNMENT            =                               81     23     
L_PAREN               (                               81     25     
STRUCT                struct                          81     26     
IDENTIFIER            node                            81     33     
MULTIPLY              *                               81     37     
R_PAREN               )                               81     38     
IDENTIFIER            malloc                          81     39     
L_PAREN               (                               81     45     
SIZEOF                sizeof                          81     46     
L_PAREN               (                               81     52     
STRUCT                struct                          81     53     
IDENTIFIER            node                            81     60     
R_PAREN               )                               81     64     
R_PAREN               )                               81     65     
SEMI_COLON            ;                               81     66     
IDENTIFIER            node                            82     5      
ARROW                 ->                              82     9      
IDENTIFIER            data                            82     11     
ASSIGNMENT            =                               82     16     
IDENTIFIER            data                            82     18     
SEMI_COLON            ;                               82     22     
IDENTIFIER            node                            83     5      
ARROW                 ->                              83     9      
IDENTIFIER            left                            83     11     
ASSIGNMENT            =                               83     16     
NULL                  NULL                            83     18     
SEMI_COLON            ;                               83     22     
IDENTIFIER            node                            84     5      
ARROW                 ->                              84     9      
IDENTIFIER            right                           84     11     
ASSIGNMENT            =                               84     17     
NULL                  NULL                            84     19     
SEMI_COLON            ;                               84     23     
RETURN                return                          86     5      
L_PAREN               (                               86     12     
IDENTIFIER            node                            86     13     
R_PAREN               )                               86     17     
SEMI_COLON            ;                               86     18     
R_BRACES              }                               87     1      
VOID                  void                            90     1      
IDENTIFIER            printInorder                    90     6      
L_PAREN               (                               90     18     
STRUCT                struct                          90     19     
IDENTIFIER            node                            90     26     
MULTIPLY              *                               90     30     
IDENTIFIER            node                            90     32     
R_PAREN               )                               90     36     
L_BRACES              {                               91     1      
IF                    if                              92     5      
L_PAREN               (                               92     8      
IDENTIFIER            node                            92     9      
EQUALS                ==                              92     14     
NULL                  NULL                            92     17     
R_PAREN               )                               92     21     
RETURN                return                          93     9      
SEMI_COLON            ;                               93     15     
IDENTIFIER            printInorder                    95     5      
L_PAREN               (                               95     17     
IDENTIFIER            node                            95     18     
ARROW                 ->                              95     22     
IDENTIFIER            left                            95     24     
R_PAREN               )                               95     28     
SEMI_COLON            ;                               95     29     
IDENTIFIER            printf                          96     5      
L_PAREN               (                               96     11     
STR_CONSTANT          "%ld "                          96     12     
COMMA                 ,                               96     18     
IDENTIFIER            node                            96     20     
ARROW                 ->                              96     24     
IDENTIFIER            data                            96     26     
R_PAREN               )                               96     30     
SEMI_COLON            ;                               96     31     
IDENTIFIER            printInorder                    97     5      
L_PAREN               (                               97     17     
IDENTIFIER            node                            97     18     
ARROW                 ->                              97     22     
IDENTIFIER            right                           97     24     
R_PAREN               )                               97     29     
SEMI_COLON            ;                               97     30     
R_BRACES              }                               98     1      
STRUCT                struct                          100    1      
IDENTIFIER            node                            100    8      
MULTIPLY              *                               100    12     
IDENTIFIER            insert                          100    14     
L_PAREN               (                               100    20     
STRUCT                struct                          100    21     
IDENTIFIER            node                            100    28     
MULTIPLY              *                               100    32     
IDENTIFIER            root                            100    33     
COMMA                 ,                               100    37     
INT                   int                             100    39     
IDENTIFIER            b                               100    43     
R_PAREN               )                               100    44     
L_BRACES              {                               100    45     
IF                    if                              101    5      
L_PAREN               (                               101    7      
IDENTIFIER            root                            101    8      
R_PAREN               )                               101    12     
L_BRACES              {                               101    13     
IF                    if                              102    9      
L_PAREN               (                               102    11     
IDENTIFIER            b                               102    12     
GREATER_EQUALS        >=                              102    14     
IDENTIFIER            root                            102    17     
ARROW                 ->                              102    21     
IDENTIFIER            data                            102    23     
R_PAREN               )                               102    27     
L_BRACES              {                               102    28     
IDENTIFIER            root                            103    13     
ARROW                 ->                              103    17     
IDENTIFIER            right                           103    19     
ASSIGNMENT            =                               103    25     
IDENTIFIER            insert                          103    27     
L_PAREN               (                               103    33     
IDENTIFIER            root                            103    34     
ARROW                 ->                              103    38     
IDENTIFIER            right                           103    40     
COMMA                 ,                               103    45     
IDENTIFIER            b                               103    47     
R_PAREN               )                               103    48     
SEMI_COLON            ;                               103    49     
RETURN                return                          104    13     
IDENTIFIER            root                            104    20     
SEMI_COLON            ;                               104    24     
R_BRACES              }                               105    9      
IDENTIFIER            root                            106    9      
ARROW                 ->                              106    13     
IDENTIFIER            left                            106    15     
ASSIGNMENT            =                               106    20     
IDENTIFIER            insert                          106    22     
L_PAREN               (                               106    28     
IDENTIFIER            root                            106    29     
ARROW                 ->                              106    33     
IDENTIFIER            left                            106    35     
COMMA                 ,                               106    39     
IDENTIFIER            b                               106    41     
R_PAREN               )                               106    42     
SEMI_COLON            ;                               106    43     
RETURN                return                          107    9      
IDENTIFIER            root                            107    16     
SEMI_COLON            ;                               107    20     
R_BRACES              }                               108    5      
RETURN                return                          109    5      
IDENTIFIER            root                            109    12     
ASSIGNMENT            =                               109    17     
IDENTIFIER            newNode                         109    19     
L_PAREN               (                               109    26     
IDENTIFIER            b                               109    27     
R_PAREN               )                               109    28     
SEMI_COLON            ;                               109    29     
R_BRACES              }                               110    1      
INT                   int                             112    1      
IDENTIFIER            main                            112    5      
L_PAREN               (                               112    9      
R_PAREN               )                               112    10     
L_BRACES              {                               112    11     
INT                   int                             113    5      
IDENTIFIER            n                               113    9      
SEMI_COLON            ;                               113    10     
IDENTIFIER            printfs                         114    5      
L_PAREN               (                               114    12     
STR_CONSTANT          "enter number of elements in tree: "  114    13     
R_PAREN               )                               114    49     
SEMI_COLON            ;                               114    50     
IDENTIFIER            scanf                           115    5      
L_PAREN               (                               115    10     
STR_CONSTANT          "%ld"                           115    11     
COMMA                 ,                               115    16     
BITWISE_AND           &                               115    18     
IDENTIFIER            n                               115    19     
R_PAREN               )                               115    20     
SEMI_COLON            ;                               115    21     
IDENTIFIER            printf                          116    5      
L_PAREN               (                               116    11     
STR_CONSTANT          "enter %ld "                    116    12     
COMMA                 ,                               116    24     
IDENTIFIER            n                               116    26     
R_PAREN               )                               116    27     
SEMI_COLON            ;                               116    28     
IDENTIFIER            printfs                         117    5      
L_PAREN               (                               117    12     
STR_CONSTANT          "numbers\n"                     117    13     
R_PAREN               )                               117    24     
SEMI_COLON            ;                               117    25     
STRUCT                struct                          118    5      
IDENTIFIER            node                            118    12     
MULTIPLY              *                               118    16     
IDENTIFIER            root                            118    17     
ASSIGNMENT            =                               118    22     
NULL                  NULL                            118    24     
SEMI_COLON            ;                               118    28     
WHILE                 while                           119    5      
L_PAREN               (                               119    10     
IDENTIFIER            n                               119    11     
DECREMENT             --                              119    12     
R_PAREN               )                               119    14     
L_BRACES              {                               119    15     
INT                   int                             120    9      
IDENTIFIER            i                               120    13     
SEMI_COLON            ;                               120    14     
IDENTIFIER            scanf                           121    9      
L_PAREN               (                               121    14     
STR_CONSTANT          "%ld"                           121    15     
COMMA                 ,                               121    20     
BITWISE_AND           &                               121    22     
IDENTIFIER            i                               121    23     
R_PAREN               )                               121    24     
SEMI_COLON            ;                               121    25     
IDENTIFIER            root                            122    9      
ASSIGNMENT            =                               122    14     
IDENTIFIER            insert                          122    16     
L_PAREN               (                               122    22     
IDENTIFIER            root                            122    23     
COMMA                 ,                               122    27     
IDENTIFIER            i                               122    29     
R_PAREN               )                               122    30     
SEMI_COLON            ;                               122    31     
R_BRACES              }                               123    5      
IDENTIFIER            printfs                         124    5      
L_PAREN               (                               124    12     
STR_CONSTANT          "tree: "                        124    13     
R_PAREN               )                               124    21     
SEMI_COLON            ;                               124    22     
IDENTIFIER            printInorder                    125    5      
L_PAREN               (                               125    17     
IDENTIFIER            root                            125    18     
R_PAREN               )                               125    22     
SEMI_COLON            ;                               125    23     
IDENTIFIER            printfs                         126    5      
L_PAREN               (                               126    12     
STR_CONSTANT          "\n"                            126    13     
R_PAREN               )                               126    17     
SEMI_COLON            ;                               126    18     
R_BRACES              }                               127    1      
