Token                 Lexeme                          Line#  Column#
INT                   int                             1      1      
IDENTIFIER            main                            1      5      
L_PAREN               (                               1      9      
R_PAREN               )                               1      10     
L_BRACES              {                               1      11     
CHAR                  char                            2      5      
IDENTIFIER            operator                        2      10     
SEMI_COLON            ;                               2      18     
IDENTIFIER            printf                          3      5      
L_PAREN               (                               3      11     
STR_CONSTANT          "Enter a bitwise operator (&, |, ^, ~, <<, >>): "  3      12     
R_PAREN               )                               3      61     
SEMI_COLON            ;                               3      62     
IDENTIFIER            scanf                           4      5      
L_PAREN               (                               4      10     
STR_CONSTANT          "%c"                            4      11     
COMMA                 ,                               4      15     
BITWISE_AND           &                               4      17     
IDENTIFIER            operator                        4      18     
R_PAREN               )                               4      26     
SEMI_COLON            ;                               4      27     
LONG                  long                            6      5      
IDENTIFIER            a                               6      10     
ASSIGNMENT            =                               6      12     
HEX_CONSTANT          0x56a                           6      14     
COMMA                 ,                               6      19     
IDENTIFIER            b                               6      21     
ASSIGNMENT            =                               6      23     
HEX_CONSTANT          0x44f                           6      25     
SEMI_COLON            ;                               6      30     
BOOL                  bool                            7      5      
IDENTIFIER            equal                           7      10     
ASSIGNMENT            =                               7      16     
L_PAREN               (                               7      18     
IDENTIFIER            a                               7      19     
EQUALS                ==                              7      20     
IDENTIFIER            b                               7      22     
R_PAREN               )                               7      23     
SEMI_COLON            ;                               7      24     
IDENTIFIER            printf                          8      5      
L_PAREN               (                               8      11     
STR_CONSTANT          "%d\n"                          8      12     
COMMA                 ,                               8      18     
L_PAREN               (                               8      20     
L_PAREN               (                               8      21     
IDENTIFIER            a                               8      22     
NOT_EQUALS            !=                              8      23     
IDENTIFIER            b                               8      25     
R_PAREN               )                               8      26     
EQUALS                ==                              8      28     
IDENTIFIER            equal                           8      31     
R_PAREN               )                               8      36     
R_PAREN               )                               8      37     
SEMI_COLON            ;                               8      38     
IF                    if                              10     5      
L_PAREN               (                               10     7      
IDENTIFIER            operator                        10     8      
EQUALS                ==                              10     17     
CHAR_CONSTANT         '|'                             10     20     
R_PAREN               )                               10     23     
L_BRACES              {                               10     24     
IDENTIFIER            printf                          11     9      
L_PAREN               (                               11     15     
STR_CONSTANT          "%d"                            11     16     
COMMA                 ,                               11     20     
IDENTIFIER            a                               11     22     
BITWISE_OR            |                               11     23     
IDENTIFIER            b                               11     24     
R_PAREN               )                               11     25     
SEMI_COLON            ;                               11     26     
R_BRACES              }                               12     5      
ELSE                  else                            13     5      
IF                    if                              13     10     
L_PAREN               (                               13     12     
IDENTIFIER            operator                        13     13     
EQUALS                ==                              13     22     
CHAR_CONSTANT         '&'                             13     25     
R_PAREN               )                               13     28     
L_BRACES              {                               13     29     
IDENTIFIER            printf                          14     9      
L_PAREN               (                               14     15     
STR_CONSTANT          "%d"                            14     16     
COMMA                 ,                               14     20     
IDENTIFIER            a                               14     22     
BITWISE_AND           &                               14     23     
IDENTIFIER            b                               14     24     
R_PAREN               )                               14     25     
SEMI_COLON            ;                               14     26     
R_BRACES              }                               15     5      
ELSE                  else                            16     5      
IF                    if                              16     10     
L_PAREN               (                               16     12     
IDENTIFIER            operator                        16     13     
EQUALS                ==                              16     22     
CHAR_CONSTANT         '^'                             16     25     
R_PAREN               )                               16     28     
L_BRACES              {                               16     29     
IDENTIFIER            printf                          17     9      
L_PAREN               (                               17     15     
STR_CONSTANT          "%d"                            17     16     
COMMA                 ,                               17     20     
IDENTIFIER            a                               17     22     
BITWISE_XOR           ^                               17     23     
IDENTIFIER            b                               17     24     
R_PAREN               )                               17     25     
SEMI_COLON            ;                               17     26     
R_BRACES              }                               18     5      
ELSE                  else                            19     5      
IF                    if                              19     10     
L_PAREN               (                               19     12     
IDENTIFIER            operator                        19     13     
EQUALS                ==                              19     22     
CHAR_CONSTANT         '~'                             19     25     
R_PAREN               )                               19     28     
L_BRACES              {                               19     29     
IDENTIFIER            printf                          20     9      
L_PAREN               (                               20     15     
STR_CONSTANT          "%d %d"                         20     16     
COMMA                 ,                               20     23     
BITWISE_ONE_COMPLEMENT  ~                               20     25     
IDENTIFIER            a                               20     26     
COMMA                 ,                               20     27     
BITWISE_ONE_COMPLEMENT  ~                               20     29     
IDENTIFIER            b                               20     30     
R_PAREN               )                               20     31     
SEMI_COLON            ;                               20     32     
R_BRACES              }                               21     5      
ELSE                  else                            22     5      
IF                    if                              22     10     
L_PAREN               (                               22     12     
IDENTIFIER            operator                        22     13     
EQUALS                ==                              22     22     
Invalid Token: '
LEFT_SHIFT            <<                              22     26     
Invalid Token: '
R_PAREN               )                               22     29     
L_BRACES              {                               22     30     
IDENTIFIER            printf                          23     9      
L_PAREN               (                               23     15     
STR_CONSTANT          "%d %d"                         23     16     
COMMA                 ,                               23     23     
IDENTIFIER            a                               23     25     
LEFT_SHIFT            <<                              23     26     
INT_CONSTANT          1                               23     28     
COMMA                 ,                               23     29     
IDENTIFIER            b                               23     31     
LEFT_SHIFT            <<                              23     32     
INT_CONSTANT          2                               23     34     
R_PAREN               )                               23     35     
SEMI_COLON            ;                               23     36     
R_BRACES              }                               24     5      
ELSE                  else                            25     5      
IF                    if                              25     10     
L_PAREN               (                               25     12     
IDENTIFIER            operator                        25     13     
EQUALS                ==                              25     22     
Invalid Token: '
RIGHT_SHIFT           >>                              25     26     
Invalid Token: '
R_PAREN               )                               25     29     
L_BRACES              {                               25     30     
IDENTIFIER            printf                          26     9      
L_PAREN               (                               26     15     
STR_CONSTANT          "%d %d"                         26     16     
COMMA                 ,                               26     23     
IDENTIFIER            a                               26     25     
RIGHT_SHIFT           >>                              26     26     
INT_CONSTANT          1                               26     28     
COMMA                 ,                               26     29     
IDENTIFIER            b                               26     31     
RIGHT_SHIFT           >>                              26     32     
INT_CONSTANT          2                               26     34     
R_PAREN               )                               26     35     
SEMI_COLON            ;                               26     36     
R_BRACES              }                               27     5      
IDENTIFIER            printf                          29     5      
L_PAREN               (                               29     11     
STR_CONSTANT          "\n%d\n%d\n%d\n%d\n%d"          29     12     
COMMA                 ,                               29     34     
IDENTIFIER            a                               29     36     
ADD                   +                               29     37     
IDENTIFIER            b                               29     38     
COMMA                 ,                               29     39     
IDENTIFIER            a                               29     41     
SUBSTRACT             -                               29     42     
IDENTIFIER            b                               29     43     
COMMA                 ,                               29     44     
IDENTIFIER            a                               29     46     
MULTIPLY              *                               29     47     
IDENTIFIER            b                               29     48     
COMMA                 ,                               29     49     
IDENTIFIER            a                               29     51     
DIVIDE                /                               29     52     
IDENTIFIER            b                               29     53     
COMMA                 ,                               29     54     
IDENTIFIER            a                               29     56     
MODULUS               %                               29     57     
IDENTIFIER            b                               29     58     
R_PAREN               )                               29     59     
SEMI_COLON            ;                               29     60     
R_BRACES              }                               30     1      
