Token                 Lexeme                          Line#  Column#
INT                   int                             3      1      
IDENTIFIER            take_and                        3      5      
L_PAREN               (                               3      13     
INT                   int                             3      14     
IDENTIFIER            a                               3      18     
COMMA                 ,                               3      19     
FLOAT                 float                           3      21     
IDENTIFIER            b                               3      27     
R_PAREN               )                               3      28     
L_BRACES              {                               3      29     
RETURN                return                          4      5      
IDENTIFIER            a                               4      12     
BITWISE_AND           &                               4      13     
L_PAREN               (                               4      14     
INT                   int                             4      15     
R_PAREN               )                               4      18     
IDENTIFIER            b                               4      19     
SEMI_COLON            ;                               4      20     
R_BRACES              }                               5      1      
INT                   int                             7      1      
IDENTIFIER            take_or                         7      5      
L_PAREN               (                               7      12     
FLOAT                 float                           7      13     
IDENTIFIER            a                               7      19     
COMMA                 ,                               7      20     
INT                   int                             7      22     
IDENTIFIER            b                               7      26     
R_PAREN               )                               7      27     
L_BRACES              {                               7      28     
RETURN                return                          8      5      
L_PAREN               (                               8      12     
LONG                  long                            8      13     
R_PAREN               )                               8      17     
IDENTIFIER            a                               8      18     
BITWISE_OR            |                               8      20     
IDENTIFIER            b                               8      22     
SEMI_COLON            ;                               8      23     
R_BRACES              }                               9      1      
INT                   int                             15     1      
IDENTIFIER            array                           15     5      
L_SQBR                [                               15     10     
INT_CONSTANT          12                              15     11     
R_SQBR                ]                               15     13     
L_SQBR                [                               15     14     
INT_CONSTANT          13                              15     15     
R_SQBR                ]                               15     17     
L_SQBR                [                               15     18     
INT_CONSTANT          14                              15     19     
R_SQBR                ]                               15     21     
SEMI_COLON            ;                               15     22     
INT                   int                             16     1      
IDENTIFIER            main                            16     5      
L_PAREN               (                               16     9      
INT                   int                             16     10     
IDENTIFIER            argc                            16     14     
COMMA                 ,                               16     18     
INT                   int                             16     20     
IDENTIFIER            argv                            16     24     
L_SQBR                [                               16     28     
INT_CONSTANT          5                               16     29     
R_SQBR                ]                               16     30     
R_PAREN               )                               16     31     
L_BRACES              {                               16     32     
INT                   int                             17     5      
IDENTIFIER            a                               17     9      
COMMA                 ,                               17     10     
IDENTIFIER            b                               17     11     
SEMI_COLON            ;                               17     12     
INT                   int                             18     5      
MULTIPLY              *                               18     9      
IDENTIFIER            ptr                             18     10     
SEMI_COLON            ;                               18     13     
INT                   int                             19     5      
IDENTIFIER            i                               19     9      
COMMA                 ,                               19     10     
IDENTIFIER            j                               19     11     
COMMA                 ,                               19     12     
IDENTIFIER            k                               19     13     
SEMI_COLON            ;                               19     14     
IDENTIFIER            i                               20     5      
INCREMENT             ++                              20     6      
SEMI_COLON            ;                               20     8      
IDENTIFIER            ptr                             21     5      
ADD_ASSIGNMENT        +=                              21     9      
INT_CONSTANT          1                               21     12     
SEMI_COLON            ;                               21     13     
IDENTIFIER            ptr                             22     5      
L_SQBR                [                               22     8      
INT_CONSTANT          5                               22     9      
R_SQBR                ]                               22     10     
SEMI_COLON            ;                               22     11     
BOOL                  bool                            23     5      
IDENTIFIER            l                               23     10     
SEMI_COLON            ;                               23     11     
IDENTIFIER            l                               24     5      
ASSIGNMENT            =                               24     7      
INT_CONSTANT          5                               24     9      
LOGICAL_AND           &&                              24     10     
INT_CONSTANT          3                               24     12     
SEMI_COLON            ;                               24     13     
IDENTIFIER            array                           25     5      
L_SQBR                [                               25     10     
INT_CONSTANT          0                               25     11     
R_SQBR                ]                               25     12     
L_SQBR                [                               25     13     
INT_CONSTANT          0                               25     14     
R_SQBR                ]                               25     15     
L_SQBR                [                               25     16     
INT_CONSTANT          1                               25     17     
R_SQBR                ]                               25     18     
SEMI_COLON            ;                               25     19     
FOR                   for                             26     5      
L_PAREN               (                               26     8      
IDENTIFIER            i                               26     9      
ASSIGNMENT            =                               26     10     
INT_CONSTANT          0                               26     11     
SEMI_COLON            ;                               26     12     
IDENTIFIER            i                               26     13     
LESS                  <                               26     14     
INT_CONSTANT          12                              26     15     
SEMI_COLON            ;                               26     17     
IDENTIFIER            i                               26     18     
INCREMENT             ++                              26     19     
R_PAREN               )                               26     21     
L_BRACES              {                               26     22     
FOR                   for                             27     9      
L_PAREN               (                               27     12     
IDENTIFIER            j                               27     13     
ASSIGNMENT            =                               27     14     
IDENTIFIER            i                               27     15     
SEMI_COLON            ;                               27     16     
IDENTIFIER            j                               27     17     
LESS                  <                               27     18     
INT_CONSTANT          13                              27     19     
SEMI_COLON            ;                               27     21     
IDENTIFIER            j                               27     22     
INCREMENT             ++                              27     23     
R_PAREN               )                               27     25     
L_BRACES              {                               27     26     
FOR                   for                             28     13     
L_PAREN               (                               28     16     
IDENTIFIER            k                               28     17     
ASSIGNMENT            =                               28     18     
IDENTIFIER            j                               28     19     
SEMI_COLON            ;                               28     20     
IDENTIFIER            j                               28     21     
LESS                  <                               28     22     
INT_CONSTANT          14                              28     23     
SEMI_COLON            ;                               28     25     
IDENTIFIER            j                               28     26     
INCREMENT             ++                              28     27     
R_PAREN               )                               28     29     
IDENTIFIER            array                           28     30     
L_SQBR                [                               28     35     
IDENTIFIER            i                               28     36     
R_SQBR                ]                               28     37     
L_SQBR                [                               28     38     
IDENTIFIER            j                               28     39     
R_SQBR                ]                               28     40     
L_SQBR                [                               28     41     
IDENTIFIER            k                               28     42     
R_SQBR                ]                               28     43     
ASSIGNMENT            =                               28     45     
L_PAREN               (                               28     47     
L_PAREN               (                               28     48     
IDENTIFIER            i                               28     49     
ADD                   +                               28     51     
IDENTIFIER            j                               28     53     
R_PAREN               )                               28     54     
MODULUS               %                               28     55     
IDENTIFIER            k                               28     56     
R_PAREN               )                               28     57     
MULTIPLY              *                               28     58     
IDENTIFIER            k                               28     59     
SEMI_COLON            ;                               28     60     
R_BRACES              }                               29     9      
INT                   int                             30     9      
IDENTIFIER            b                               30     13     
ASSIGNMENT            =                               30     15     
IDENTIFIER            array                           30     17     
L_SQBR                [                               30     22     
IDENTIFIER            i                               30     23     
R_SQBR                ]                               30     24     
ADD                   +                               30     26     
L_PAREN               (                               30     28     
INT                   int                             30     29     
R_PAREN               )                               30     32     
IDENTIFIER            array                           30     33     
L_SQBR                [                               30     38     
IDENTIFIER            j                               30     39     
R_SQBR                ]                               30     40     
SEMI_COLON            ;                               30     41     
R_BRACES              }                               31     5      
INCREMENT             ++                              32     5      
MULTIPLY              *                               32     7      
L_PAREN               (                               32     8      
INCREMENT             ++                              32     9      
MULTIPLY              *                               32     11     
IDENTIFIER            array                           32     12     
R_PAREN               )                               32     17     
SEMI_COLON            ;                               32     18     
IDENTIFIER            a                               33     5      
ASSIGNMENT            =                               33     7      
IDENTIFIER            take_and                        33     9      
L_PAREN               (                               33     17     
IDENTIFIER            a                               33     18     
COMMA                 ,                               33     19     
IDENTIFIER            b                               33     20     
R_PAREN               )                               33     21     
SEMI_COLON            ;                               33     22     
INT                   int                             34     5      
IDENTIFIER            d                               34     9      
ASSIGNMENT            =                               34     11     
MULTIPLY              *                               34     13     
MULTIPLY              *                               34     14     
MULTIPLY              *                               34     15     
IDENTIFIER            array                           34     16     
SEMI_COLON            ;                               34     21     
RETURN                return                          35     5      
REAL_CONSTANT         0.1                             35     12     
SEMI_COLON            ;                               35     15     
R_BRACES              }                               36     1      
INT                   int                             39     1      
IDENTIFIER            jj                              39     5      
ASSIGNMENT            =                               39     8      
INT_CONSTANT          0                               39     9      
SEMI_COLON            ;                               39     10     
VOID                  void                            41     1      
IDENTIFIER            foo                             41     6      
L_PAREN               (                               41     9      
R_PAREN               )                               41     10     
L_BRACES              {                               41     11     
FOR                   for                             42     5      
L_PAREN               (                               42     8      
SEMI_COLON            ;                               42     9      
IDENTIFIER            jj                              42     10     
LESS                  <                               42     12     
INT_CONSTANT          50                              42     13     
SEMI_COLON            ;                               42     15     
IDENTIFIER            jj                              42     16     
INCREMENT             ++                              42     18     
R_PAREN               )                               42     20     
L_BRACES              {                               42     21     
IDENTIFIER            jj                              43     9      
INCREMENT             ++                              43     11     
SEMI_COLON            ;                               43     13     
IF                    if                              44     9      
L_PAREN               (                               44     11     
IDENTIFIER            jj                              44     12     
LESS                  <                               44     15     
INT_CONSTANT          15                              44     17     
R_PAREN               )                               44     19     
CONTINUE              continue                        44     20     
SEMI_COLON            ;                               44     28     
IF                    if                              45     9      
L_PAREN               (                               45     11     
IDENTIFIER            jj                              45     12     
GREATER               >                               45     15     
INT_CONSTANT          50                              45     17     
R_PAREN               )                               45     19     
BREAK                 break                           45     20     
SEMI_COLON            ;                               45     25     
R_BRACES              }                               46     5      
DO                    do                              47     5      
L_BRACES              {                               47     7      
CONTINUE              continue                        48     9      
SEMI_COLON            ;                               48     17     
INT                   int                             49     9      
IDENTIFIER            c                               49     13     
ASSIGNMENT            =                               49     14     
IDENTIFIER            jj                              49     17     
INCREMENT             ++                              49     19     
SEMI_COLON            ;                               49     21     
R_BRACES              }                               50     5      
WHILE                 while                           50     6      
L_PAREN               (                               50     11     
IDENTIFIER            jj                              50     12     
R_PAREN               )                               50     14     
SEMI_COLON            ;                               50     15     
FOR                   for                             51     5      
L_PAREN               (                               51     8      
SEMI_COLON            ;                               51     9      
TRUE                  true                            51     10     
SEMI_COLON            ;                               51     14     
R_PAREN               )                               51     15     
L_BRACES              {                               51     16     
BREAK                 break                           52     9      
SEMI_COLON            ;                               52     14     
R_BRACES              }                               53     5      
FOR                   for                             54     5      
L_PAREN               (                               54     8      
IDENTIFIER            jj                              54     9      
ASSIGNMENT            =                               54     11     
INT_CONSTANT          45                              54     12     
SEMI_COLON            ;                               54     14     
IDENTIFIER            jj                              54     15     
MODULUS               %                               54     18     
INT_CONSTANT          3                               54     19     
SEMI_COLON            ;                               54     20     
R_PAREN               )                               54     21     
L_BRACES              {                               54     22     
CONTINUE              continue                        55     9      
SEMI_COLON            ;                               55     17     
BREAK                 break                           56     9      
SEMI_COLON            ;                               56     14     
R_BRACES              }                               57     5      
INT                   int                             58     5      
IDENTIFIER            c                               58     9      
SEMI_COLON            ;                               58     10     
WHILE                 while                           59     5      
L_PAREN               (                               59     10     
IDENTIFIER            c                               59     11     
NOT_EQUALS            !=                              59     13     
INCREMENT             ++                              59     16     
IDENTIFIER            jj                              59     18     
R_PAREN               )                               59     20     
L_BRACES              {                               59     21     
CONTINUE              continue                        60     9      
SEMI_COLON            ;                               60     17     
R_BRACES              }                               61     5      
R_BRACES              }                               62     1      
