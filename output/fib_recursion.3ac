fibonacci:
BeginFunc
tmp@0 = n|fibonacci int<= lconst@1
ifz tmp@0 goto label#0
return n|fibonacci
label#0:
tmp@1 = n|fibonacci int- lconst@1
push tmp@1
tmp@2 = func_call fibonacci
pop tmp@1
tmp@3 = n|fibonacci int- lconst@2
push tmp@3
tmp@4 = func_call fibonacci
pop tmp@3
tmp@5 = tmp@2 int+ tmp@4
return tmp@5
EndFunc
main:
BeginFunc
tmp@7 = sconst@%ld
tmp@6 = addr(n|main)
push tmp@7
push tmp@6
tmp@8 = func_call scanf
pop tmp@6
pop tmp@7
tmp@9 = n|main int< lconst@0
ifz tmp@9 goto label#1
tmp@10 = sconst@Enter a postive number\n
push tmp@10
tmp@11 = func_call printf1
pop tmp@10
return lconst@0
label#1:
tmp@13 = sconst@%ld\n
push n|main
tmp@12 = func_call fibonacci
pop n|main
push tmp@13
push tmp@12
tmp@14 = func_call printf
pop tmp@12
pop tmp@13
return lconst@0
EndFunc
