take_and:
BeginFunc
tmp@0 = float_to_int b|take_and
tmp@1 = a|take_and int& tmp@0
return tmp@1
EndFunc
take_or:
BeginFunc
tmp@2 = float_to_long a|take_or
tmp@3 = int_to_long b|take_or
tmp@4 = tmp@2 long| tmp@3
tmp@5 = long_to_int tmp@4
return tmp@5
EndFunc
main:
BeginFunc
tmp@6 = i|main
i|main = i|main int+ lconst@1
tmp@7 = ptr|main long+ lconst@4
ptr|main = tmp@7
tmp@8 = ptr|main long+ lconst@20
l|main = lconst@1
tmp@9 = array|global long+ lconst@0
tmp@10 = tmp@9 long+ lconst@0
tmp@11 = tmp@10 long+ lconst@4
i|main = lconst@0
label#0:
tmp@12 = i|main int< lconst@12
ifz tmp@12 goto label#7
j|main = i|main
label#1:
tmp@14 = j|main int< lconst@13
ifz tmp@14 goto label#5
k|main = j|main
label#2:
tmp@16 = j|main int< lconst@14
ifz tmp@16 goto label#4
tmp@18 = i|main long* lconst@728
tmp@19 = array|global long+ tmp@18
tmp@20 = j|main long* lconst@56
tmp@21 = tmp@19 long+ tmp@20
tmp@22 = k|main long* lconst@4
tmp@23 = tmp@21 long+ tmp@22
tmp@24 = i|main int+ j|main
tmp@25 = tmp@24 int% k|main
tmp@26 = tmp@25 int* k|main
tmp@23 = tmp@26
label#3:
tmp@17 = j|main
j|main = j|main int+ lconst@1
goto label#2
label#4:
tmp@15 = j|main
j|main = j|main int+ lconst@1
goto label#1
label#5:
tmp@27 = i|main long* lconst@728
tmp@28 = array|global long+ tmp@27
tmp@29 = j|main long* lconst@728
tmp@30 = array|global long+ tmp@29
tmp@31 = long_to_int tmp@30
tmp@32 = tmp@31 long* lconst@8
tmp@33 = tmp@28 long+ tmp@32
tmp@34 = long_to_int tmp@33
b|scope@4 = tmp@34
label#6:
tmp@13 = i|main
i|main = i|main int+ lconst@1
goto label#0
label#7:
tmp@35 = load(array|global)
tmp@35 = tmp@35 long+ lconst@8
tmp@36 = load(tmp@35)
tmp@36 = tmp@36 long+ lconst@4
tmp@37 = int_to_float b|main
push a|main
push tmp@37
tmp@38 = func_call take_and
pop tmp@37
pop a|main
a|main = tmp@38
tmp@39 = load(array|global)
tmp@40 = load(tmp@39)
tmp@41 = load(tmp@40)
d|main = tmp@41
return lconst@0
EndFunc
foo:
BeginFunc
label#8:
tmp@42 = jj|global int< lconst@50
ifz tmp@42 goto label#11
tmp@44 = jj|global
jj|global = jj|global int+ lconst@1
tmp@45 = jj|global int< lconst@15
ifz tmp@45 goto label#9
goto label#10
label#9:
tmp@46 = jj|global int> lconst@50
ifz tmp@46 goto label#10
goto label#11
label#10:
tmp@43 = jj|global
jj|global = jj|global int+ lconst@1
goto label#8
label#11:
goto label#12
tmp@47 = jj|global
jj|global = jj|global int+ lconst@1
c|scope@8 = tmp@47
label#12:
ifnz jj|global goto label#11
label#13:
goto label#14
goto label#13
label#14:
jj|global = lconst@45
label#15:
tmp@48 = jj|global int% lconst@3
ifz tmp@48 goto label#16
goto label#15
goto label#16
goto label#15
label#16:
jj|global = jj|global int+ lconst@1
tmp@49 = c|foo int!= jj|global
ifz tmp@49 goto label#17
goto label#16
goto label#16
label#17:
EndFunc
