main:
BeginFunc
tmp@0 = sconst@enter a integer: 
push tmp@0
tmp@1 = func_call printf1
pop tmp@0
tmp@3 = sconst@%ld
tmp@2 = addr(n|main)
push tmp@3
push tmp@2
tmp@4 = func_call scanf
pop tmp@2
pop tmp@3
tmp@5 = n|main int% lconst@2
tmp@6 = tmp@5 int== lconst@0
ifz tmp@6 goto label#8
tmp@7 = sconst@given number is even\n
push tmp@7
tmp@8 = func_call printf1
pop tmp@7
tmp@9 = n|main int% lconst@3
tmp@10 = tmp@9 int== lconst@0
ifz tmp@10 goto label#6
tmp@11 = sconst@given no is divisible by 2,3
push tmp@11
None = func_call puts
pop tmp@11
tmp@12 = n|main int% lconst@5
tmp@13 = tmp@12 int== lconst@0
ifz tmp@13 goto label#4
tmp@14 = sconst@given no is divisible by 2,3,5
push tmp@14
None = func_call puts
pop tmp@14
tmp@15 = n|main int% lconst@7
tmp@16 = tmp@15 int== lconst@0
ifz tmp@16 goto label#2
tmp@17 = sconst@given no is divisible by 2,3,5,7
push tmp@17
None = func_call puts
pop tmp@17
tmp@18 = n|main int% lconst@11
tmp@19 = tmp@18 int== lconst@0
ifz tmp@19 goto label#0
tmp@20 = sconst@given no is divisible by 2,3,5,7,11\n
push tmp@20
tmp@21 = func_call printf1
pop tmp@20
goto label#1
label#0:
tmp@22 = sconst@given no is div by 2,3,5,7 but not by 11\n
push tmp@22
tmp@23 = func_call printf1
pop tmp@22
label#1:
goto label#3
label#2:
tmp@24 = sconst@given no is div by 2,3,5 but not by 7
push tmp@24
None = func_call puts
pop tmp@24
label#3:
goto label#5
label#4:
tmp@25 = sconst@given no is div by 2,3 but not by 5
push tmp@25
None = func_call puts
pop tmp@25
label#5:
goto label#7
label#6:
tmp@26 = sconst@given no is div by 2 but not by 3
push tmp@26
None = func_call puts
pop tmp@26
label#7:
goto label#9
label#8:
tmp@27 = sconst@given number is odd\n
push tmp@27
tmp@28 = func_call printf1
pop tmp@27
label#9:
EndFunc
