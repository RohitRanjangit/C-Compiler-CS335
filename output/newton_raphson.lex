Token                 Lexeme                          Line#  Column#
INT                   int                             37     1      
IDENTIFIER            printf                          37     5      
L_PAREN               (                               37     11     
CHAR                  char                            37     12     
IDENTIFIER            s                               37     17     
L_SQBR                [                               37     18     
INT_CONSTANT          20                              37     19     
R_SQBR                ]                               37     21     
COMMA                 ,                               37     22     
FLOAT                 float                           37     23     
IDENTIFIER            a                               37     29     
R_PAREN               )                               37     30     
SEMI_COLON            ;                               37     31     
INT                   int                             38     1      
IDENTIFIER            printf1                         38     5      
L_PAREN               (                               38     12     
CHAR                  char                            38     13     
IDENTIFIER            s                               38     18     
L_SQBR                [                               38     19     
INT_CONSTANT          20                              38     20     
R_SQBR                ]                               38     22     
COMMA                 ,                               38     23     
FLOAT                 float                           38     24     
IDENTIFIER            a                               38     30     
COMMA                 ,                               38     31     
FLOAT                 float                           38     32     
IDENTIFIER            b                               38     38     
COMMA                 ,                               38     39     
FLOAT                 float                           38     40     
IDENTIFIER            c                               38     46     
COMMA                 ,                               38     47     
FLOAT                 float                           38     48     
IDENTIFIER            d                               38     54     
R_PAREN               )                               38     55     
SEMI_COLON            ;                               38     56     
INT                   int                             39     1      
IDENTIFIER            printf2                         39     5      
L_PAREN               (                               39     12     
CHAR                  char                            39     13     
IDENTIFIER            s                               39     18     
L_SQBR                [                               39     19     
INT_CONSTANT          20                              39     20     
R_SQBR                ]                               39     22     
COMMA                 ,                               39     23     
INT                   int                             39     24     
IDENTIFIER            b                               39     28     
R_PAREN               )                               39     29     
SEMI_COLON            ;                               39     30     
FLOAT                 float                           40     1      
IDENTIFIER            fabs                            40     7      
L_PAREN               (                               40     11     
FLOAT                 float                           40     12     
IDENTIFIER            a                               40     18     
R_PAREN               )                               40     19     
SEMI_COLON            ;                               40     20     
FLOAT                 float                           43     1      
IDENTIFIER            func                            43     7      
L_PAREN               (                               43     11     
FLOAT                 float                           43     12     
IDENTIFIER            x                               43     18     
R_PAREN               )                               43     19     
L_BRACES              {                               43     20     
RETURN                return                          44     5      
IDENTIFIER            x                               44     12     
MULTIPLY              *                               44     13     
IDENTIFIER            x                               44     14     
MULTIPLY              *                               44     15     
IDENTIFIER            x                               44     16     
SUBSTRACT             -                               44     18     
IDENTIFIER            x                               44     20     
MULTIPLY              *                               44     21     
IDENTIFIER            x                               44     22     
ADD                   +                               44     24     
INT_CONSTANT          2                               44     26     
SEMI_COLON            ;                               44     27     
R_BRACES              }                               45     1      
FLOAT                 float                           47     1      
IDENTIFIER            deriv                           47     7      
L_PAREN               (                               47     12     
FLOAT                 float                           47     13     
IDENTIFIER            x                               47     19     
R_PAREN               )                               47     20     
L_BRACES              {                               47     21     
RETURN                return                          48     5      
INT_CONSTANT          3                               48     12     
MULTIPLY              *                               48     13     
IDENTIFIER            x                               48     14     
MULTIPLY              *                               48     15     
IDENTIFIER            x                               48     16     
SUBSTRACT             -                               48     18     
INT_CONSTANT          2                               48     20     
MULTIPLY              *                               48     21     
IDENTIFIER            x                               48     22     
SEMI_COLON            ;                               48     23     
R_BRACES              }                               49     1      
FLOAT                 float                           52     1      
IDENTIFIER            newton_raphson                  52     7      
L_PAREN               (                               52     21     
FLOAT                 float                           52     22     
IDENTIFIER            x                               52     28     
COMMA                 ,                               52     29     
FLOAT                 float                           52     30     
IDENTIFIER            epsilon                         52     36     
COMMA                 ,                               52     43     
INT                   int                             52     44     
IDENTIFIER            max_itr                         52     48     
R_PAREN               )                               52     55     
L_BRACES              {                               52     56     
INT                   int                             53     5      
IDENTIFIER            i                               53     9      
SEMI_COLON            ;                               53     10     
FOR                   for                             54     5      
L_PAREN               (                               54     8      
IDENTIFIER            i                               54     9      
ASSIGNMENT            =                               54     11     
INT_CONSTANT          0                               54     13     
SEMI_COLON            ;                               54     14     
IDENTIFIER            i                               54     15     
LESS                  <                               54     16     
IDENTIFIER            max_itr                         54     17     
SEMI_COLON            ;                               54     24     
IDENTIFIER            i                               54     25     
INCREMENT             ++                              54     26     
R_PAREN               )                               54     28     
L_BRACES              {                               54     29     
FLOAT                 float                           55     9      
IDENTIFIER            h                               55     15     
ASSIGNMENT            =                               55     17     
IDENTIFIER            func                            55     19     
L_PAREN               (                               55     23     
IDENTIFIER            x                               55     24     
R_PAREN               )                               55     25     
DIVIDE                /                               55     26     
IDENTIFIER            deriv                           55     27     
L_PAREN               (                               55     32     
IDENTIFIER            x                               55     33     
R_PAREN               )                               55     34     
SEMI_COLON            ;                               55     35     
IF                    if                              56     9      
L_PAREN               (                               56     11     
IDENTIFIER            fabs                            56     12     
L_PAREN               (                               56     16     
IDENTIFIER            h                               56     17     
R_PAREN               )                               56     18     
LESS                  <                               56     19     
IDENTIFIER            epsilon                         56     20     
R_PAREN               )                               56     27     
L_BRACES              {                               56     28     
RETURN                return                          57     13     
IDENTIFIER            x                               57     20     
SEMI_COLON            ;                               57     21     
R_BRACES              }                               58     9      
IDENTIFIER            x                               59     9      
ASSIGNMENT            =                               59     11     
IDENTIFIER            x                               59     13     
SUBSTRACT             -                               59     15     
IDENTIFIER            h                               59     17     
SEMI_COLON            ;                               59     18     
R_BRACES              }                               60     5      
RETURN                return                          61     5      
IDENTIFIER            x                               61     12     
SEMI_COLON            ;                               61     13     
R_BRACES              }                               62     1      
INT                   int                             64     1      
IDENTIFIER            main                            64     5      
L_PAREN               (                               64     9      
R_PAREN               )                               64     10     
L_BRACES              {                               64     11     
IDENTIFIER            printf                          65     5      
L_PAREN               (                               65     11     
STR_CONSTANT          "root: %.3f\n"                  65     12     
COMMA                 ,                               65     26     
IDENTIFIER            newton_raphson                  65     27     
L_PAREN               (                               65     41     
SUBSTRACT             -                               65     42     
INT_CONSTANT          20                              65     43     
COMMA                 ,                               65     45     
REAL_CONSTANT         0.001                           65     46     
COMMA                 ,                               65     51     
INT_CONSTANT          100                             65     52     
R_PAREN               )                               65     55     
R_PAREN               )                               65     56     
SEMI_COLON            ;                               65     57     
RETURN                return                          66     5      
INT_CONSTANT          0                               66     12     
SEMI_COLON            ;                               66     13     
R_BRACES              }                               67     1      
