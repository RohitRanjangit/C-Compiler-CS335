newNode:
BeginFunc
push lconst@24
tmp@0 = func_call malloc
pop lconst@24
node|newNode = tmp@0
tmp@1 = node|newNode long+ lconst@0
tmp@1 eq data|newNode
tmp@2 = load(tmp@1)
tmp@3 = node|newNode long+ lconst@8
tmp@3 eq lconst@0
tmp@4 = load(tmp@3)
tmp@5 = node|newNode long+ lconst@16
tmp@5 eq lconst@0
tmp@6 = load(tmp@5)
return node|newNode
EndFunc
printPostorder:
BeginFunc
tmp@7 = node|printPostorder long== lconst@0
ifz tmp@7 goto label#0
return
label#0:
tmp@8 = node|printPostorder long+ lconst@8
tmp@9 = load(tmp@8)
push tmp@9
None = func_call printPostorder
pop tmp@9
tmp@10 = node|printPostorder long+ lconst@16
tmp@11 = load(tmp@10)
push tmp@11
None = func_call printPostorder
pop tmp@11
tmp@14 = sconst@%ld 
tmp@12 = node|printPostorder long+ lconst@0
tmp@13 = load(tmp@12)
push tmp@14
push tmp@13
None = func_call printf
pop tmp@13
pop tmp@14
EndFunc
printInorder:
BeginFunc
tmp@15 = node|printInorder long== lconst@0
ifz tmp@15 goto label#1
return
label#1:
tmp@16 = node|printInorder long+ lconst@8
tmp@17 = load(tmp@16)
push tmp@17
None = func_call printInorder
pop tmp@17
tmp@20 = sconst@%ld 
tmp@18 = node|printInorder long+ lconst@0
tmp@19 = load(tmp@18)
push tmp@20
push tmp@19
None = func_call printf
pop tmp@19
pop tmp@20
tmp@21 = node|printInorder long+ lconst@16
tmp@22 = load(tmp@21)
push tmp@22
None = func_call printInorder
pop tmp@22
EndFunc
printPreorder:
BeginFunc
tmp@23 = node|printPreorder long== lconst@0
ifz tmp@23 goto label#2
return
label#2:
tmp@26 = sconst@%ld 
tmp@24 = node|printPreorder long+ lconst@0
tmp@25 = load(tmp@24)
push tmp@26
push tmp@25
None = func_call printf
pop tmp@25
pop tmp@26
tmp@27 = node|printPreorder long+ lconst@8
tmp@28 = load(tmp@27)
push tmp@28
None = func_call printPreorder
pop tmp@28
tmp@29 = node|printPreorder long+ lconst@16
tmp@30 = load(tmp@29)
push tmp@30
None = func_call printPreorder
pop tmp@30
EndFunc
main:
BeginFunc
push lconst@1
tmp@31 = func_call newNode
pop lconst@1
root|main = tmp@31
tmp@32 = root|main long+ lconst@8
push lconst@2
tmp@33 = func_call newNode
pop lconst@2
tmp@32 eq tmp@33
tmp@34 = load(tmp@32)
tmp@35 = root|main long+ lconst@16
push lconst@3
tmp@36 = func_call newNode
pop lconst@3
tmp@35 eq tmp@36
tmp@37 = load(tmp@35)
tmp@38 = root|main long+ lconst@8
tmp@39 = load(tmp@38)
tmp@40 = tmp@39 long+ lconst@8
push lconst@4
tmp@41 = func_call newNode
pop lconst@4
tmp@40 eq tmp@41
tmp@42 = load(tmp@40)
tmp@43 = root|main long+ lconst@8
tmp@44 = load(tmp@43)
tmp@45 = tmp@44 long+ lconst@16
push lconst@5
tmp@46 = func_call newNode
pop lconst@5
tmp@45 eq tmp@46
tmp@47 = load(tmp@45)
tmp@48 = sconst@Preorder traversal of binary tree is \n
push tmp@48
None = func_call printfs
pop tmp@48
push root|main
None = func_call printPreorder
pop root|main
tmp@49 = sconst@\nInorder traversal of binary tree is \n
push tmp@49
None = func_call printfs
pop tmp@49
push root|main
None = func_call printInorder
pop root|main
tmp@50 = sconst@\nPostorder traversal of binary tree is \n
push tmp@50
None = func_call printfs
pop tmp@50
push root|main
None = func_call printPostorder
pop root|main
tmp@51 = sconst@\n
push tmp@51
None = func_call printfs
pop tmp@51
return lconst@0
EndFunc
