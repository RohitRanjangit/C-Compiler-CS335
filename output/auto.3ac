main:
BeginFunc
a|main = lconst@67
tmp@0 = sconst@size %ld\n
push tmp@0
push lconst@1
tmp@1 = func_call printf
pop lconst@1
pop tmp@0
b|main = lconst@1
tmp@2 = sconst@size %ld\n
push tmp@2
push lconst@1
tmp@3 = func_call printf
pop lconst@1
pop tmp@2
tmp@4 = char_to_int a|main
tmp@5 = tmp@4 int- lconst@3
c|main = tmp@5
tmp@6 = sconst@size %ld\n
push tmp@6
push lconst@8
tmp@7 = func_call printf
pop lconst@8
pop tmp@6
tmp@8 = bool_to_float b|main
tmp@9 = fconst@3.4 float+ tmp@8
d|main = tmp@9
tmp@10 = sconst@size %ld\n
push tmp@10
push lconst@4
tmp@11 = func_call printf
pop lconst@4
pop tmp@10
tmp@12 = addr(c|main)
e|main = tmp@12
tmp@13 = sconst@size %ld\n
push tmp@13
push lconst@8
tmp@14 = func_call printf
pop lconst@8
pop tmp@13
tmp@15 = addr(a1|main)
tmp@16 = tmp@15 long+ lconst@0
tmp@16 eq lconst@2
tmp@17 = load(tmp@16)
tmp@18 = addr(a1|main)
tmp@19 = tmp@18 long+ lconst@8
tmp@19 eq lconst@4
tmp@20 = load(tmp@19)
f|main = a1|main
tmp@21 = sconst@size %ld\n
push tmp@21
push lconst@16
tmp@22 = func_call printf
pop lconst@16
pop tmp@21
tmp@29 = sconst@struct a:%ld, b:%ld\n
tmp@23 = addr(f|main)
tmp@24 = tmp@23 long+ lconst@0
tmp@25 = load(tmp@24)
tmp@26 = addr(f|main)
tmp@27 = tmp@26 long+ lconst@8
tmp@28 = load(tmp@27)
push tmp@29
push tmp@25
push tmp@28
tmp@30 = func_call printf1
pop tmp@28
pop tmp@25
pop tmp@29
tmp@32 = sconst@a:%c b:%ld c:%ld d:%f *e:%ld\n
tmp@33 = char_to_int a|main
tmp@34 = bool_to_int b|main
tmp@31 = load(e|main)
push tmp@32
push tmp@33
push tmp@34
push c|main
push d|main
push tmp@31
tmp@35 = func_call printf2
pop tmp@31
pop d|main
pop c|main
pop tmp@34
pop tmp@33
pop tmp@32
EndFunc
