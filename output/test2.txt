Token                 Lexeme                          Line#  Column#
VOID                  void                            8      1      
IDENTIFIER            f                               8      6      
L_PAREN               (                               8      7      
R_PAREN               )                               8      8      
L_BRACES              {                               8      9      
VOID                  void                            10     5      
IDENTIFIER            f13                             10     10     
L_PAREN               (                               10     13     
R_PAREN               )                               10     14     
SEMI_COLON            ;                               10     15     
INT                   int                             11     5      
IDENTIFIER            f3                              11     9      
L_PAREN               (                               11     11     
R_PAREN               )                               11     12     
SEMI_COLON            ;                               11     13     
INT                   int                             12     5      
MULTIPLY              *                               12     9      
MULTIPLY              *                               12     10     
IDENTIFIER            f3                              12     11     
ASSIGNMENT            =                               12     14     
IDENTIFIER            f1                              12     16     
L_PAREN               (                               12     18     
R_PAREN               )                               12     19     
SEMI_COLON            ;                               12     20     
INT                   int                             13     5      
MULTIPLY              *                               13     8      
MULTIPLY              *                               13     9      
IDENTIFIER            f7                              13     10     
L_PAREN               (                               13     12     
R_PAREN               )                               13     13     
SEMI_COLON            ;                               13     14     
IF                    if                              14     5      
L_PAREN               (                               14     7      
INT_CONSTANT          1                               14     8      
R_PAREN               )                               14     9      
IF                    if                              14     10     
L_PAREN               (                               14     12     
INT_CONSTANT          2                               14     13     
R_PAREN               )                               14     14     
IF                    if                              14     15     
L_PAREN               (                               14     17     
INT_CONSTANT          3                               14     18     
R_PAREN               )                               14     19     
IF                    if                              14     20     
L_PAREN               (                               14     22     
INT_CONSTANT          4                               14     23     
R_PAREN               )                               14     24     
IF                    if                              14     25     
L_PAREN               (                               14     27     
INT_CONSTANT          5                               14     28     
R_PAREN               )                               14     29     
L_BRACES              {                               14     30     
L_BRACES              {                               14     31     
L_BRACES              {                               14     32     
L_BRACES              {                               14     61     
R_BRACES              }                               14     62     
R_BRACES              }                               14     63     
R_BRACES              }                               14     64     
R_BRACES              }                               14     65     
SEMI_COLON            ;                               14     66     
STRUCT                struct                          15     5      
IDENTIFIER            a                               15     12     
L_BRACES              {                               15     13     
INT                   int                             16     9      
IDENTIFIER            f43                             16     13     
SEMI_COLON            ;                               16     16     
R_BRACES              }                               17     5      
SEMI_COLON            ;                               17     6      
R_BRACES              }                               18     1      
VOID                  void                            21     1      
IDENTIFIER            f                               21     6      
L_PAREN               (                               21     7      
INT                   int                             21     8      
COMMA                 ,                               21     11     
FLOAT                 float                           21     13     
COMMA                 ,                               21     18     
CHAR                  char                            21     20     
R_PAREN               )                               21     24     
SEMI_COLON            ;                               21     25     
INT                   int                             23     1      
MULTIPLY              *                               23     4      
IDENTIFIER            func                            23     5      
L_PAREN               (                               23     10     
INT                   int                             23     11     
MULTIPLY              *                               23     14     
MULTIPLY              *                               23     15     
COMMA                 ,                               23     16     
INT                   int                             23     18     
IDENTIFIER            c                               23     22     
R_PAREN               )                               23     23     
SEMI_COLON            ;                               23     24     
VOID                  void                            25     1      
IDENTIFIER            foo                             25     6      
L_PAREN               (                               25     9      
INT                   int                             25     10     
IDENTIFIER            a                               25     14     
COMMA                 ,                               25     15     
INT                   int                             25     17     
IDENTIFIER            b                               25     21     
R_PAREN               )                               25     22     
L_BRACES              {                               25     23     
RETURN                return                          26     5      
IDENTIFIER            a                               26     12     
ASSIGNMENT            =                               26     13     
INT_CONSTANT          4                               26     15     
SEMI_COLON            ;                               26     16     
R_BRACES              }                               27     1      
INT                   int                             30     1      
IDENTIFIER            bar                             30     6      
L_PAREN               (                               30     9      
R_PAREN               )                               30     10     
L_BRACES              {                               30     11     
RETURN                return                          31     5      
IDENTIFIER            bar                             31     12     
L_PAREN               (                               31     15     
R_PAREN               )                               31     16     
SEMI_COLON            ;                               31     17     
RETURN                return                          32     5      
IDENTIFIER            bar                             32     12     
L_PAREN               (                               32     15     
R_PAREN               )                               32     16     
SEMI_COLON            ;                               32     17     
IDENTIFIER            f                               33     5      
L_PAREN               (                               33     6      
INT_CONSTANT          3                               33     7      
COMMA                 ,                               33     8      
REAL_CONSTANT         4.5                             33     9      
COMMA                 ,                               33     12     
CHAR_CONSTANT         'c'                             33     13     
R_PAREN               )                               33     16     
SEMI_COLON            ;                               33     17     
FOR                   for                             34     5      
L_PAREN               (                               34     8      
INT                   int                             34     9      
IDENTIFIER            a                               34     13     
ASSIGNMENT            =                               34     14     
INT_CONSTANT          3                               34     15     
SEMI_COLON            ;                               34     16     
IDENTIFIER            bar                             34     17     
L_PAREN               (                               34     20     
R_PAREN               )                               34     21     
GREATER               >                               34     23     
MULTIPLY              *                               34     25     
IDENTIFIER            func                            34     26     
L_PAREN               (                               34     30     
NULL                  NULL                            34     31     
COMMA                 ,                               34     35     
INT_CONSTANT          0                               34     37     
R_PAREN               )                               34     38     
SEMI_COLON            ;                               34     39     
IDENTIFIER            foo                             34     40     
L_PAREN               (                               34     43     
INT_CONSTANT          1                               34     44     
COMMA                 ,                               34     45     
INT_CONSTANT          2                               34     46     
R_PAREN               )                               34     47     
R_PAREN               )                               34     48     
L_BRACES              {                               34     49     
R_BRACES              }                               34     50     
SEMI_COLON            ;                               34     51     
R_BRACES              }                               35     1      
VOID                  void                            38     1      
IDENTIFIER            fun                             38     6      
L_PAREN               (                               38     9      
INT                   int                             38     10     
IDENTIFIER            a                               38     14     
R_PAREN               )                               38     15     
L_BRACES              {                               39     1      
IDENTIFIER            printf                          40     5      
L_PAREN               (                               40     11     
STR_CONSTANT          "Value of a is %d\n"            40     12     
COMMA                 ,                               40     32     
IDENTIFIER            a                               40     34     
R_PAREN               )                               40     35     
SEMI_COLON            ;                               40     36     
R_BRACES              }                               41     1      
INT                   int                             43     1      
IDENTIFIER            main                            43     5      
L_PAREN               (                               43     9      
R_PAREN               )                               43     10     
L_BRACES              {                               44     1      
VOID                  void                            46     5      
L_PAREN               (                               46     10     
MULTIPLY              *                               46     11     
IDENTIFIER            fun_ptr                         46     12     
R_PAREN               )                               46     19     
L_PAREN               (                               46     20     
INT                   int                             46     21     
R_PAREN               )                               46     24     
ASSIGNMENT            =                               46     26     
BITWISE_AND           &                               46     28     
IDENTIFIER            fun                             46     29     
SEMI_COLON            ;                               46     32     
L_PAREN               (                               54     5      
MULTIPLY              *                               54     6      
IDENTIFIER            fun_ptr                         54     7      
R_PAREN               )                               54     14     
L_PAREN               (                               54     15     
INT_CONSTANT          10                              54     16     
R_PAREN               )                               54     18     
SEMI_COLON            ;                               54     19     
RETURN                return                          56     5      
INT_CONSTANT          0                               56     12     
SEMI_COLON            ;                               56     13     
R_BRACES              }                               57     1      
