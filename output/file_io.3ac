main:
BeginFunc
tmp@0 = sconst@temp1.txt
tmp@1 = sconst@w
push tmp@0
push tmp@1
tmp@2 = func_call fopen
pop tmp@1
pop tmp@0
ptr1|main = tmp@2
tmp@3 = sconst@temp2.txt
tmp@4 = sconst@r
push tmp@3
push tmp@4
tmp@5 = func_call fopen
pop tmp@4
pop tmp@3
ptr2|main = tmp@5
tmp@6 = not_bool ptr1|main
ifz tmp@6 goto label#0
tmp@7 = sconst@error\n
push tmp@7
push lconst@1
None = func_call printf
pop lconst@1
pop tmp@7
push lconst@-1
tmp@8 = func_call exit
pop lconst@-1
label#0:
tmp@9 = not_bool ptr2|main
ifz tmp@9 goto label#1
tmp@10 = sconst@error\n
push tmp@10
push lconst@1
None = func_call printf
pop lconst@1
pop tmp@10
push lconst@-1
tmp@11 = func_call exit
pop lconst@-1
label#1:
tmp@13 = sconst@%ld
tmp@12 = addr(sc|main)
push ptr2|main
push tmp@13
push tmp@12
tmp@14 = func_call fscanf
pop tmp@12
pop tmp@13
pop ptr2|main
tmp@15 = sconst@sc: %ld\n
push tmp@15
push sc|main
None = func_call printf
pop sc|main
pop tmp@15
tmp@16 = sconst@enter a string to write in temp2.txt
push tmp@16
None = func_call puts
pop tmp@16
tmp@17 = addr(str1|main)
push tmp@17
None = func_call gets
pop tmp@17
tmp@19 = sconst@%s\n
tmp@18 = addr(str1|main)
push ptr1|main
push tmp@19
push tmp@18
tmp@20 = func_call fprintf
pop tmp@18
pop tmp@19
pop ptr1|main
push ptr1|main
tmp@21 = func_call fclose
pop ptr1|main
push ptr2|main
tmp@22 = func_call fclose
pop ptr2|main
return lconst@0
EndFunc
