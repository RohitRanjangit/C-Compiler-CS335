Token                 Lexeme                          Line#  Column#
VOID                  void                            3      1      
IDENTIFIER            f1                              3      6      
L_PAREN               (                               3      8      
R_PAREN               )                               3      9      
L_BRACES              {                               3      10     
IDENTIFIER            f1                              4      5      
L_PAREN               (                               4      7      
R_PAREN               )                               4      8      
SEMI_COLON            ;                               4      9      
IF                    if                              5      5      
L_PAREN               (                               5      7      
IDENTIFIER            a                               5      8      
R_PAREN               )                               5      9      
IDENTIFIER            b                               6      5      
SEMI_COLON            ;                               6      6      
IF                    if                              7      5      
L_PAREN               (                               7      7      
IDENTIFIER            c                               7      8      
R_PAREN               )                               7      9      
IDENTIFIER            c                               8      5      
SEMI_COLON            ;                               8      6      
ELSE                  else                            9      5      
IDENTIFIER            d                               10     5      
SEMI_COLON            ;                               10     6      
RETURN                return                          11     5      
IDENTIFIER            f1                              11     12     
L_PAREN               (                               11     14     
R_PAREN               )                               11     15     
SEMI_COLON            ;                               11     16     
R_BRACES              }                               12     1      
VOID                  void                            14     1      
IDENTIFIER            f2                              14     6      
L_PAREN               (                               14     8      
R_PAREN               )                               14     9      
SEMI_COLON            ;                               14     10     
INT                   int                             16     1      
IDENTIFIER            global                          16     5      
ASSIGNMENT            =                               16     12     
INT_CONSTANT          0                               16     13     
SEMI_COLON            ;                               16     14     
LONG                  long                            18     1      
DOUBLE                double                          18     6      
IDENTIFIER            another_global_variable_WITH_CODE_12387894965  18     13     
ASSIGNMENT            =                               18     59     
REAL_CONSTANT         34521.                          18     61     
SEMI_COLON            ;                               18     67     
INT                   int                             20     1      
IDENTIFIER            main                            20     5      
ASSIGNMENT            =                               20     9      
INT_CONSTANT          23                              20     10     
SEMI_COLON            ;                               20     12     
INT                   int                             22     1      
IDENTIFIER            main                            22     5      
L_BRACES              {                               22     9      
INT                   int                             23     5      
MULTIPLY              *                               23     8      
IDENTIFIER            pointer1                        23     10     
ASSIGNMENT            =                               23     19     
NULL                  NULL                            23     21     
SEMI_COLON            ;                               23     25     
INT                   int                             24     5      
MULTIPLY              *                               24     9      
MULTIPLY              *                               24     10     
IDENTIFIER            pointer2                        24     11     
ASSIGNMENT            =                               24     20     
BITWISE_AND           &                               24     22     
IDENTIFIER            pointer1                        24     23     
SEMI_COLON            ;                               24     31     
INT                   int                             25     5      
IDENTIFIER            hex_num                         25     9      
ASSIGNMENT            =                               25     17     
HEX_CONSTANT          0x123ffddffcd                   25     19     
SEMI_COLON            ;                               25     32     
MULTIPLY              *                               26     5      
IDENTIFIER            pointer1                        26     6      
ASSIGNMENT            =                               26     15     
L_PAREN               (                               26     17     
FLOAT                 float                           26     18     
MULTIPLY              *                               26     24     
R_PAREN               )                               26     25     
EXPONENT_CONSTANT     1e144                           26     26     
SEMI_COLON            ;                               26     31     
BOOL                  bool                            27     5      
IDENTIFIER            logic1                          27     10     
ASSIGNMENT            =                               27     17     
TRUE                  true                            27     19     
SEMI_COLON            ;                               27     23     
IDENTIFIER            hex_num                         28     5      
LEFT_SHIFT            <<                              28     13     
INT_CONSTANT          1                               28     16     
SEMI_COLON            ;                               28     17     
IDENTIFIER            logic1                          29     5      
ASSIGNMENT            =                               29     12     
TRUE                  true                            29     14     
LOGICAL_AND           &&                              29     19     
FALSE                 false                           29     22     
LOGICAL_OR            ||                              29     28     
L_PAREN               (                               29     31     
IDENTIFIER            logic1                          29     32     
BITWISE_XOR           ^                               29     39     
HEX_CONSTANT          0xffffff                        29     40     
R_PAREN               )                               29     49     
SEMI_COLON            ;                               29     50     
L_BRACES              {                               30     5      
CHAR                  char                            31     9      
IDENTIFIER            a                               31     14     
ASSIGNMENT            =                               31     16     
CHAR_CONSTANT         'a'                             31     18     
SEMI_COLON            ;                               31     21     
CHAR                  char                            32     9      
IDENTIFIER            str1                            32     14     
L_SQBR                [                               32     18     
INT_CONSTANT          345                             32     19     
R_SQBR                ]                               32     22     
ASSIGNMENT            =                               32     23     
STR_CONSTANT          "this \0 is a character\t \narray"  32     25     
SEMI_COLON            ;                               32     59     
R_BRACES              }                               33     5      
RETURN                return                          34     5      
INT_CONSTANT          0                               34     12     
SEMI_COLON            ;                               34     13     
R_BRACES              }                               35     1      
INT                   int                             37     1      
IDENTIFIER            f3                              37     5      
L_PAREN               (                               37     7      
R_PAREN               )                               37     8      
L_BRACES              {                               37     9      
CHAR                  char                            38     5      
IDENTIFIER            str                             38     10     
L_SQBR                [                               38     13     
R_SQBR                ]                               38     14     
ASSIGNMENT            =                               38     16     
STR_CONSTANT          "check_constant_string"         38     18     
SEMI_COLON            ;                               38     41     
L_BRACES              {                               39     5      
LONG                  long                            40     9      
IDENTIFIER            block_var1                      40     14     
ASSIGNMENT            =                               40     25     
INT_CONSTANT          0                               40     27     
SEMI_COLON            ;                               40     28     
L_BRACES              {                               41     9      
DOUBLE                double                          42     13     
IDENTIFIER            var2                            42     20     
ASSIGNMENT            =                               42     25     
EXPONENT_CONSTANT     1685.34e100                     42     27     
SEMI_COLON            ;                               42     38     
R_BRACES              }                               43     9      
R_BRACES              }                               44     5      
RETURN                return                          45     5      
L_PAREN               (                               45     12     
INT                   int                             45     13     
R_PAREN               )                               45     16     
EXPONENT_CONSTANT     .123e120                        45     17     
SEMI_COLON            ;                               45     25     
R_BRACES              }                               46     1      
