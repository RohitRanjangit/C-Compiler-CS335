input_matrix:
BeginFunc
i|input_matrix = lconst@0
label#0:
tmp@0 = i|input_matrix int< n|input_matrix
ifz tmp@0 goto label#4
j|input_matrix = lconst@0
label#1:
tmp@2 = j|input_matrix int< n|input_matrix
ifz tmp@2 goto label#3
tmp@8 = sconst@%ld
tmp@4 = i|input_matrix long* lconst@80
tmp@5 = a|input_matrix long+ tmp@4
tmp@6 = j|input_matrix long* lconst@8
tmp@7 = tmp@5 long+ tmp@6
push tmp@8
push tmp@7
tmp@9 = func_call scanf
pop tmp@7
pop tmp@8
label#2:
tmp@3 = j|input_matrix
j|input_matrix = j|input_matrix int+ lconst@1
goto label#1
label#3:
tmp@1 = i|input_matrix
i|input_matrix = i|input_matrix int+ lconst@1
goto label#0
label#4:
EndFunc
main:
BeginFunc
tmp@11 = sconst@%ld
tmp@10 = addr(n|main)
push tmp@11
push tmp@10
tmp@12 = func_call scanf
pop tmp@10
pop tmp@11
tmp@13 = addr(a|main)
push tmp@13
push n|main
None = func_call input_matrix
pop n|main
pop tmp@13
tmp@14 = addr(b|main)
push tmp@14
push n|main
None = func_call input_matrix
pop n|main
pop tmp@14
i|main = lconst@0
label#5:
tmp@15 = i|main int< n|main
ifz tmp@15 goto label#11
j|main = lconst@0
label#6:
tmp@17 = j|main int< n|main
ifz tmp@17 goto label#10
tmp@19 = addr(c|main)
tmp@20 = i|main long* lconst@80
tmp@21 = tmp@19 long+ tmp@20
tmp@22 = j|main long* lconst@8
tmp@23 = tmp@21 long+ tmp@22
tmp@23 eq lconst@0
tmp@24 = load(tmp@23)
k|main = lconst@0
label#7:
tmp@25 = k|main int< n|main
ifz tmp@25 goto label#9
tmp@27 = addr(c|main)
tmp@28 = i|main long* lconst@80
tmp@29 = tmp@27 long+ tmp@28
tmp@30 = j|main long* lconst@8
tmp@31 = tmp@29 long+ tmp@30
tmp@45 = load(tmp@31)
tmp@27 = addr(c|main)
tmp@28 = i|main long* lconst@80
tmp@29 = tmp@27 long+ tmp@28
tmp@30 = j|main long* lconst@8
tmp@31 = tmp@29 long+ tmp@30
tmp@45 = load(tmp@31)
tmp@32 = addr(a|main)
tmp@33 = i|main long* lconst@80
tmp@34 = tmp@32 long+ tmp@33
tmp@35 = k|main long* lconst@8
tmp@36 = tmp@34 long+ tmp@35
tmp@42 = load(tmp@36)
tmp@37 = addr(b|main)
tmp@38 = k|main long* lconst@80
tmp@39 = tmp@37 long+ tmp@38
tmp@40 = j|main long* lconst@8
tmp@41 = tmp@39 long+ tmp@40
tmp@43 = load(tmp@41)
tmp@44 = tmp@42 int* tmp@43
tmp@46 = tmp@45 int+ tmp@44
tmp@31 eq tmp@46
tmp@47 = load(tmp@31)
label#8:
tmp@26 = k|main
k|main = k|main int+ lconst@1
goto label#7
label#9:
tmp@18 = j|main
j|main = j|main int+ lconst@1
goto label#6
label#10:
tmp@16 = i|main
i|main = i|main int+ lconst@1
goto label#5
label#11:
i|main = lconst@0
label#12:
tmp@48 = i|main int< n|main
ifz tmp@48 goto label#17
j|main = lconst@0
label#13:
tmp@50 = j|main int< n|main
ifz tmp@50 goto label#15
tmp@58 = sconst@%ld 
tmp@52 = addr(c|main)
tmp@53 = i|main long* lconst@80
tmp@54 = tmp@52 long+ tmp@53
tmp@55 = j|main long* lconst@8
tmp@56 = tmp@54 long+ tmp@55
tmp@57 = load(tmp@56)
push tmp@58
push tmp@57
tmp@59 = func_call printf
pop tmp@57
pop tmp@58
label#14:
tmp@51 = j|main
j|main = j|main int+ lconst@1
goto label#13
label#15:
tmp@60 = sconst@

push tmp@60
push lconst@1
tmp@61 = func_call printf
pop lconst@1
pop tmp@60
label#16:
tmp@49 = i|main
i|main = i|main int+ lconst@1
goto label#12
label#17:
return lconst@0
EndFunc
