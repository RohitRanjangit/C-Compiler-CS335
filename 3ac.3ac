insert:
BeginFunc
tmp@0 = root|insert long== lconst@0
ifz tmp@0 goto label#0
push lconst@24
tmp@1 = func_call malloc
pop lconst@24
node|scope@7 = tmp@1
tmp@2 = node|scope@7 long+ lconst@8
tmp@2 eq data|insert
tmp@3 = load(tmp@2)
tmp@4 = node|scope@7 long+ lconst@16
tmp@4 eq lconst@0
tmp@5 = load(tmp@4)
tmp@6 = node|scope@7 long+ lconst@24
tmp@6 eq lconst@0
tmp@7 = load(tmp@6)
return node|scope@7
label#0:
tmp@8 = root|insert long+ lconst@8
tmp@9 = load(tmp@8)
tmp@10 = tmp@9 int> data|insert
ifz tmp@10 goto label#1
tmp@11 = root|insert long+ lconst@16
tmp@12 = root|insert long+ lconst@16
tmp@13 = load(tmp@12)
push tmp@13
push data|insert
tmp@14 = func_call insert
pop data|insert
pop tmp@13
tmp@11 eq tmp@14
tmp@15 = load(tmp@11)
goto label#2
label#1:
tmp@16 = root|insert long+ lconst@24
tmp@17 = root|insert long+ lconst@24
tmp@18 = load(tmp@17)
push tmp@18
push data|insert
tmp@19 = func_call insert
pop data|insert
pop tmp@18
tmp@16 eq tmp@19
tmp@20 = load(tmp@16)
label#2:
return root|insert
EndFunc
inorder:
BeginFunc
tmp@21 = root|inorder long== lconst@0
ifz tmp@21 goto label#3
return
label#3:
tmp@22 = root|inorder long+ lconst@16
tmp@23 = load(tmp@22)
push tmp@23
None = func_call inorder
pop tmp@23
tmp@26 = sconst@%ld 
tmp@24 = root|inorder long+ lconst@8
tmp@25 = load(tmp@24)
push tmp@26
push tmp@25
tmp@27 = func_call printf
pop tmp@25
pop tmp@26
tmp@28 = root|inorder long+ lconst@24
tmp@29 = load(tmp@28)
push tmp@29
None = func_call inorder
pop tmp@29
EndFunc
preorder:
BeginFunc
tmp@30 = root|preorder long== lconst@0
ifz tmp@30 goto label#4
return
label#4:
tmp@33 = sconst@%ld 
tmp@31 = root|preorder long+ lconst@8
tmp@32 = load(tmp@31)
push tmp@33
push tmp@32
tmp@34 = func_call printf
pop tmp@32
pop tmp@33
tmp@35 = root|preorder long+ lconst@16
tmp@36 = load(tmp@35)
push tmp@36
None = func_call inorder
pop tmp@36
tmp@37 = root|preorder long+ lconst@24
tmp@38 = load(tmp@37)
push tmp@38
None = func_call inorder
pop tmp@38
EndFunc
postorder:
BeginFunc
tmp@39 = root|postorder long== lconst@0
ifz tmp@39 goto label#5
return
label#5:
tmp@40 = root|postorder long+ lconst@16
tmp@41 = load(tmp@40)
push tmp@41
None = func_call inorder
pop tmp@41
tmp@42 = root|postorder long+ lconst@24
tmp@43 = load(tmp@42)
push tmp@43
None = func_call inorder
pop tmp@43
tmp@46 = sconst@%ld 
tmp@44 = root|postorder long+ lconst@8
tmp@45 = load(tmp@44)
push tmp@46
push tmp@45
tmp@47 = func_call printf
pop tmp@45
pop tmp@46
EndFunc
main:
BeginFunc
root|main = lconst@0
tmp@48 = sconst@Enter number to insert in BST (stop at -1)

push tmp@48
tmp@49 = func_call printf1
pop tmp@48
label#6:
tmp@51 = sconst@%ld
tmp@50 = addr(n|main)
push tmp@51
push tmp@50
tmp@52 = func_call scanf
pop tmp@50
pop tmp@51
tmp@53 = n|main int== lconst@-1
ifz tmp@53 goto label#7
goto label#9
label#7:
push root|main
push n|main
tmp@54 = func_call insert
pop n|main
pop root|main
root|main = tmp@54
label#8:
ifnz lconst@1 goto label#6
label#9:
push root|main
None = func_call inorder
pop root|main
push root|main
None = func_call preorder
pop root|main
push root|main
None = func_call postorder
pop root|main
EndFunc
