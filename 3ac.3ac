dfs:
BeginFunc
tmp@0 = addr(visited|global)
tmp@1 = u|dfs long* lconst@8
tmp@2 = tmp@0 long+ tmp@1
tmp@2 eq lconst@1
tmp@3 = load(tmp@2)
tmp@4 = p|dfs int== lconst@-1
ifz tmp@4 goto label#0
tmp@6 = sconst@Node %ld: new tree

tmp@5 = u|dfs int+ lconst@1
push tmp@6
push tmp@5
tmp@7 = func_call printf
pop tmp@5
pop tmp@6
goto label#1
label#0:
tmp@10 = sconst@Node %ld: Parent: %ld

tmp@8 = u|dfs int+ lconst@1
tmp@9 = p|dfs int+ lconst@1
push tmp@10
push tmp@8
push tmp@9
tmp@11 = func_call printf2
pop tmp@9
pop tmp@8
pop tmp@10
label#1:
tmp@12 = addr(adj|global)
tmp@13 = u|dfs long* lconst@8
tmp@14 = tmp@12 long+ tmp@13
tmp@15 = load(tmp@14)
node|dfs = tmp@15
label#2:
tmp@16 = node|dfs long!= lconst@0
ifz tmp@16 goto label#4
tmp@17 = addr(visited|global)
tmp@18 = node|dfs long+ lconst@8
tmp@19 = load(tmp@18)
tmp@20 = tmp@19 long* lconst@8
tmp@21 = tmp@17 long+ tmp@20
tmp@22 = load(tmp@21)
tmp@23 = not_bool tmp@22
ifz tmp@23 goto label#3
tmp@24 = node|dfs long+ lconst@8
tmp@25 = load(tmp@24)
push tmp@25
push u|dfs
None = func_call dfs
pop u|dfs
pop tmp@25
label#3:
tmp@26 = node|dfs long+ lconst@16
tmp@27 = load(tmp@26)
node|dfs = tmp@27
goto label#2
label#4:
EndFunc
push:
BeginFunc
tmp@28 = u|push int>= lconst@11
ifz tmp@28 goto label#5
return
label#5:
push lconst@16
tmp@29 = func_call malloc
pop lconst@16
node|push = tmp@29
tmp@30 = node|push long+ lconst@8
tmp@30 eq v|push
tmp@31 = load(tmp@30)
tmp@32 = node|push long+ lconst@16
tmp@33 = addr(adj|global)
tmp@34 = u|push long* lconst@8
tmp@35 = tmp@33 long+ tmp@34
tmp@36 = load(tmp@35)
tmp@32 eq tmp@36
tmp@37 = load(tmp@32)
tmp@38 = addr(adj|global)
tmp@39 = u|push long* lconst@8
tmp@40 = tmp@38 long+ tmp@39
tmp@40 eq node|push
tmp@41 = load(tmp@40)
EndFunc
main:
BeginFunc
i|main = lconst@0
label#6:
tmp@42 = i|main int< lconst@11
ifz tmp@42 goto label#8
tmp@45 = addr(adj|global)
tmp@46 = i|main long* lconst@8
tmp@47 = tmp@45 long+ tmp@46
tmp@47 eq lconst@0
tmp@48 = load(tmp@47)
tmp@49 = addr(visited|global)
tmp@50 = i|main long* lconst@8
tmp@51 = tmp@49 long+ tmp@50
tmp@51 eq lconst@0
tmp@52 = load(tmp@51)
label#7:
tmp@43 = i|main
tmp@44 = i|main long+ lconst@1
i|main = tmp@44
goto label#6
label#8:
tmp@53 = sconst@Enter number of vertice (<=10)

push tmp@53
tmp@54 = func_call printf1
pop tmp@53
tmp@56 = sconst@%ld
tmp@55 = addr(n|main)
push tmp@56
push tmp@55
tmp@57 = func_call scanf
pop tmp@55
pop tmp@56
tmp@58 = n|main int> lconst@10
ifnz tmp@58 goto label#9
tmp@59 = n|main int< lconst@1
ifnz tmp@59 goto label#9
tmp@60 = lconst@0
goto label#10
label#9:
tmp@60 = lconst@1
label#10:
ifz tmp@60 goto label#11
tmp@61 = sconst@invalid number

push tmp@61
tmp@62 = func_call printf1
pop tmp@61
return lconst@-1
label#11:
i|main = lconst@0
label#12:
tmp@63 = i|main int< n|main
ifz tmp@63 goto label#17
label#13:
tmp@67 = sconst@%ld
tmp@66 = addr(v|scope@13)
push tmp@67
push tmp@66
tmp@68 = func_call scanf
pop tmp@66
pop tmp@67
tmp@69 = v|scope@13 int== lconst@-1
ifz tmp@69 goto label#14
goto label#16
label#14:
tmp@70 = v|scope@13 int- lconst@1
push i|main
push tmp@70
None = func_call push
pop tmp@70
pop i|main
label#15:
ifnz lconst@1 goto label#13
label#16:
tmp@64 = i|main
tmp@65 = i|main long+ lconst@1
i|main = tmp@65
goto label#12
label#17:
i|main = lconst@0
label#18:
tmp@71 = i|main int< n|main
ifz tmp@71 goto label#20
tmp@74 = addr(visited|global)
tmp@75 = i|main long* lconst@8
tmp@76 = tmp@74 long+ tmp@75
tmp@77 = load(tmp@76)
tmp@78 = not_bool tmp@77
ifz tmp@78 goto label#19
push i|main
push lconst@-1
None = func_call dfs
pop lconst@-1
pop i|main
label#19:
tmp@72 = i|main
tmp@73 = i|main long+ lconst@1
i|main = tmp@73
goto label#18
label#20:
EndFunc
