insert:
BeginFunc
tmp@0 = load(p|insert)
tmp@1 = tmp@0 long== lconst@0
ifz tmp@1 goto label#0
tmp@2 = load(p|insert)
tmp@2 = y|scope@3
tmp@3 = load(p|insert)
tmp@4 = tmp@3 long+ lconst@8
tmp@4 = load(tmp@4)
tmp@4 = lconst@0
tmp@5 = load(p|insert)
tmp@6 = tmp@5 long+ lconst@24
tmp@6 = load(tmp@6)
tmp@6 = lconst@0
tmp@7 = load(p|insert)
tmp@8 = tmp@7 long+ lconst@16
tmp@8 = load(tmp@8)
tmp@8 = num|insert
return
goto label#3
label#0:
tmp@9 = load(p|insert)
tmp@10 = tmp@9 long+ lconst@16
tmp@10 = load(tmp@10)
tmp@11 = num|insert int== tmp@10
ifz tmp@11 goto label#1
return
label#1:
tmp@12 = load(p|insert)
tmp@13 = tmp@12 long+ lconst@16
tmp@13 = load(tmp@13)
tmp@14 = num|insert int< tmp@13
ifz tmp@14 goto label#2
tmp@15 = load(p|insert)
tmp@16 = tmp@15 long+ lconst@8
tmp@16 = load(tmp@16)
tmp@17 = addr(tmp@16)
push tmp@17
push num|insert
tmp@18 = func_call insert
pop num|insert
pop tmp@17
goto label#3
label#2:
tmp@19 = load(p|insert)
tmp@20 = tmp@19 long+ lconst@24
tmp@20 = load(tmp@20)
tmp@21 = addr(tmp@20)
push tmp@21
push num|insert
tmp@22 = func_call insert
pop num|insert
pop tmp@21
label#3:
return
EndFunc
inorder:
BeginFunc
tmp@23 = p|inorder long!= lconst@0
ifz tmp@23 goto label#4
tmp@24 = p|inorder long+ lconst@8
tmp@24 = load(tmp@24)
push tmp@24
tmp@25 = func_call inorder
pop tmp@24
tmp@26 = p|inorder long+ lconst@24
tmp@26 = load(tmp@26)
push tmp@26
tmp@27 = func_call inorder
pop tmp@26
label#4:
return
EndFunc
preorder:
BeginFunc
tmp@28 = p|preorder long!= lconst@0
ifz tmp@28 goto label#5
tmp@29 = p|preorder long+ lconst@8
tmp@29 = load(tmp@29)
push tmp@29
tmp@30 = func_call preorder
pop tmp@29
tmp@31 = p|preorder long+ lconst@24
tmp@31 = load(tmp@31)
push tmp@31
tmp@32 = func_call preorder
pop tmp@31
label#5:
return
EndFunc
postorder:
BeginFunc
tmp@33 = p|postorder long!= lconst@0
ifz tmp@33 goto label#6
tmp@34 = p|postorder long+ lconst@8
tmp@34 = load(tmp@34)
push tmp@34
tmp@35 = func_call postorder
pop tmp@34
tmp@36 = p|postorder long+ lconst@24
tmp@36 = load(tmp@36)
push tmp@36
tmp@37 = func_call postorder
pop tmp@36
label#6:
return
EndFunc
main:
BeginFunc
no|main = lconst@6
tmp@38 = arr|main long+ lconst@0
tmp@38 = lconst@12
tmp@39 = arr|main long+ lconst@8
tmp@39 = lconst@11
tmp@40 = arr|main long+ lconst@16
tmp@40 = lconst@13
tmp@41 = arr|main long+ lconst@24
tmp@41 = lconst@5
tmp@42 = arr|main long+ lconst@32
tmp@42 = lconst@6
tmp@43 = arr|main long+ lconst@40
tmp@43 = lconst@7
ptr|main = lconst@0
tmp@44 = ptr|main long+ lconst@16
tmp@44 = load(tmp@44)
tmp@44 = lconst@0
i|main = lconst@0
label#7:
tmp@45 = i|main int< no|main
ifz tmp@45 goto label#9
tmp@47 = addr(ptr|main)
tmp@48 = i|main long* lconst@8
tmp@49 = arr|main long+ tmp@48
push tmp@47
push tmp@49
tmp@50 = func_call insert
pop tmp@49
pop tmp@47
label#8:
tmp@46 = = i|main
i|main = i|main int+ lconst@1
goto label#7
label#9:
push ptr|main
tmp@51 = func_call inorder
pop ptr|main
push ptr|main
tmp@52 = func_call preorder
pop ptr|main
push ptr|main
tmp@53 = func_call postorder
pop ptr|main
EndFunc
