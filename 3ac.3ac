many_sum:
BeginFunc
tmp@0 = a|many_sum int+ b|many_sum
tmp@1 = tmp@0 int+ c|many_sum
tmp@2 = tmp@1 int+ d|many_sum
tmp@3 = tmp@2 int+ e|many_sum
tmp@4 = tmp@3 int+ f|many_sum
tmp@5 = tmp@4 int+ g|many_sum
tmp@6 = tmp@5 int+ h|many_sum
tmp@7 = tmp@6 int+ i|many_sum
tmp@8 = tmp@7 int+ j|many_sum
tmp@9 = tmp@8 int+ k|many_sum
tmp@10 = int_to_float tmp@9
tmp@11 = tmp@10 float+ l|many_sum
s|many_sum = tmp@11
tmp@13 = sconst@%ld

tmp@12 = float_to_int s|many_sum
push tmp@13
push tmp@12
None = func_call printf
pop tmp@12
pop tmp@13
tmp@14 = float_to_int s|many_sum
return tmp@14
EndFunc
main:
BeginFunc
tmp@16 = sconst@%ld

push lconst@1
push lconst@2
push lconst@3
push lconst@4
push lconst@5
push lconst@6
push lconst@7
push lconst@8
push lconst@9
push lconst@10
push lconst@11
push fconst@11.7
tmp@15 = func_call many_sum
pop fconst@11.7
pop lconst@11
pop lconst@10
pop lconst@9
pop lconst@8
pop lconst@7
pop lconst@6
pop lconst@5
pop lconst@4
pop lconst@3
pop lconst@2
pop lconst@1
push tmp@16
push tmp@15
None = func_call printf
pop tmp@15
pop tmp@16
return lconst@0
EndFunc
