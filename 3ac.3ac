func:
BeginFunc
<<<<<<< HEAD
tmp@0 = root|insert long== lconst@0
ifz tmp@0 goto label#0
tmp@1 = sconst@%ld

push tmp@1
push lconst@24
tmp@2 = func_call printf
pop lconst@24
pop tmp@1
push lconst@24
tmp@3 = func_call malloc
pop lconst@24
node|scope@7 = tmp@3
tmp@4 = sconst@%ld

push tmp@4
push lconst@24
tmp@5 = func_call printf
pop lconst@24
pop tmp@4
tmp@6 = node|scope@7 long+ lconst@8
tmp@6 eq data|insert
tmp@7 = load(tmp@6)
tmp@8 = node|scope@7 long+ lconst@16
tmp@8 eq lconst@0
tmp@9 = load(tmp@8)
tmp@10 = node|scope@7 long+ lconst@24
tmp@10 eq lconst@0
tmp@11 = load(tmp@10)
return node|scope@7
label#0:
tmp@12 = root|insert long+ lconst@8
tmp@13 = load(tmp@12)
tmp@14 = tmp@13 int> data|insert
ifz tmp@14 goto label#1
tmp@15 = root|insert long+ lconst@16
tmp@16 = root|insert long+ lconst@16
tmp@17 = load(tmp@16)
push tmp@17
push data|insert
tmp@18 = func_call insert
pop data|insert
pop tmp@17
tmp@15 eq tmp@18
tmp@19 = load(tmp@15)
goto label#2
label#1:
tmp@20 = root|insert long+ lconst@24
tmp@21 = root|insert long+ lconst@24
tmp@22 = load(tmp@21)
push tmp@22
push data|insert
tmp@23 = func_call insert
pop data|insert
pop tmp@22
tmp@20 eq tmp@23
tmp@24 = load(tmp@20)
label#2:
return root|insert
=======
tmp@0 = x|func float* x|func
tmp@1 = tmp@0 float* x|func
tmp@2 = x|func float* x|func
tmp@3 = tmp@1 float- tmp@2
tmp@4 = tmp@3 float+ fconst@2
return tmp@4
>>>>>>> bc613a19a7a5b2fdec916e30b2069aa1e94bd781
EndFunc
deriv:
BeginFunc
<<<<<<< HEAD
tmp@25 = root|inorder long== lconst@0
ifz tmp@25 goto label#3
return
label#3:
tmp@26 = root|inorder long+ lconst@16
tmp@27 = load(tmp@26)
push tmp@27
None = func_call inorder
pop tmp@27
tmp@30 = sconst@%ld 
tmp@28 = root|inorder long+ lconst@8
tmp@29 = load(tmp@28)
push tmp@30
push tmp@29
tmp@31 = func_call printf
pop tmp@29
pop tmp@30
tmp@32 = root|inorder long+ lconst@24
tmp@33 = load(tmp@32)
push tmp@33
None = func_call inorder
pop tmp@33
EndFunc
preorder:
BeginFunc
tmp@34 = root|preorder long== lconst@0
ifz tmp@34 goto label#4
return
label#4:
tmp@37 = sconst@%ld 
tmp@35 = root|preorder long+ lconst@8
tmp@36 = load(tmp@35)
push tmp@37
push tmp@36
tmp@38 = func_call printf
pop tmp@36
pop tmp@37
tmp@39 = root|preorder long+ lconst@16
tmp@40 = load(tmp@39)
push tmp@40
None = func_call inorder
pop tmp@40
tmp@41 = root|preorder long+ lconst@24
tmp@42 = load(tmp@41)
push tmp@42
None = func_call inorder
pop tmp@42
EndFunc
postorder:
BeginFunc
tmp@43 = root|postorder long== lconst@0
ifz tmp@43 goto label#5
return
label#5:
tmp@44 = root|postorder long+ lconst@16
tmp@45 = load(tmp@44)
push tmp@45
None = func_call inorder
pop tmp@45
tmp@46 = root|postorder long+ lconst@24
tmp@47 = load(tmp@46)
push tmp@47
None = func_call inorder
pop tmp@47
tmp@50 = sconst@%ld 
tmp@48 = root|postorder long+ lconst@8
tmp@49 = load(tmp@48)
push tmp@50
push tmp@49
tmp@51 = func_call printf
pop tmp@49
pop tmp@50
EndFunc
foo:
BeginFunc
tmp@52 = root|foo long== lconst@0
ifz tmp@52 goto label#6
push lconst@24
tmp@53 = func_call malloc
pop lconst@24
node|scope@13 = tmp@53
label#6:
EndFunc
main:
BeginFunc
root|main = lconst@0
i|main = lconst@3
label#7:
tmp@54 = i|main
tmp@55 = i|main long- lconst@1
i|main = tmp@55
ifz tmp@54 goto label#8
push root|main
tmp@56 = func_call foo
pop root|main
root|main = tmp@56
goto label#7
label#8:
tmp@57 = sconst@Enter number to insert in BST (stop at -1)

push tmp@57
tmp@58 = func_call printf1
pop tmp@57
label#9:
tmp@60 = sconst@%ld
tmp@59 = addr(n|main)
push tmp@60
push tmp@59
tmp@61 = func_call scanf
pop tmp@59
pop tmp@60
tmp@62 = n|main int== lconst@-1
ifz tmp@62 goto label#10
goto label#12
label#10:
push root|main
push n|main
tmp@63 = func_call insert
pop n|main
pop root|main
root|main = tmp@63
label#11:
ifnz lconst@1 goto label#9
label#12:
tmp@64 = sconst@%ld

push tmp@64
push root|main
tmp@65 = func_call printf
pop root|main
pop tmp@64
push root|main
None = func_call inorder
pop root|main
push root|main
None = func_call preorder
pop root|main
push root|main
None = func_call postorder
pop root|main
=======
tmp@5 = fconst@3 float* x|deriv
tmp@6 = tmp@5 float* x|deriv
tmp@7 = fconst@2 float* x|deriv
tmp@8 = tmp@6 float- tmp@7
return tmp@8
EndFunc
newton_raphson:
BeginFunc
tmp@9 = sconst@%f

push tmp@9
push epsilon|newton_raphson
tmp@10 = func_call printf
pop epsilon|newton_raphson
pop tmp@9
tmp@12 = sconst@%f

tmp@11 = ufloat- epsilon|newton_raphson
push tmp@12
push tmp@11
tmp@13 = func_call printf
pop tmp@11
pop tmp@12
i|newton_raphson = lconst@0
label#0:
tmp@14 = i|newton_raphson int< max_itr|newton_raphson
ifz tmp@14 goto label#6
push x|newton_raphson
tmp@17 = func_call func
pop x|newton_raphson
push x|newton_raphson
tmp@18 = func_call deriv
pop x|newton_raphson
tmp@19 = tmp@17 float/ tmp@18
h|scope@6 = tmp@19
push x|newton_raphson
tmp@20 = func_call func
pop x|newton_raphson
a|scope@6 = tmp@20
push x|newton_raphson
tmp@21 = func_call deriv
pop x|newton_raphson
b|scope@6 = tmp@21
tmp@22 = i|newton_raphson int< lconst@10
ifz tmp@22 goto label#1
tmp@26 = sconst@%f %f %f %f

push x|newton_raphson
tmp@23 = func_call func
pop x|newton_raphson
push x|newton_raphson
tmp@24 = func_call deriv
pop x|newton_raphson
tmp@25 = a|scope@6 float/ b|scope@6
push tmp@26
push tmp@23
push tmp@24
push h|scope@6
push tmp@25
tmp@27 = func_call printf1
pop tmp@25
pop h|scope@6
pop tmp@24
pop tmp@23
pop tmp@26
label#1:
tmp@28 = h|scope@6 float< epsilon|newton_raphson
ifz tmp@28 goto label#2
tmp@29 = ufloat- epsilon|newton_raphson
tmp@30 = h|scope@6 float> tmp@29
ifz tmp@30 goto label#2
tmp@31 = lconst@1
goto label#3
label#2:
tmp@31 = lconst@0
label#3:
ifz tmp@31 goto label#4
return x|newton_raphson
label#4:
tmp@32 = x|newton_raphson float- h|scope@6
x|newton_raphson = tmp@32
label#5:
tmp@15 = i|newton_raphson
tmp@16 = i|newton_raphson long+ lconst@1
i|newton_raphson = tmp@16
goto label#0
label#6:
return x|newton_raphson
EndFunc
main:
BeginFunc
a|main = fconst@2
tmp@34 = sconst@root: %f

push fconst@-20
push fconst@0.001
push lconst@100
tmp@33 = func_call newton_raphson
pop lconst@100
pop fconst@0.001
pop fconst@-20
push tmp@34
push tmp@33
tmp@35 = func_call printf
pop tmp@33
pop tmp@34
return lconst@0
>>>>>>> bc613a19a7a5b2fdec916e30b2069aa1e94bd781
EndFunc
