insert:
BeginFunc
tmp@0 = head|insert long== lconst@0
ifz tmp@0 goto label#0
push lconst@24
tmp@1 = func_call malloc
pop lconst@24
head|insert = tmp@1
tmp@2 = head|insert long+ lconst@8
tmp@2 eq a|insert
tmp@3 = load(tmp@2)
tmp@4 = head|insert long+ lconst@16
tmp@4 eq b|insert
tmp@5 = load(tmp@4)
tmp@6 = sconst@insert complete

push tmp@6
push lconst@0
push lconst@0
push lconst@0
tmp@7 = func_call printf
pop lconst@0
pop lconst@0
pop lconst@0
pop tmp@6
return head|insert
label#0:
tmp@8 = head|insert long+ lconst@24
push lconst@24
tmp@9 = func_call malloc
pop lconst@24
tmp@8 eq tmp@9
tmp@10 = load(tmp@8)
tmp@11 = head|insert long+ lconst@24
tmp@12 = load(tmp@11)
head|insert = tmp@12
tmp@13 = head|insert long+ lconst@8
tmp@13 eq a|insert
tmp@14 = load(tmp@13)
tmp@15 = head|insert long+ lconst@16
tmp@15 eq b|insert
tmp@16 = load(tmp@15)
tmp@17 = sconst@insert complete

push tmp@17
push lconst@0
push lconst@0
push lconst@0
tmp@18 = func_call printf
pop lconst@0
pop lconst@0
pop lconst@0
pop tmp@17
return head|insert
EndFunc
s:
BeginFunc
tmp@19 = addr(n|s)
tmp@20 = tmp@19 long+ lconst@8
tmp@21 = addr(m|s)
tmp@22 = tmp@21 long+ lconst@8
tmp@23 = load(tmp@22)
tmp@24 = tmp@23 int+ lconst@3
tmp@20 eq tmp@24
tmp@25 = load(tmp@20)
tmp@26 = addr(n|s)
tmp@27 = tmp@26 long+ lconst@16
tmp@28 = addr(m|s)
tmp@29 = tmp@28 long+ lconst@16
tmp@30 = load(tmp@29)
tmp@31 = tmp@30 int+ lconst@4
tmp@27 eq tmp@31
tmp@32 = load(tmp@27)
n|s = m|s
return n|s
EndFunc
main:
BeginFunc
tmp@33 = sconst@here

push tmp@33
push lconst@1
push lconst@1
push lconst@1
tmp@34 = func_call printf
pop lconst@1
pop lconst@1
pop lconst@1
pop tmp@33
a|main = lconst@0
push a|main
push lconst@4
push lconst@5
tmp@35 = func_call insert
pop lconst@5
pop lconst@4
pop a|main
a|main = tmp@35
push a|main
push lconst@3
push lconst@2
tmp@36 = func_call insert
pop lconst@2
pop lconst@3
pop a|main
a|main = tmp@36
tmp@37 = addr(n|main)
tmp@38 = tmp@37 long+ lconst@8
tmp@38 eq lconst@4
tmp@39 = load(tmp@38)
tmp@40 = addr(n|main)
tmp@41 = tmp@40 long+ lconst@16
tmp@41 eq lconst@69
tmp@42 = load(tmp@41)
push n|main
tmp@43 = func_call s
pop n|main
n|main = tmp@43
tmp@44 = sconst@flag

push tmp@44
push lconst@1
push lconst@11
push lconst@1
tmp@45 = func_call printf
pop lconst@1
pop lconst@11
pop lconst@1
pop tmp@44
tmp@52 = sconst@%ld %ld

tmp@46 = addr(n|main)
tmp@47 = tmp@46 long+ lconst@8
tmp@48 = load(tmp@47)
tmp@49 = addr(n|main)
tmp@50 = tmp@49 long+ lconst@16
tmp@51 = load(tmp@50)
push tmp@52
push tmp@48
push tmp@51
push lconst@0
tmp@53 = func_call printf
pop lconst@0
pop tmp@51
pop tmp@48
pop tmp@52
aa|main = fconst@3
tmp@54 = addr(aa|main)
b|main = tmp@54
b|main eq fconst@4.3
tmp@55 = load(b|main)
tmp@57 = sconst@%.1f

tmp@56 = load(b|main)
push tmp@57
push tmp@56
tmp@58 = func_call printf1
pop tmp@56
pop tmp@57
tmp@59 = load(a|main)
n|main = tmp@59
tmp@64 = sconst@%ld %ld %ld

tmp@60 = a|main long+ lconst@8
tmp@61 = load(tmp@60)
tmp@62 = a|main long+ lconst@16
tmp@63 = load(tmp@62)
push tmp@64
push lconst@24
push tmp@61
push tmp@63
tmp@65 = func_call printf
pop tmp@63
pop tmp@61
pop lconst@24
pop tmp@64
tmp@72 = sconst@%ld %ld

tmp@66 = addr(n|main)
tmp@67 = tmp@66 long+ lconst@8
tmp@68 = load(tmp@67)
tmp@69 = addr(n|main)
tmp@70 = tmp@69 long+ lconst@16
tmp@71 = load(tmp@70)
push tmp@72
push tmp@68
push tmp@71
push lconst@0
tmp@73 = func_call printf
pop lconst@0
pop tmp@71
pop tmp@68
pop tmp@72
EndFunc
