
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programADD ADD_ASSIGNMENT ARROW ASSIGNMENT AUTO BITWISE_AND BITWISE_AND_ASSIGNMENT BITWISE_ONE_COMPLEMENT BITWISE_OR BITWISE_OR_ASSIGNMENT BITWISE_XOR BITWISE_XOR_ASSIGNMENT BLOCK_COMMENT BOOL BREAK CASE CHAR CHAR_CONSTANT COLON COMMA CONST CONTINUE DECREMENT DEFAULT DIVIDE DIVIDE_ASSIGNMENT DO DOT DOUBLE ELSE ENUM EQUALS EXPONENT_CONSTANT EXTERN FALSE FLOAT FOR GOTO GREATER GREATER_EQUALS HEX_CONSTANT IDENTIFIER IF INCREMENT INLINE_COMMENT INT INT_CONSTANT LEFT_SHIFT LEFT_SHIFT_ASSIGNMENT LESS LESS_EQUALS LOGICAL_AND LOGICAL_NOT LOGICAL_OR LONG L_BRACES L_PAREN L_SQBR MODULUS MODULUS_ASSIGNMENT MULTIPLY MULTIPLY_ASSIGNMENT NOT_EQUALS NULL OCTAL_CONSTANT QUES_MARK REAL_CONSTANT REGISTER RETURN RIGHT_SHIFT RIGHT_SHIFT_ASSIGNMENT R_BRACES R_PAREN R_SQBR SEMI_COLON SHORT SIGNED SIZEOF STATIC STRUCT STR_CONSTANT SUBSTRACT SUBSTRACT_ASSIGNMENT SWITCH TRUE TYPEDEF UNION UNSIGNED VOID VOLATILE WHILEprogram : translation_unit\n    translation_unit : external_declaration\n                     | translation_unit external_declaration\n    \n    external_declaration : function_definition\n                         | declaration\n    \n    function_definition : declaration_specifiers declarator declaration_list compound_statement\n\t\t\t            | declaration_specifiers declarator compound_statement\n    \n    \n    function_definition : declarator declaration_list compound_statement\n\t\t\t            | declarator compound_statement\n    \n    \n    primary_expression : IDENTIFIER\n                       | NULL\n                       | INT_CONSTANT\n                       | HEX_CONSTANT\n                       | OCTAL_CONSTANT\n                       | EXPONENT_CONSTANT\n                       | REAL_CONSTANT\n                       | CHAR_CONSTANT\n                       | STR_CONSTANT\n                       | L_PAREN expression R_PAREN\n                       | TRUE\n                       | FALSE\n    \n    postfix_expression : primary_expression\n                       | postfix_expression L_SQBR expression R_SQBR\n                       | postfix_expression L_PAREN R_PAREN\n                       | postfix_expression L_PAREN argument_expression_list R_PAREN\n                       | postfix_expression DOT IDENTIFIER\n                       | postfix_expression ARROW IDENTIFIER\n                       | postfix_expression INCREMENT\n                       | postfix_expression DECREMENT\n\n    \n    argument_expression_list : assignment_expression\n\t                         | argument_expression_list COMMA assignment_expression\n    \n    unary_expression : postfix_expression\n                     | INCREMENT unary_expression\n                     | DECREMENT unary_expression\n                     | unary_operator cast_expression\n                     | SIZEOF unary_expression\n                     | SIZEOF L_PAREN type_name R_PAREN\n    \n    unary_operator : BITWISE_AND\n                   | MULTIPLY\n                   | ADD\n                   | SUBSTRACT\n                   | BITWISE_ONE_COMPLEMENT\n                   | LOGICAL_NOT\n    \n    cast_expression : unary_expression\n\t                | L_PAREN type_name R_PAREN cast_expression\n    \n    multiplicative_expression : cast_expression\n                              | multiplicative_expression MULTIPLY cast_expression\n                              | multiplicative_expression DIVIDE cast_expression\n                              | multiplicative_expression MODULUS cast_expression\n    \n    additive_expression : multiplicative_expression\n                        | additive_expression ADD multiplicative_expression\n                        | additive_expression SUBSTRACT multiplicative_expression\n    \n    shift_expression : additive_expression\n                     | shift_expression LEFT_SHIFT additive_expression\n                     | shift_expression RIGHT_SHIFT additive_expression\n    \n    relational_expression : shift_expression\n                          | relational_expression LESS shift_expression\n                          | relational_expression GREATER shift_expression\n                          | relational_expression LESS_EQUALS shift_expression\n                          | relational_expression GREATER_EQUALS shift_expression\n    \n    equality_expression : relational_expression\n                        | equality_expression EQUALS relational_expression\n                        | equality_expression NOT_EQUALS relational_expression\n    \n    and_expression : equality_expression\n\t               | and_expression BITWISE_AND equality_expression\n    \n    exclusive_or_expression : and_expression\n\t                        | exclusive_or_expression BITWISE_XOR and_expression\n    \n    inclusive_or_expression : exclusive_or_expression\n\t                        | inclusive_or_expression BITWISE_OR exclusive_or_expression\n    \n    logical_and_expression : inclusive_or_expression\n\t                       | logical_and_expression LOGICAL_AND inclusive_or_expression\n    \n    logical_or_expression : logical_and_expression\n\t                      | logical_or_expression LOGICAL_OR logical_and_expression\n    \n    conditional_expression : logical_or_expression\n\t                       | logical_or_expression QUES_MARK expression COLON conditional_expression\n    \n    assignment_expression : conditional_expression\n\t                      | unary_expression assignment_operator assignment_expression\n    \n    assignment_operator : ASSIGNMENT\n                        | MULTIPLY_ASSIGNMENT\n                        | DIVIDE_ASSIGNMENT\n                        | MODULUS_ASSIGNMENT\n                        | ADD_ASSIGNMENT\n                        | SUBSTRACT_ASSIGNMENT\n                        | LEFT_SHIFT_ASSIGNMENT\n                        | RIGHT_SHIFT_ASSIGNMENT\n                        | BITWISE_AND_ASSIGNMENT\n                        | BITWISE_XOR_ASSIGNMENT\n                        | BITWISE_OR_ASSIGNMENT\n    \n    expression : assignment_expression\n\t           | expression COMMA assignment_expression\n    \n    constant_expression : conditional_expression\n    \n    declaration : declaration_specifiers SEMI_COLON\n\t            | declaration_specifiers init_declarator_list SEMI_COLON\n    \n    declaration_specifiers : storage_class_specifier\n                           | storage_class_specifier declaration_specifiers\n                           | type_specifier\n                           | type_specifier declaration_specifiers\n                           | type_qualifier\n                           | type_qualifier declaration_specifiers\n    \n    init_declarator_list : init_declarator\n\t                     | init_declarator_list COMMA init_declarator\n    \n    init_declarator : declarator\n\t                | declarator ASSIGNMENT initializer\n    \n    storage_class_specifier : TYPEDEF\n                            | EXTERN\n                            | STATIC\n                            | AUTO\n                            | REGISTER\n    \n    type_specifier : VOID\n                   | CHAR\n                   | SHORT\n                   | INT\n                   | LONG\n                   | FLOAT\n                   | DOUBLE\n                   | SIGNED\n                   | UNSIGNED\n                   | struct_or_union_specifier\n                   | enum_specifier\n                   | BOOL\n    \n    struct_or_union_specifier : struct_or_union IDENTIFIER L_BRACES struct_declaration_list R_BRACES\n\t                          | struct_or_union L_BRACES struct_declaration_list R_BRACES\n\t                          | struct_or_union IDENTIFIER\n    \n    struct_or_union : STRUCT\n\t                | UNION\n    \n    struct_declaration_list : struct_declaration\n\t                        | struct_declaration_list struct_declaration\n    \n    struct_declaration : specifier_qualifier_list struct_declarator_list SEMI_COLON\n    \n    specifier_qualifier_list : type_specifier specifier_qualifier_list\n                             | type_specifier\n                             | type_qualifier specifier_qualifier_list\n                             | type_qualifier\n    \n    struct_declarator_list : struct_declarator\n\t                       | struct_declarator_list COMMA struct_declarator\n    \n    struct_declarator : declarator\n                      | COLON constant_expression\n                      | declarator COLON constant_expression\n    \n    enum_specifier : ENUM L_BRACES enumerator_list R_BRACES\n                   | ENUM IDENTIFIER L_BRACES enumerator_list R_BRACES\n                   | ENUM IDENTIFIER\n    \n    enumerator_list : enumerator\n\t                | enumerator_list COMMA enumerator\n    \n    enumerator : IDENTIFIER\n\t           | IDENTIFIER ASSIGNMENT constant_expression\n    \n    type_qualifier : CONST\n\t               | VOLATILE\n    \n    declarator : pointer direct_declarator\n\t           | direct_declarator\n    \n    direct_declarator : IDENTIFIER\n                      | L_PAREN declarator R_PAREN\n                      | direct_declarator L_SQBR assignment_expression R_SQBR\n                      | direct_declarator L_SQBR R_SQBR\n                      | direct_declarator L_PAREN parameter_type_list R_PAREN\n                      | direct_declarator L_PAREN identifier_list R_PAREN\n                      | direct_declarator L_PAREN R_PAREN\n    \n    pointer : MULTIPLY\n\t        | MULTIPLY type_qualifier_list\n            | MULTIPLY pointer\n            | MULTIPLY type_qualifier_list pointer\n    \n    type_qualifier_list : type_qualifier\n\t                    | type_qualifier_list type_qualifier\n    \n    parameter_type_list : parameter_declaration\n\t                    | parameter_type_list COMMA parameter_declaration\n    \n    parameter_declaration : declaration_specifiers declarator\n\t                      | declaration_specifiers abstract_declarator\n\t                      | declaration_specifiers\n    \n    identifier_list : IDENTIFIER\n\t                | identifier_list COMMA IDENTIFIER\n    \n    type_name : specifier_qualifier_list\n\t          | specifier_qualifier_list abstract_declarator\n    \n    abstract_declarator : pointer\n\t                    | direct_abstract_declarator\n\t                    | pointer direct_abstract_declarator\n    \n    direct_abstract_declarator : L_PAREN abstract_declarator R_PAREN\n\t                           | L_SQBR R_SQBR\n\t                           | L_SQBR assignment_expression R_SQBR\n\t                           | direct_abstract_declarator L_SQBR R_SQBR\n                               | direct_abstract_declarator L_SQBR assignment_expression R_SQBR\n                               | L_PAREN R_PAREN\n                               | L_PAREN parameter_type_list R_PAREN\n                               | direct_abstract_declarator L_PAREN R_PAREN\n                               | direct_abstract_declarator L_PAREN parameter_type_list R_PAREN\n    \n    initializer : assignment_expression\n\t            | L_BRACES initializer_list R_BRACES\n\t            | L_BRACES initializer_list COMMA R_BRACES\n    \n    initializer_list : initializer\n\t                 | initializer_list COMMA initializer\n    \n    statement : labeled_statement\n\t          | compound_statement\n\t          | expression_statement\n\t          | selection_statement\n\t          | iteration_statement\n\t          | jump_statement\n    \n    labeled_statement : IDENTIFIER COLON statement\n    \n    labeled_statement : CASE constant_expression COLON statement\n\t                  | DEFAULT COLON statement\n    \n    compound_statement : L_BRACES R_BRACES\n\t                   | L_BRACES block_item_list R_BRACES\n    \n    declaration_list : declaration\n\t                 | declaration_list declaration\n    \n    block_item_list : block_item\n                   | block_item_list block_item\n    \n    block_item : statement\n                | declaration\n    \n    expression_statement : SEMI_COLON\n\t                     | expression SEMI_COLON\n    \n    selection_statement : IF L_PAREN expression R_PAREN statement\n\t                    | IF L_PAREN expression R_PAREN statement ELSE statement\n\t                    | SWITCH L_PAREN expression R_PAREN statement\n    \n    iteration_statement : WHILE L_PAREN expression R_PAREN statement\n\t                    | DO statement WHILE L_PAREN expression R_PAREN SEMI_COLON\n\t                    | FOR L_PAREN expression_statement expression_statement R_PAREN statement\n\t                    | FOR L_PAREN expression_statement expression_statement expression R_PAREN statement\n                        | FOR L_PAREN declaration expression_statement R_PAREN statement\n                        | FOR L_PAREN declaration expression_statement expression R_PAREN statement\n    \n    jump_statement : GOTO IDENTIFIER SEMI_COLON\n\t               | CONTINUE SEMI_COLON\n\t               | BREAK SEMI_COLON\n\t               | RETURN SEMI_COLON\n\t               | RETURN expression SEMI_COLON\n\t                 \n    '
    
_lr_action_items = {'TYPEDEF':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,134,137,144,155,160,161,168,177,179,180,181,226,227,228,229,235,238,246,252,254,261,267,268,300,306,313,316,340,341,342,354,356,358,359,360,361,],[13,13,-2,-4,-5,13,13,13,13,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,13,-92,13,-9,-199,13,-147,13,-123,-140,13,-7,-93,-8,-200,-197,13,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,-152,-155,-150,-6,-198,-202,-206,13,-217,-218,-219,-151,-153,13,-154,13,-122,-138,-194,-196,13,-216,-220,13,-121,-139,-195,-207,-209,-210,-212,-214,-208,-211,-213,-215,]),'EXTERN':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,134,137,144,155,160,161,168,177,179,180,181,226,227,228,229,235,238,246,252,254,261,267,268,300,306,313,316,340,341,342,354,356,358,359,360,361,],[14,14,-2,-4,-5,14,14,14,14,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,14,-92,14,-9,-199,14,-147,14,-123,-140,14,-7,-93,-8,-200,-197,14,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,-152,-155,-150,-6,-198,-202,-206,14,-217,-218,-219,-151,-153,14,-154,14,-122,-138,-194,-196,14,-216,-220,14,-121,-139,-195,-207,-209,-210,-212,-214,-208,-211,-213,-215,]),'STATIC':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,134,137,144,155,160,161,168,177,179,180,181,226,227,228,229,235,238,246,252,254,261,267,268,300,306,313,316,340,341,342,354,356,358,359,360,361,],[15,15,-2,-4,-5,15,15,15,15,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,15,-92,15,-9,-199,15,-147,15,-123,-140,15,-7,-93,-8,-200,-197,15,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,-152,-155,-150,-6,-198,-202,-206,15,-217,-218,-219,-151,-153,15,-154,15,-122,-138,-194,-196,15,-216,-220,15,-121,-139,-195,-207,-209,-210,-212,-214,-208,-211,-213,-215,]),'AUTO':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,134,137,144,155,160,161,168,177,179,180,181,226,227,228,229,235,238,246,252,254,261,267,268,300,306,313,316,340,341,342,354,356,358,359,360,361,],[16,16,-2,-4,-5,16,16,16,16,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,16,-92,16,-9,-199,16,-147,16,-123,-140,16,-7,-93,-8,-200,-197,16,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,-152,-155,-150,-6,-198,-202,-206,16,-217,-218,-219,-151,-153,16,-154,16,-122,-138,-194,-196,16,-216,-220,16,-121,-139,-195,-207,-209,-210,-212,-214,-208,-211,-213,-215,]),'REGISTER':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,134,137,144,155,160,161,168,177,179,180,181,226,227,228,229,235,238,246,252,254,261,267,268,300,306,313,316,340,341,342,354,356,358,359,360,361,],[17,17,-2,-4,-5,17,17,17,17,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,17,-92,17,-9,-199,17,-147,17,-123,-140,17,-7,-93,-8,-200,-197,17,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,-152,-155,-150,-6,-198,-202,-206,17,-217,-218,-219,-151,-153,17,-154,17,-122,-138,-194,-196,17,-216,-220,17,-121,-139,-195,-207,-209,-210,-212,-214,-208,-211,-213,-215,]),'VOID':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,87,134,137,144,145,146,147,149,150,155,160,161,166,168,177,179,180,181,208,226,227,228,229,235,237,238,239,246,252,254,261,267,268,300,306,307,313,316,340,341,342,354,356,358,359,360,361,],[18,18,-2,-4,-5,18,18,18,18,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,18,-92,18,-9,-199,18,-147,18,-123,18,-140,18,-7,-93,-8,-200,-197,18,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,18,-152,-155,-150,18,18,-126,18,18,-6,-198,-202,18,-206,18,-217,-218,-219,18,-151,-153,18,-154,18,18,-122,-127,-138,-194,-196,18,-216,-220,18,-121,-128,-139,-195,-207,-209,-210,-212,-214,-208,-211,-213,-215,]),'CHAR':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,87,134,137,144,145,146,147,149,150,155,160,161,166,168,177,179,180,181,208,226,227,228,229,235,237,238,239,246,252,254,261,267,268,300,306,307,313,316,340,341,342,354,356,358,359,360,361,],[19,19,-2,-4,-5,19,19,19,19,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,19,-92,19,-9,-199,19,-147,19,-123,19,-140,19,-7,-93,-8,-200,-197,19,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,19,-152,-155,-150,19,19,-126,19,19,-6,-198,-202,19,-206,19,-217,-218,-219,19,-151,-153,19,-154,19,19,-122,-127,-138,-194,-196,19,-216,-220,19,-121,-128,-139,-195,-207,-209,-210,-212,-214,-208,-211,-213,-215,]),'SHORT':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,87,134,137,144,145,146,147,149,150,155,160,161,166,168,177,179,180,181,208,226,227,228,229,235,237,238,239,246,252,254,261,267,268,300,306,307,313,316,340,341,342,354,356,358,359,360,361,],[20,20,-2,-4,-5,20,20,20,20,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,20,-92,20,-9,-199,20,-147,20,-123,20,-140,20,-7,-93,-8,-200,-197,20,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,20,-152,-155,-150,20,20,-126,20,20,-6,-198,-202,20,-206,20,-217,-218,-219,20,-151,-153,20,-154,20,20,-122,-127,-138,-194,-196,20,-216,-220,20,-121,-128,-139,-195,-207,-209,-210,-212,-214,-208,-211,-213,-215,]),'INT':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,87,134,137,144,145,146,147,149,150,155,160,161,166,168,177,179,180,181,208,226,227,228,229,235,237,238,239,246,252,254,261,267,268,300,306,307,313,316,340,341,342,354,356,358,359,360,361,],[21,21,-2,-4,-5,21,21,21,21,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,21,-92,21,-9,-199,21,-147,21,-123,21,-140,21,-7,-93,-8,-200,-197,21,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,21,-152,-155,-150,21,21,-126,21,21,-6,-198,-202,21,-206,21,-217,-218,-219,21,-151,-153,21,-154,21,21,-122,-127,-138,-194,-196,21,-216,-220,21,-121,-128,-139,-195,-207,-209,-210,-212,-214,-208,-211,-213,-215,]),'LONG':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,87,134,137,144,145,146,147,149,150,155,160,161,166,168,177,179,180,181,208,226,227,228,229,235,237,238,239,246,252,254,261,267,268,300,306,307,313,316,340,341,342,354,356,358,359,360,361,],[22,22,-2,-4,-5,22,22,22,22,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,22,-92,22,-9,-199,22,-147,22,-123,22,-140,22,-7,-93,-8,-200,-197,22,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,22,-152,-155,-150,22,22,-126,22,22,-6,-198,-202,22,-206,22,-217,-218,-219,22,-151,-153,22,-154,22,22,-122,-127,-138,-194,-196,22,-216,-220,22,-121,-128,-139,-195,-207,-209,-210,-212,-214,-208,-211,-213,-215,]),'FLOAT':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,87,134,137,144,145,146,147,149,150,155,160,161,166,168,177,179,180,181,208,226,227,228,229,235,237,238,239,246,252,254,261,267,268,300,306,307,313,316,340,341,342,354,356,358,359,360,361,],[23,23,-2,-4,-5,23,23,23,23,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,23,-92,23,-9,-199,23,-147,23,-123,23,-140,23,-7,-93,-8,-200,-197,23,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,23,-152,-155,-150,23,23,-126,23,23,-6,-198,-202,23,-206,23,-217,-218,-219,23,-151,-153,23,-154,23,23,-122,-127,-138,-194,-196,23,-216,-220,23,-121,-128,-139,-195,-207,-209,-210,-212,-214,-208,-211,-213,-215,]),'DOUBLE':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,87,134,137,144,145,146,147,149,150,155,160,161,166,168,177,179,180,181,208,226,227,228,229,235,237,238,239,246,252,254,261,267,268,300,306,307,313,316,340,341,342,354,356,358,359,360,361,],[24,24,-2,-4,-5,24,24,24,24,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,24,-92,24,-9,-199,24,-147,24,-123,24,-140,24,-7,-93,-8,-200,-197,24,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,24,-152,-155,-150,24,24,-126,24,24,-6,-198,-202,24,-206,24,-217,-218,-219,24,-151,-153,24,-154,24,24,-122,-127,-138,-194,-196,24,-216,-220,24,-121,-128,-139,-195,-207,-209,-210,-212,-214,-208,-211,-213,-215,]),'SIGNED':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,87,134,137,144,145,146,147,149,150,155,160,161,166,168,177,179,180,181,208,226,227,228,229,235,237,238,239,246,252,254,261,267,268,300,306,307,313,316,340,341,342,354,356,358,359,360,361,],[25,25,-2,-4,-5,25,25,25,25,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,25,-92,25,-9,-199,25,-147,25,-123,25,-140,25,-7,-93,-8,-200,-197,25,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,25,-152,-155,-150,25,25,-126,25,25,-6,-198,-202,25,-206,25,-217,-218,-219,25,-151,-153,25,-154,25,25,-122,-127,-138,-194,-196,25,-216,-220,25,-121,-128,-139,-195,-207,-209,-210,-212,-214,-208,-211,-213,-215,]),'UNSIGNED':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,87,134,137,144,145,146,147,149,150,155,160,161,166,168,177,179,180,181,208,226,227,228,229,235,237,238,239,246,252,254,261,267,268,300,306,307,313,316,340,341,342,354,356,358,359,360,361,],[26,26,-2,-4,-5,26,26,26,26,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,26,-92,26,-9,-199,26,-147,26,-123,26,-140,26,-7,-93,-8,-200,-197,26,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,26,-152,-155,-150,26,26,-126,26,26,-6,-198,-202,26,-206,26,-217,-218,-219,26,-151,-153,26,-154,26,26,-122,-127,-138,-194,-196,26,-216,-220,26,-121,-128,-139,-195,-207,-209,-210,-212,-214,-208,-211,-213,-215,]),'BOOL':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,87,134,137,144,145,146,147,149,150,155,160,161,166,168,177,179,180,181,208,226,227,228,229,235,237,238,239,246,252,254,261,267,268,300,306,307,313,316,340,341,342,354,356,358,359,360,361,],[29,29,-2,-4,-5,29,29,29,29,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,29,-92,29,-9,-199,29,-147,29,-123,29,-140,29,-7,-93,-8,-200,-197,29,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,29,-152,-155,-150,29,29,-126,29,29,-6,-198,-202,29,-206,29,-217,-218,-219,29,-151,-153,29,-154,29,29,-122,-127,-138,-194,-196,29,-216,-220,29,-121,-128,-139,-195,-207,-209,-210,-212,-214,-208,-211,-213,-215,]),'CONST':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,39,40,41,44,45,46,47,52,54,55,57,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,87,134,137,143,144,145,146,147,149,150,155,160,161,166,168,177,179,180,181,208,226,227,228,229,235,237,238,239,246,252,254,261,267,268,300,306,307,313,316,340,341,342,354,356,358,359,360,361,],[30,30,-2,-4,-5,30,30,30,30,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,30,-149,-3,30,-92,30,-9,-199,30,-147,30,30,-160,-123,30,-140,30,-7,-93,-8,-200,-197,30,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,30,-152,-155,-161,-150,30,30,-126,30,30,-6,-198,-202,30,-206,30,-217,-218,-219,30,-151,-153,30,-154,30,30,-122,-127,-138,-194,-196,30,-216,-220,30,-121,-128,-139,-195,-207,-209,-210,-212,-214,-208,-211,-213,-215,]),'VOLATILE':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,39,40,41,44,45,46,47,52,54,55,57,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,87,134,137,143,144,145,146,147,149,150,155,160,161,166,168,177,179,180,181,208,226,227,228,229,235,237,238,239,246,252,254,261,267,268,300,306,307,313,316,340,341,342,354,356,358,359,360,361,],[31,31,-2,-4,-5,31,31,31,31,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,31,-149,-3,31,-92,31,-9,-199,31,-147,31,31,-160,-123,31,-140,31,-7,-93,-8,-200,-197,31,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,31,-152,-155,-161,-150,31,31,-126,31,31,-6,-198,-202,31,-206,31,-217,-218,-219,31,-151,-153,31,-154,31,31,-122,-127,-138,-194,-196,31,-216,-220,31,-121,-128,-139,-195,-207,-209,-210,-212,-214,-208,-211,-213,-215,]),'MULTIPLY':([0,2,3,4,5,6,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,39,41,45,47,48,49,50,51,53,55,57,59,62,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,90,95,98,100,101,102,103,104,105,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,131,135,141,143,148,149,150,155,158,160,161,162,165,166,167,168,169,170,173,174,175,177,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,235,236,238,243,244,245,246,248,252,253,254,257,258,261,265,266,267,268,273,276,277,291,292,293,294,295,299,306,308,309,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[32,32,-2,-4,-5,32,-94,-96,-98,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,32,32,-3,-92,-9,109,32,-95,-97,-99,109,32,-160,-123,-140,-7,109,-93,32,-8,-197,109,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,-10,109,109,109,109,-44,-32,109,109,109,-46,109,-22,-38,-39,-40,-41,-42,-43,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,223,-10,32,-161,32,-130,-132,-6,109,-198,-202,109,-44,109,109,-206,109,109,32,109,109,109,-217,-218,-219,109,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,109,109,109,109,-28,-29,-33,109,-34,-35,-36,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,32,109,-122,109,-129,-131,-138,109,-194,109,-196,-19,109,32,109,109,-216,-220,-24,-26,-27,223,223,-47,-48,-49,109,-121,32,109,-139,109,-195,109,-45,109,109,109,109,109,109,-23,-25,109,-37,-207,-209,-210,109,109,109,-212,109,-214,109,-208,-211,-213,-215,]),'IDENTIFIER':([0,2,3,4,5,6,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,41,45,47,48,49,50,51,53,54,55,56,57,59,61,62,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,83,87,90,92,95,101,102,103,105,108,109,110,111,112,113,141,142,143,148,149,150,154,155,158,160,161,162,166,167,168,169,170,174,175,177,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,204,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,230,233,235,236,238,243,244,245,246,247,248,252,253,254,258,265,266,267,268,299,306,308,309,313,315,316,317,319,320,321,322,323,324,327,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[33,33,-2,-4,-5,33,-94,-96,-98,33,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-156,33,59,62,-124,-125,-3,-92,-9,82,33,-95,-97,-99,135,140,-157,-158,-160,-123,153,-140,-7,135,-93,33,-8,-197,82,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,135,135,82,178,135,135,135,135,135,-38,-39,-40,-41,-42,-43,33,-159,-161,33,-130,-132,153,-6,135,-198,-202,82,135,82,-206,135,135,135,135,135,-217,-218,-219,135,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,135,135,135,135,276,277,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,297,33,33,135,-122,135,-129,-131,-138,153,135,-194,82,-196,135,135,135,-216,-220,135,-121,33,135,-139,135,-195,82,82,82,135,135,135,135,135,-207,-209,-210,82,82,82,-212,82,-214,82,-208,-211,-213,-215,]),'L_PAREN':([0,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,41,45,47,48,49,50,51,52,53,55,56,57,59,62,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,88,89,90,91,95,100,101,102,103,105,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,134,135,137,141,142,143,144,148,149,150,155,158,160,161,162,166,167,168,169,170,173,174,175,177,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,204,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,233,234,235,236,238,243,244,245,246,248,252,253,254,257,258,260,261,264,265,266,267,268,273,276,277,298,299,301,304,306,308,309,313,315,316,317,319,320,321,322,323,324,325,326,327,329,331,333,334,335,340,341,342,344,346,350,351,352,354,355,356,357,358,359,360,361,],[34,34,-2,-4,-5,34,-94,-96,-98,34,54,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-156,-149,34,-3,-92,-9,87,34,-95,-97,-99,54,87,-157,-158,-160,-123,-140,-7,87,-93,34,-8,-197,87,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,-10,166,170,87,174,175,87,177,87,198,204,204,166,208,-22,-38,-39,-40,-41,-42,-43,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-152,-10,-155,235,-159,-161,-150,34,-130,-132,-6,87,-198,-202,87,87,87,-206,87,87,261,87,87,87,-217,-218,-219,87,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,87,166,87,87,-28,-29,87,87,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,-151,-153,-154,235,300,235,87,-122,166,-129,-131,-138,166,-194,87,-196,-19,166,261,261,321,87,87,-216,-220,-24,-26,-27,300,87,-179,-175,-121,34,166,-139,87,-195,87,87,87,87,87,87,166,-23,-25,87,-177,-181,-174,-180,-176,-207,-209,-210,87,87,-178,-182,87,-212,87,-214,87,-208,-211,-213,-215,]),'ENUM':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,87,134,137,144,145,146,147,149,150,155,160,161,166,168,177,179,180,181,208,226,227,228,229,235,237,238,239,246,252,254,261,267,268,300,306,307,313,316,340,341,342,354,356,358,359,360,361,],[36,36,-2,-4,-5,36,36,36,36,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,36,-92,36,-9,-199,36,-147,36,-123,36,-140,36,-7,-93,-8,-200,-197,36,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,36,-152,-155,-150,36,36,-126,36,36,-6,-198,-202,36,-206,36,-217,-218,-219,36,-151,-153,36,-154,36,36,-122,-127,-138,-194,-196,36,-216,-220,36,-121,-128,-139,-195,-207,-209,-210,-212,-214,-208,-211,-213,-215,]),'STRUCT':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,87,134,137,144,145,146,147,149,150,155,160,161,166,168,177,179,180,181,208,226,227,228,229,235,237,238,239,246,252,254,261,267,268,300,306,307,313,316,340,341,342,354,356,358,359,360,361,],[37,37,-2,-4,-5,37,37,37,37,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,37,-92,37,-9,-199,37,-147,37,-123,37,-140,37,-7,-93,-8,-200,-197,37,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,37,-152,-155,-150,37,37,-126,37,37,-6,-198,-202,37,-206,37,-217,-218,-219,37,-151,-153,37,-154,37,37,-122,-127,-138,-194,-196,37,-216,-220,37,-121,-128,-139,-195,-207,-209,-210,-212,-214,-208,-211,-213,-215,]),'UNION':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,87,134,137,144,145,146,147,149,150,155,160,161,166,168,177,179,180,181,208,226,227,228,229,235,237,238,239,246,252,254,261,267,268,300,306,307,313,316,340,341,342,354,356,358,359,360,361,],[38,38,-2,-4,-5,38,38,38,38,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,38,-92,38,-9,-199,38,-147,38,-123,38,-140,38,-7,-93,-8,-200,-197,38,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,38,-152,-155,-150,38,38,-126,38,38,-6,-198,-202,38,-206,38,-217,-218,-219,38,-151,-153,38,-154,38,38,-122,-127,-138,-194,-196,38,-216,-220,38,-121,-128,-139,-195,-207,-209,-210,-212,-214,-208,-211,-213,-215,]),'$end':([1,2,3,4,5,39,41,45,64,66,68,70,155,160,],[0,-1,-2,-4,-5,-3,-92,-9,-7,-93,-8,-197,-6,-198,]),'SEMI_COLON':([6,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,40,41,42,43,47,48,49,50,51,52,59,62,66,70,71,72,73,74,75,76,77,78,79,80,81,82,85,90,93,94,95,96,97,98,99,100,104,106,107,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,137,144,156,157,159,160,161,162,164,165,167,168,177,178,179,180,181,182,201,202,203,205,206,207,226,227,229,238,240,241,242,246,252,253,254,255,257,265,266,267,268,269,271,273,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,306,310,313,314,316,317,318,319,320,325,326,328,336,337,338,340,341,342,344,346,348,352,353,354,355,356,357,358,359,360,361,],[41,-94,-96,-98,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-102,-92,66,-100,81,41,-95,-97,-99,-147,-123,-140,-93,-197,81,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,-10,168,81,179,180,181,-89,-76,-44,-74,-32,-46,-72,-22,-70,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-68,-66,-64,-61,-56,-53,-50,-102,-152,-10,-155,-150,-103,-183,-101,-198,-202,81,-91,-44,81,-206,81,267,-217,-218,-219,268,-28,-29,-33,-34,-35,-36,-151,-153,-154,-122,307,-133,-135,-138,-194,81,-196,-90,-19,81,81,-216,-220,-77,-73,-24,-26,-27,-71,-69,-67,-65,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-121,-136,-139,-184,-195,81,-45,81,81,-23,-25,-37,-134,-137,-185,-207,-209,-210,81,81,-75,81,359,-212,81,-214,81,-208,-211,-213,-215,]),'L_BRACES':([7,12,33,35,36,37,38,40,41,44,46,47,52,59,62,63,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,90,134,137,144,158,160,161,162,167,168,179,180,181,226,227,229,252,253,254,267,268,315,316,317,319,320,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[47,-148,-149,60,61,-124,-125,47,-92,47,-199,47,-147,145,154,47,158,-93,-200,-197,47,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,47,-152,-155,-150,158,-198,-202,47,47,-206,-217,-218,-219,-151,-153,-154,-194,47,-196,-216,-220,158,-195,47,47,47,-207,-209,-210,47,47,47,-212,47,-214,47,-208,-211,-213,-215,]),'L_SQBR':([8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,49,50,51,52,55,56,57,59,62,82,100,107,115,116,117,118,119,120,121,122,123,124,134,135,137,141,142,143,144,149,150,173,201,202,226,227,229,233,234,235,238,244,245,246,257,260,261,273,276,277,298,301,304,306,313,325,326,329,331,333,334,335,350,351,],[-94,-96,-98,53,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-156,-149,-95,-97,-99,53,-157,-158,-160,-123,-140,-10,197,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-152,-10,-155,236,-159,-161,-150,-130,-132,236,-28,-29,-151,-153,-154,236,299,236,-122,-129,-131,-138,-19,236,236,-24,-26,-27,299,-179,-175,-121,-139,-23,-25,-177,-181,-174,-180,-176,-178,-182,]),'R_PAREN':([8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,49,50,51,52,54,55,56,57,58,59,62,81,96,97,98,99,100,104,106,107,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,149,150,165,168,171,172,173,198,201,202,203,205,206,207,226,227,229,231,232,233,234,235,238,244,245,246,255,256,257,259,260,261,262,263,269,271,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,302,303,304,306,313,318,322,323,325,326,328,329,331,332,333,334,335,343,345,347,348,349,350,351,],[-94,-96,-98,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-156,-149,-95,-97,-99,-147,137,-157,-158,-160,144,-123,-140,-205,-89,-76,-44,-74,-32,-46,-72,-22,-70,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-68,-66,-64,-61,-56,-53,-50,-152,-10,227,-155,229,-162,-167,-166,-159,-161,-150,-130,-132,-44,-206,257,258,-169,273,-28,-29,-33,-34,-35,-36,-151,-153,-154,-164,-165,-171,-172,301,-122,-129,-131,-138,-90,317,-19,-170,-171,301,319,320,-77,-73,-24,326,-30,-26,-27,328,-71,-69,-67,-65,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-163,-168,-173,331,-179,333,334,-175,-121,-139,-45,344,346,-23,-25,-37,-177,-181,351,-174,-180,-176,353,355,357,-75,-31,-178,-182,]),'COMMA':([8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,40,42,43,49,50,51,52,55,56,57,59,62,82,85,96,97,98,99,100,104,106,107,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,151,152,153,156,157,159,164,165,171,182,201,202,203,205,206,207,226,227,229,231,232,233,234,238,240,241,242,246,249,250,251,255,256,257,262,263,269,270,271,272,273,274,275,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,301,303,304,306,310,311,312,313,314,318,325,326,328,329,331,332,333,334,335,336,337,338,339,343,345,347,348,349,350,351,],[-94,-96,-98,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-156,-149,-102,67,-100,-95,-97,-99,-147,-157,-158,-160,-123,-140,-10,169,-89,-76,-44,-74,-32,-46,-72,-22,-70,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-68,-66,-64,-61,-56,-53,-50,-102,-152,-10,228,-155,230,-162,-167,-166,-159,-161,-150,247,-141,-143,-103,-183,-101,-91,-44,169,169,-28,-29,-33,-34,-35,-36,-151,-153,-154,-164,-165,-171,-172,-122,308,-133,-135,-138,247,315,-186,-90,169,-19,169,169,-77,169,-73,169,-24,327,-30,-26,-27,-71,-69,-67,-65,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-163,-168,-173,-179,228,-175,-121,-136,-142,-144,-139,-184,-45,-23,-25,-37,-177,-181,228,-174,-180,-176,-134,-137,-185,-187,169,169,169,-75,-31,-178,-182,]),'ASSIGNMENT':([12,33,40,52,82,98,100,107,115,116,117,118,119,120,121,122,123,124,132,134,135,137,144,153,165,201,202,203,205,206,207,226,227,229,257,273,276,277,318,325,326,328,],[-148,-149,65,-147,-10,184,-32,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,65,-152,-10,-155,-150,248,-44,-28,-29,-33,-34,-35,-36,-151,-153,-154,-19,-24,-26,-27,-45,-23,-25,-37,]),'COLON':([12,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,52,59,62,82,84,96,97,98,99,100,104,106,107,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,135,137,144,148,149,150,163,164,165,201,202,203,205,206,207,226,227,229,238,242,244,245,246,255,257,269,270,271,273,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,306,308,313,318,325,326,328,348,],[-148,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-147,-123,-140,162,167,-89,-76,-44,-74,-32,-46,-72,-22,-70,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-68,-66,-64,-61,-56,-53,-50,-152,-10,-155,-150,243,-130,-132,253,-91,-44,-28,-29,-33,-34,-35,-36,-151,-153,-154,-122,309,-129,-131,-138,-90,-19,-77,324,-73,-24,-26,-27,-71,-69,-67,-65,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-121,243,-139,-45,-23,-25,-37,-75,]),'R_BRACES':([41,47,66,70,71,72,73,74,75,76,77,78,79,80,81,97,98,99,100,104,106,107,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,135,146,147,151,152,153,157,160,161,164,165,168,179,180,181,201,202,203,205,206,207,237,239,249,250,251,252,254,257,267,268,269,271,273,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,307,311,312,314,315,316,318,325,326,328,338,339,340,341,342,348,354,356,358,359,360,361,],[-92,70,-93,-197,160,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,-76,-44,-74,-32,-46,-72,-22,-70,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-68,-66,-64,-61,-56,-53,-50,-10,238,-126,246,-141,-143,-183,-198,-202,-91,-44,-206,-217,-218,-219,-28,-29,-33,-34,-35,-36,306,-127,313,314,-186,-194,-196,-19,-216,-220,-77,-73,-24,-26,-27,-71,-69,-67,-65,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-128,-142,-144,-184,338,-195,-45,-23,-25,-37,-185,-187,-207,-209,-210,-75,-212,-214,-208,-211,-213,-215,]),'CASE':([41,47,66,70,71,72,73,74,75,76,77,78,79,80,81,90,160,161,162,167,168,179,180,181,252,253,254,267,268,316,317,319,320,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,83,-93,-197,83,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,83,-198,-202,83,83,-206,-217,-218,-219,-194,83,-196,-216,-220,-195,83,83,83,-207,-209,-210,83,83,83,-212,83,-214,83,-208,-211,-213,-215,]),'DEFAULT':([41,47,66,70,71,72,73,74,75,76,77,78,79,80,81,90,160,161,162,167,168,179,180,181,252,253,254,267,268,316,317,319,320,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,84,-93,-197,84,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,84,-198,-202,84,84,-206,-217,-218,-219,-194,84,-196,-216,-220,-195,84,84,84,-207,-209,-210,84,84,84,-212,84,-214,84,-208,-211,-213,-215,]),'IF':([41,47,66,70,71,72,73,74,75,76,77,78,79,80,81,90,160,161,162,167,168,179,180,181,252,253,254,267,268,316,317,319,320,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,86,-93,-197,86,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,86,-198,-202,86,86,-206,-217,-218,-219,-194,86,-196,-216,-220,-195,86,86,86,-207,-209,-210,86,86,86,-212,86,-214,86,-208,-211,-213,-215,]),'SWITCH':([41,47,66,70,71,72,73,74,75,76,77,78,79,80,81,90,160,161,162,167,168,179,180,181,252,253,254,267,268,316,317,319,320,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,88,-93,-197,88,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,88,-198,-202,88,88,-206,-217,-218,-219,-194,88,-196,-216,-220,-195,88,88,88,-207,-209,-210,88,88,88,-212,88,-214,88,-208,-211,-213,-215,]),'WHILE':([41,47,66,70,71,72,73,74,75,76,77,78,79,80,81,90,160,161,162,167,168,176,179,180,181,252,253,254,267,268,316,317,319,320,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,89,-93,-197,89,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,89,-198,-202,89,89,-206,264,-217,-218,-219,-194,89,-196,-216,-220,-195,89,89,89,-207,-209,-210,89,89,89,-212,89,-214,89,-208,-211,-213,-215,]),'DO':([41,47,66,70,71,72,73,74,75,76,77,78,79,80,81,90,160,161,162,167,168,179,180,181,252,253,254,267,268,316,317,319,320,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,90,-93,-197,90,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,90,-198,-202,90,90,-206,-217,-218,-219,-194,90,-196,-216,-220,-195,90,90,90,-207,-209,-210,90,90,90,-212,90,-214,90,-208,-211,-213,-215,]),'FOR':([41,47,66,70,71,72,73,74,75,76,77,78,79,80,81,90,160,161,162,167,168,179,180,181,252,253,254,267,268,316,317,319,320,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,91,-93,-197,91,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,91,-198,-202,91,91,-206,-217,-218,-219,-194,91,-196,-216,-220,-195,91,91,91,-207,-209,-210,91,91,91,-212,91,-214,91,-208,-211,-213,-215,]),'GOTO':([41,47,66,70,71,72,73,74,75,76,77,78,79,80,81,90,160,161,162,167,168,179,180,181,252,253,254,267,268,316,317,319,320,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,92,-93,-197,92,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,92,-198,-202,92,92,-206,-217,-218,-219,-194,92,-196,-216,-220,-195,92,92,92,-207,-209,-210,92,92,92,-212,92,-214,92,-208,-211,-213,-215,]),'CONTINUE':([41,47,66,70,71,72,73,74,75,76,77,78,79,80,81,90,160,161,162,167,168,179,180,181,252,253,254,267,268,316,317,319,320,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,93,-93,-197,93,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,93,-198,-202,93,93,-206,-217,-218,-219,-194,93,-196,-216,-220,-195,93,93,93,-207,-209,-210,93,93,93,-212,93,-214,93,-208,-211,-213,-215,]),'BREAK':([41,47,66,70,71,72,73,74,75,76,77,78,79,80,81,90,160,161,162,167,168,179,180,181,252,253,254,267,268,316,317,319,320,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,94,-93,-197,94,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,94,-198,-202,94,94,-206,-217,-218,-219,-194,94,-196,-216,-220,-195,94,94,94,-207,-209,-210,94,94,94,-212,94,-214,94,-208,-211,-213,-215,]),'RETURN':([41,47,66,70,71,72,73,74,75,76,77,78,79,80,81,90,160,161,162,167,168,179,180,181,252,253,254,267,268,316,317,319,320,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,95,-93,-197,95,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,95,-198,-202,95,95,-206,-217,-218,-219,-194,95,-196,-216,-220,-195,95,95,95,-207,-209,-210,95,95,95,-212,95,-214,95,-208,-211,-213,-215,]),'INCREMENT':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,90,95,100,101,102,103,105,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,135,158,160,161,162,166,167,168,169,170,174,175,177,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,204,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,236,243,248,252,253,254,257,258,265,266,267,268,273,276,277,299,309,315,316,317,319,320,321,322,323,324,325,326,327,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,101,101,101,-93,-197,101,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,-10,101,101,101,101,201,101,101,101,101,-22,-38,-39,-40,-41,-42,-43,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-10,101,-198,-202,101,101,101,-206,101,101,101,101,101,-217,-218,-219,101,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,101,101,101,101,-28,-29,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-194,101,-196,-19,101,101,101,-216,-220,-24,-26,-27,101,101,101,-195,101,101,101,101,101,101,101,-23,-25,101,-207,-209,-210,101,101,101,-212,101,-214,101,-208,-211,-213,-215,]),'DECREMENT':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,90,95,100,101,102,103,105,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,135,158,160,161,162,166,167,168,169,170,174,175,177,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,204,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,236,243,248,252,253,254,257,258,265,266,267,268,273,276,277,299,309,315,316,317,319,320,321,322,323,324,325,326,327,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,102,102,102,-93,-197,102,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,-10,102,102,102,102,202,102,102,102,102,-22,-38,-39,-40,-41,-42,-43,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-10,102,-198,-202,102,102,102,-206,102,102,102,102,102,-217,-218,-219,102,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,102,102,102,102,-28,-29,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,-194,102,-196,-19,102,102,102,-216,-220,-24,-26,-27,102,102,102,-195,102,102,102,102,102,102,102,-23,-25,102,-207,-209,-210,102,102,102,-212,102,-214,102,-208,-211,-213,-215,]),'SIZEOF':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,83,87,90,95,101,102,103,105,108,109,110,111,112,113,158,160,161,162,166,167,168,169,170,174,175,177,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,204,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,236,243,248,252,253,254,258,265,266,267,268,299,309,315,316,317,319,320,321,322,323,324,327,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,105,105,105,-93,-197,105,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,105,105,105,105,105,105,105,105,-38,-39,-40,-41,-42,-43,105,-198,-202,105,105,105,-206,105,105,105,105,105,-217,-218,-219,105,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,-194,105,-196,105,105,105,-216,-220,105,105,105,-195,105,105,105,105,105,105,105,105,-207,-209,-210,105,105,105,-212,105,-214,105,-208,-211,-213,-215,]),'BITWISE_AND':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,90,95,98,100,101,102,103,104,105,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,135,158,160,161,162,165,166,167,168,169,170,174,175,177,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,236,243,248,252,253,254,257,258,265,266,267,268,273,276,277,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,299,309,315,316,317,318,319,320,321,322,323,324,325,326,327,328,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,108,108,108,-93,-197,108,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,-10,108,108,108,108,-44,-32,108,108,108,-46,108,-22,-38,-39,-40,-41,-42,-43,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,212,-64,-61,-56,-53,-50,-10,108,-198,-202,108,-44,108,108,-206,108,108,108,108,108,-217,-218,-219,108,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,108,108,108,108,-28,-29,-33,108,-34,-35,-36,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,-194,108,-196,-19,108,108,108,-216,-220,-24,-26,-27,212,-65,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,108,108,108,-195,108,-45,108,108,108,108,108,108,-23,-25,108,-37,-207,-209,-210,108,108,108,-212,108,-214,108,-208,-211,-213,-215,]),'ADD':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,90,95,98,100,101,102,103,104,105,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,130,131,135,158,160,161,162,165,166,167,168,169,170,174,175,177,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,236,243,248,252,253,254,257,258,265,266,267,268,273,276,277,289,290,291,292,293,294,295,299,309,315,316,317,318,319,320,321,322,323,324,325,326,327,328,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,110,110,110,-93,-197,110,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,-10,110,110,110,110,-44,-32,110,110,110,-46,110,-22,-38,-39,-40,-41,-42,-43,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,221,-50,-10,110,-198,-202,110,-44,110,110,-206,110,110,110,110,110,-217,-218,-219,110,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,110,110,110,110,-28,-29,-33,110,-34,-35,-36,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-194,110,-196,-19,110,110,110,-216,-220,-24,-26,-27,221,221,-51,-52,-47,-48,-49,110,110,110,-195,110,-45,110,110,110,110,110,110,-23,-25,110,-37,-207,-209,-210,110,110,110,-212,110,-214,110,-208,-211,-213,-215,]),'SUBSTRACT':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,90,95,98,100,101,102,103,104,105,107,108,109,110,111,112,113,115,116,117,118,119,120,121,122,123,124,130,131,135,158,160,161,162,165,166,167,168,169,170,174,175,177,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,236,243,248,252,253,254,257,258,265,266,267,268,273,276,277,289,290,291,292,293,294,295,299,309,315,316,317,318,319,320,321,322,323,324,325,326,327,328,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,111,111,111,-93,-197,111,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,-10,111,111,111,111,-44,-32,111,111,111,-46,111,-22,-38,-39,-40,-41,-42,-43,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,222,-50,-10,111,-198,-202,111,-44,111,111,-206,111,111,111,111,111,-217,-218,-219,111,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,111,111,111,111,-28,-29,-33,111,-34,-35,-36,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,-194,111,-196,-19,111,111,111,-216,-220,-24,-26,-27,222,222,-51,-52,-47,-48,-49,111,111,111,-195,111,-45,111,111,111,111,111,111,-23,-25,111,-37,-207,-209,-210,111,111,111,-212,111,-214,111,-208,-211,-213,-215,]),'BITWISE_ONE_COMPLEMENT':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,83,87,90,95,101,102,103,105,108,109,110,111,112,113,158,160,161,162,166,167,168,169,170,174,175,177,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,204,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,236,243,248,252,253,254,258,265,266,267,268,299,309,315,316,317,319,320,321,322,323,324,327,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,112,112,112,-93,-197,112,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,112,112,112,112,112,112,112,112,-38,-39,-40,-41,-42,-43,112,-198,-202,112,112,112,-206,112,112,112,112,112,-217,-218,-219,112,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,-194,112,-196,112,112,112,-216,-220,112,112,112,-195,112,112,112,112,112,112,112,112,-207,-209,-210,112,112,112,-212,112,-214,112,-208,-211,-213,-215,]),'LOGICAL_NOT':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,83,87,90,95,101,102,103,105,108,109,110,111,112,113,158,160,161,162,166,167,168,169,170,174,175,177,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,204,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,236,243,248,252,253,254,258,265,266,267,268,299,309,315,316,317,319,320,321,322,323,324,327,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,113,113,113,-93,-197,113,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,113,113,113,113,113,113,113,113,-38,-39,-40,-41,-42,-43,113,-198,-202,113,113,113,-206,113,113,113,113,113,-217,-218,-219,113,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,-194,113,-196,113,113,113,-216,-220,113,113,113,-195,113,113,113,113,113,113,113,113,-207,-209,-210,113,113,113,-212,113,-214,113,-208,-211,-213,-215,]),'NULL':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,83,87,90,95,101,102,103,105,108,109,110,111,112,113,158,160,161,162,166,167,168,169,170,174,175,177,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,204,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,236,243,248,252,253,254,258,265,266,267,268,299,309,315,316,317,319,320,321,322,323,324,327,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,115,115,115,-93,-197,115,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,115,115,115,115,115,115,115,115,-38,-39,-40,-41,-42,-43,115,-198,-202,115,115,115,-206,115,115,115,115,115,-217,-218,-219,115,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,-194,115,-196,115,115,115,-216,-220,115,115,115,-195,115,115,115,115,115,115,115,115,-207,-209,-210,115,115,115,-212,115,-214,115,-208,-211,-213,-215,]),'INT_CONSTANT':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,83,87,90,95,101,102,103,105,108,109,110,111,112,113,158,160,161,162,166,167,168,169,170,174,175,177,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,204,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,236,243,248,252,253,254,258,265,266,267,268,299,309,315,316,317,319,320,321,322,323,324,327,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,116,116,116,-93,-197,116,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,116,116,116,116,116,116,116,116,-38,-39,-40,-41,-42,-43,116,-198,-202,116,116,116,-206,116,116,116,116,116,-217,-218,-219,116,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,-194,116,-196,116,116,116,-216,-220,116,116,116,-195,116,116,116,116,116,116,116,116,-207,-209,-210,116,116,116,-212,116,-214,116,-208,-211,-213,-215,]),'HEX_CONSTANT':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,83,87,90,95,101,102,103,105,108,109,110,111,112,113,158,160,161,162,166,167,168,169,170,174,175,177,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,204,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,236,243,248,252,253,254,258,265,266,267,268,299,309,315,316,317,319,320,321,322,323,324,327,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,117,117,117,-93,-197,117,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,117,117,117,117,117,117,117,117,-38,-39,-40,-41,-42,-43,117,-198,-202,117,117,117,-206,117,117,117,117,117,-217,-218,-219,117,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,-194,117,-196,117,117,117,-216,-220,117,117,117,-195,117,117,117,117,117,117,117,117,-207,-209,-210,117,117,117,-212,117,-214,117,-208,-211,-213,-215,]),'OCTAL_CONSTANT':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,83,87,90,95,101,102,103,105,108,109,110,111,112,113,158,160,161,162,166,167,168,169,170,174,175,177,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,204,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,236,243,248,252,253,254,258,265,266,267,268,299,309,315,316,317,319,320,321,322,323,324,327,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,118,118,118,-93,-197,118,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,118,118,118,118,118,118,118,118,-38,-39,-40,-41,-42,-43,118,-198,-202,118,118,118,-206,118,118,118,118,118,-217,-218,-219,118,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,-194,118,-196,118,118,118,-216,-220,118,118,118,-195,118,118,118,118,118,118,118,118,-207,-209,-210,118,118,118,-212,118,-214,118,-208,-211,-213,-215,]),'EXPONENT_CONSTANT':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,83,87,90,95,101,102,103,105,108,109,110,111,112,113,158,160,161,162,166,167,168,169,170,174,175,177,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,204,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,236,243,248,252,253,254,258,265,266,267,268,299,309,315,316,317,319,320,321,322,323,324,327,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,119,119,119,-93,-197,119,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,119,119,119,119,119,119,119,119,-38,-39,-40,-41,-42,-43,119,-198,-202,119,119,119,-206,119,119,119,119,119,-217,-218,-219,119,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-194,119,-196,119,119,119,-216,-220,119,119,119,-195,119,119,119,119,119,119,119,119,-207,-209,-210,119,119,119,-212,119,-214,119,-208,-211,-213,-215,]),'REAL_CONSTANT':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,83,87,90,95,101,102,103,105,108,109,110,111,112,113,158,160,161,162,166,167,168,169,170,174,175,177,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,204,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,236,243,248,252,253,254,258,265,266,267,268,299,309,315,316,317,319,320,321,322,323,324,327,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,120,120,120,-93,-197,120,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,120,120,120,120,120,120,120,120,-38,-39,-40,-41,-42,-43,120,-198,-202,120,120,120,-206,120,120,120,120,120,-217,-218,-219,120,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,-194,120,-196,120,120,120,-216,-220,120,120,120,-195,120,120,120,120,120,120,120,120,-207,-209,-210,120,120,120,-212,120,-214,120,-208,-211,-213,-215,]),'CHAR_CONSTANT':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,83,87,90,95,101,102,103,105,108,109,110,111,112,113,158,160,161,162,166,167,168,169,170,174,175,177,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,204,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,236,243,248,252,253,254,258,265,266,267,268,299,309,315,316,317,319,320,321,322,323,324,327,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,121,121,121,-93,-197,121,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,121,121,121,121,121,121,121,121,-38,-39,-40,-41,-42,-43,121,-198,-202,121,121,121,-206,121,121,121,121,121,-217,-218,-219,121,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,-194,121,-196,121,121,121,-216,-220,121,121,121,-195,121,121,121,121,121,121,121,121,-207,-209,-210,121,121,121,-212,121,-214,121,-208,-211,-213,-215,]),'STR_CONSTANT':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,83,87,90,95,101,102,103,105,108,109,110,111,112,113,158,160,161,162,166,167,168,169,170,174,175,177,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,204,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,236,243,248,252,253,254,258,265,266,267,268,299,309,315,316,317,319,320,321,322,323,324,327,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,122,122,122,-93,-197,122,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,122,122,122,122,122,122,122,122,-38,-39,-40,-41,-42,-43,122,-198,-202,122,122,122,-206,122,122,122,122,122,-217,-218,-219,122,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,-194,122,-196,122,122,122,-216,-220,122,122,122,-195,122,122,122,122,122,122,122,122,-207,-209,-210,122,122,122,-212,122,-214,122,-208,-211,-213,-215,]),'TRUE':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,83,87,90,95,101,102,103,105,108,109,110,111,112,113,158,160,161,162,166,167,168,169,170,174,175,177,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,204,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,236,243,248,252,253,254,258,265,266,267,268,299,309,315,316,317,319,320,321,322,323,324,327,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,123,123,123,-93,-197,123,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,123,123,123,123,123,123,123,123,-38,-39,-40,-41,-42,-43,123,-198,-202,123,123,123,-206,123,123,123,123,123,-217,-218,-219,123,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,-194,123,-196,123,123,123,-216,-220,123,123,123,-195,123,123,123,123,123,123,123,123,-207,-209,-210,123,123,123,-212,123,-214,123,-208,-211,-213,-215,]),'FALSE':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,83,87,90,95,101,102,103,105,108,109,110,111,112,113,158,160,161,162,166,167,168,169,170,174,175,177,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,204,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,236,243,248,252,253,254,258,265,266,267,268,299,309,315,316,317,319,320,321,322,323,324,327,340,341,342,344,346,352,354,355,356,357,358,359,360,361,],[-92,124,124,124,-93,-197,124,-201,-203,-204,-188,-189,-190,-191,-192,-193,-205,124,124,124,124,124,124,124,124,-38,-39,-40,-41,-42,-43,124,-198,-202,124,124,124,-206,124,124,124,124,124,-217,-218,-219,124,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,-194,124,-196,124,124,124,-216,-220,124,124,124,-195,124,124,124,124,124,124,124,124,-207,-209,-210,124,124,124,-212,124,-214,124,-208,-211,-213,-215,]),'R_SQBR':([53,96,97,98,99,100,104,106,107,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,133,135,165,201,202,203,205,206,207,236,255,257,269,271,272,273,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,299,305,318,325,326,328,330,348,],[134,-89,-76,-44,-74,-32,-46,-72,-22,-70,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-68,-66,-64,-61,-56,-53,-50,226,-10,-44,-28,-29,-33,-34,-35,-36,304,-90,-19,-77,-73,325,-24,-26,-27,-71,-69,-67,-65,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,329,335,-45,-23,-25,-37,350,-75,]),'ELSE':([70,75,76,77,78,79,80,81,160,168,179,180,181,252,254,267,268,316,340,341,342,354,356,358,359,360,361,],[-197,-188,-189,-190,-191,-192,-193,-205,-198,-206,-217,-218,-219,-194,-196,-216,-220,-195,352,-209,-210,-212,-214,-208,-211,-213,-215,]),'DOT':([82,100,107,115,116,117,118,119,120,121,122,123,124,135,201,202,257,273,276,277,325,326,],[-10,199,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-10,-28,-29,-19,-24,-26,-27,-23,-25,]),'ARROW':([82,100,107,115,116,117,118,119,120,121,122,123,124,135,201,202,257,273,276,277,325,326,],[-10,200,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-10,-28,-29,-19,-24,-26,-27,-23,-25,]),'MULTIPLY_ASSIGNMENT':([82,98,100,107,115,116,117,118,119,120,121,122,123,124,135,165,201,202,203,205,206,207,257,273,276,277,318,325,326,328,],[-10,185,-32,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-10,-44,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,-45,-23,-25,-37,]),'DIVIDE_ASSIGNMENT':([82,98,100,107,115,116,117,118,119,120,121,122,123,124,135,165,201,202,203,205,206,207,257,273,276,277,318,325,326,328,],[-10,186,-32,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-10,-44,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,-45,-23,-25,-37,]),'MODULUS_ASSIGNMENT':([82,98,100,107,115,116,117,118,119,120,121,122,123,124,135,165,201,202,203,205,206,207,257,273,276,277,318,325,326,328,],[-10,187,-32,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-10,-44,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,-45,-23,-25,-37,]),'ADD_ASSIGNMENT':([82,98,100,107,115,116,117,118,119,120,121,122,123,124,135,165,201,202,203,205,206,207,257,273,276,277,318,325,326,328,],[-10,188,-32,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-10,-44,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,-45,-23,-25,-37,]),'SUBSTRACT_ASSIGNMENT':([82,98,100,107,115,116,117,118,119,120,121,122,123,124,135,165,201,202,203,205,206,207,257,273,276,277,318,325,326,328,],[-10,189,-32,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-10,-44,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,-45,-23,-25,-37,]),'LEFT_SHIFT_ASSIGNMENT':([82,98,100,107,115,116,117,118,119,120,121,122,123,124,135,165,201,202,203,205,206,207,257,273,276,277,318,325,326,328,],[-10,190,-32,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-10,-44,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,-45,-23,-25,-37,]),'RIGHT_SHIFT_ASSIGNMENT':([82,98,100,107,115,116,117,118,119,120,121,122,123,124,135,165,201,202,203,205,206,207,257,273,276,277,318,325,326,328,],[-10,191,-32,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-10,-44,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,-45,-23,-25,-37,]),'BITWISE_AND_ASSIGNMENT':([82,98,100,107,115,116,117,118,119,120,121,122,123,124,135,165,201,202,203,205,206,207,257,273,276,277,318,325,326,328,],[-10,192,-32,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-10,-44,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,-45,-23,-25,-37,]),'BITWISE_XOR_ASSIGNMENT':([82,98,100,107,115,116,117,118,119,120,121,122,123,124,135,165,201,202,203,205,206,207,257,273,276,277,318,325,326,328,],[-10,193,-32,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-10,-44,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,-45,-23,-25,-37,]),'BITWISE_OR_ASSIGNMENT':([82,98,100,107,115,116,117,118,119,120,121,122,123,124,135,165,201,202,203,205,206,207,257,273,276,277,318,325,326,328,],[-10,194,-32,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-10,-44,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,-45,-23,-25,-37,]),'DIVIDE':([82,98,100,104,107,115,116,117,118,119,120,121,122,123,124,131,135,165,201,202,203,205,206,207,257,273,276,277,291,292,293,294,295,318,325,326,328,],[-10,-44,-32,-46,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,224,-10,-44,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,224,224,-47,-48,-49,-45,-23,-25,-37,]),'MODULUS':([82,98,100,104,107,115,116,117,118,119,120,121,122,123,124,131,135,165,201,202,203,205,206,207,257,273,276,277,291,292,293,294,295,318,325,326,328,],[-10,-44,-32,-46,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,225,-10,-44,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,225,225,-47,-48,-49,-45,-23,-25,-37,]),'LEFT_SHIFT':([82,98,100,104,107,115,116,117,118,119,120,121,122,123,124,129,130,131,135,165,201,202,203,205,206,207,257,273,276,277,285,286,287,288,289,290,291,292,293,294,295,318,325,326,328,],[-10,-44,-32,-46,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,219,-53,-50,-10,-44,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,219,219,219,219,-54,-55,-51,-52,-47,-48,-49,-45,-23,-25,-37,]),'RIGHT_SHIFT':([82,98,100,104,107,115,116,117,118,119,120,121,122,123,124,129,130,131,135,165,201,202,203,205,206,207,257,273,276,277,285,286,287,288,289,290,291,292,293,294,295,318,325,326,328,],[-10,-44,-32,-46,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,220,-53,-50,-10,-44,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,220,220,220,220,-54,-55,-51,-52,-47,-48,-49,-45,-23,-25,-37,]),'LESS':([82,98,100,104,107,115,116,117,118,119,120,121,122,123,124,128,129,130,131,135,165,201,202,203,205,206,207,257,273,276,277,283,284,285,286,287,288,289,290,291,292,293,294,295,318,325,326,328,],[-10,-44,-32,-46,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,215,-56,-53,-50,-10,-44,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,215,215,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-45,-23,-25,-37,]),'GREATER':([82,98,100,104,107,115,116,117,118,119,120,121,122,123,124,128,129,130,131,135,165,201,202,203,205,206,207,257,273,276,277,283,284,285,286,287,288,289,290,291,292,293,294,295,318,325,326,328,],[-10,-44,-32,-46,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,216,-56,-53,-50,-10,-44,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,216,216,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-45,-23,-25,-37,]),'LESS_EQUALS':([82,98,100,104,107,115,116,117,118,119,120,121,122,123,124,128,129,130,131,135,165,201,202,203,205,206,207,257,273,276,277,283,284,285,286,287,288,289,290,291,292,293,294,295,318,325,326,328,],[-10,-44,-32,-46,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,217,-56,-53,-50,-10,-44,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,217,217,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-45,-23,-25,-37,]),'GREATER_EQUALS':([82,98,100,104,107,115,116,117,118,119,120,121,122,123,124,128,129,130,131,135,165,201,202,203,205,206,207,257,273,276,277,283,284,285,286,287,288,289,290,291,292,293,294,295,318,325,326,328,],[-10,-44,-32,-46,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,218,-56,-53,-50,-10,-44,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,218,218,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-45,-23,-25,-37,]),'EQUALS':([82,98,100,104,107,115,116,117,118,119,120,121,122,123,124,127,128,129,130,131,135,165,201,202,203,205,206,207,257,273,276,277,282,283,284,285,286,287,288,289,290,291,292,293,294,295,318,325,326,328,],[-10,-44,-32,-46,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,213,-61,-56,-53,-50,-10,-44,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,213,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-45,-23,-25,-37,]),'NOT_EQUALS':([82,98,100,104,107,115,116,117,118,119,120,121,122,123,124,127,128,129,130,131,135,165,201,202,203,205,206,207,257,273,276,277,282,283,284,285,286,287,288,289,290,291,292,293,294,295,318,325,326,328,],[-10,-44,-32,-46,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,214,-61,-56,-53,-50,-10,-44,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,214,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-45,-23,-25,-37,]),'BITWISE_XOR':([82,98,100,104,107,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,135,165,201,202,203,205,206,207,257,273,276,277,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,318,325,326,328,],[-10,-44,-32,-46,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,211,-66,-64,-61,-56,-53,-50,-10,-44,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,211,-67,-65,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-45,-23,-25,-37,]),'BITWISE_OR':([82,98,100,104,107,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,135,165,201,202,203,205,206,207,257,273,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,318,325,326,328,],[-10,-44,-32,-46,-22,210,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-68,-66,-64,-61,-56,-53,-50,-10,-44,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,210,-69,-67,-65,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-45,-23,-25,-37,]),'LOGICAL_AND':([82,98,100,104,106,107,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,135,165,201,202,203,205,206,207,257,271,273,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,318,325,326,328,],[-10,-44,-32,-46,209,-22,-70,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-68,-66,-64,-61,-56,-53,-50,-10,-44,-28,-29,-33,-34,-35,-36,-19,209,-24,-26,-27,-71,-69,-67,-65,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-45,-23,-25,-37,]),'QUES_MARK':([82,98,99,100,104,106,107,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,135,165,201,202,203,205,206,207,257,271,273,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,318,325,326,328,],[-10,-44,195,-32,-46,-72,-22,-70,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-68,-66,-64,-61,-56,-53,-50,-10,-44,-28,-29,-33,-34,-35,-36,-19,-73,-24,-26,-27,-71,-69,-67,-65,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-45,-23,-25,-37,]),'LOGICAL_OR':([82,98,99,100,104,106,107,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,135,165,201,202,203,205,206,207,257,271,273,276,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,318,325,326,328,],[-10,-44,196,-32,-46,-72,-22,-70,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-68,-66,-64,-61,-56,-53,-50,-10,-44,-28,-29,-33,-34,-35,-36,-19,-73,-24,-26,-27,-71,-69,-67,-65,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-45,-23,-25,-37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'translation_unit':([0,],[2,]),'external_declaration':([0,2,],[3,39,]),'function_definition':([0,2,],[4,4,]),'declaration':([0,2,7,40,44,47,63,71,177,],[5,5,46,46,69,74,69,74,266,]),'declaration_specifiers':([0,2,7,8,9,10,40,44,47,54,63,71,177,228,235,261,300,],[6,6,48,49,50,51,48,48,48,141,48,48,48,141,141,141,141,]),'declarator':([0,2,6,34,48,67,141,148,235,308,],[7,7,40,58,132,132,231,242,58,242,]),'storage_class_specifier':([0,2,7,8,9,10,40,44,47,54,63,71,177,228,235,261,300,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'type_specifier':([0,2,7,8,9,10,40,44,47,54,60,63,71,87,145,146,149,150,166,177,208,228,235,237,261,300,],[9,9,9,9,9,9,9,9,9,9,149,9,9,149,149,149,149,149,149,9,149,9,9,149,9,9,]),'type_qualifier':([0,2,7,8,9,10,32,40,44,47,54,55,60,63,71,87,145,146,149,150,166,177,208,228,235,237,261,300,],[10,10,10,10,10,10,57,10,10,10,10,143,150,10,10,150,150,150,150,150,150,10,150,10,10,150,10,10,]),'pointer':([0,2,6,32,34,48,55,67,141,148,173,235,261,308,],[11,11,11,56,11,11,142,11,233,11,260,233,260,11,]),'direct_declarator':([0,2,6,11,34,48,67,141,148,233,235,308,],[12,12,12,52,12,12,12,12,12,52,12,12,]),'struct_or_union_specifier':([0,2,7,8,9,10,40,44,47,54,60,63,71,87,145,146,149,150,166,177,208,228,235,237,261,300,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'enum_specifier':([0,2,7,8,9,10,40,44,47,54,60,63,71,87,145,146,149,150,166,177,208,228,235,237,261,300,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'struct_or_union':([0,2,7,8,9,10,40,44,47,54,60,63,71,87,145,146,149,150,166,177,208,228,235,237,261,300,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'init_declarator_list':([6,48,],[42,42,]),'init_declarator':([6,48,67,],[43,43,159,]),'declaration_list':([7,40,],[44,63,]),'compound_statement':([7,40,44,47,63,71,90,162,167,253,317,319,320,344,346,352,355,357,],[45,64,68,76,155,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'type_qualifier_list':([32,],[55,]),'block_item_list':([47,],[71,]),'block_item':([47,71,],[72,161,]),'statement':([47,71,90,162,167,253,317,319,320,344,346,352,355,357,],[73,73,176,252,254,316,340,341,342,354,356,358,360,361,]),'labeled_statement':([47,71,90,162,167,253,317,319,320,344,346,352,355,357,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'expression_statement':([47,71,90,162,167,177,253,265,266,317,319,320,344,346,352,355,357,],[77,77,77,77,77,265,77,322,323,77,77,77,77,77,77,77,77,]),'selection_statement':([47,71,90,162,167,253,317,319,320,344,346,352,355,357,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'iteration_statement':([47,71,90,162,167,253,317,319,320,344,346,352,355,357,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'jump_statement':([47,71,90,162,167,253,317,319,320,344,346,352,355,357,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'expression':([47,71,87,90,95,162,166,167,170,174,175,177,195,197,204,208,253,265,266,317,319,320,321,322,323,344,346,352,355,357,],[85,85,171,85,182,85,171,85,256,262,263,85,270,272,171,171,85,85,85,85,85,85,343,345,347,85,85,85,85,85,]),'assignment_expression':([47,53,65,71,87,90,95,158,162,166,167,169,170,174,175,177,183,195,197,198,204,208,236,253,265,266,299,315,317,319,320,321,322,323,327,344,346,352,355,357,],[96,133,157,96,96,96,96,157,96,96,96,255,96,96,96,96,269,96,96,275,96,96,305,96,96,96,330,157,96,96,96,96,96,96,349,96,96,96,96,96,]),'conditional_expression':([47,53,65,71,83,87,90,95,158,162,166,167,169,170,174,175,177,183,195,197,198,204,208,236,243,248,253,265,266,299,309,315,317,319,320,321,322,323,324,327,344,346,352,355,357,],[97,97,97,97,164,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,164,164,97,97,97,97,164,97,97,97,97,97,97,97,348,97,97,97,97,97,97,]),'unary_expression':([47,53,65,71,83,87,90,95,101,102,103,105,158,162,166,167,169,170,174,175,177,183,195,196,197,198,204,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,236,243,248,253,258,265,266,299,309,315,317,319,320,321,322,323,324,327,344,346,352,355,357,],[98,98,98,98,165,98,98,98,203,205,165,207,98,98,98,98,98,98,98,98,98,98,98,165,98,98,98,98,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,98,165,165,98,165,98,98,98,165,98,98,98,98,98,98,98,165,98,98,98,98,98,98,]),'logical_or_expression':([47,53,65,71,83,87,90,95,158,162,166,167,169,170,174,175,177,183,195,197,198,204,208,236,243,248,253,265,266,299,309,315,317,319,320,321,322,323,324,327,344,346,352,355,357,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'postfix_expression':([47,53,65,71,83,87,90,95,101,102,103,105,158,162,166,167,169,170,174,175,177,183,195,196,197,198,204,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,236,243,248,253,258,265,266,299,309,315,317,319,320,321,322,323,324,327,344,346,352,355,357,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'unary_operator':([47,53,65,71,83,87,90,95,101,102,103,105,158,162,166,167,169,170,174,175,177,183,195,196,197,198,204,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,236,243,248,253,258,265,266,299,309,315,317,319,320,321,322,323,324,327,344,346,352,355,357,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'cast_expression':([47,53,65,71,83,87,90,95,103,158,162,166,167,169,170,174,175,177,183,195,196,197,198,204,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,236,243,248,253,258,265,266,299,309,315,317,319,320,321,322,323,324,327,344,346,352,355,357,],[104,104,104,104,104,104,104,104,206,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,293,294,295,104,104,104,104,318,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'logical_and_expression':([47,53,65,71,83,87,90,95,158,162,166,167,169,170,174,175,177,183,195,196,197,198,204,208,236,243,248,253,265,266,299,309,315,317,319,320,321,322,323,324,327,344,346,352,355,357,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,271,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'primary_expression':([47,53,65,71,83,87,90,95,101,102,103,105,158,162,166,167,169,170,174,175,177,183,195,196,197,198,204,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,236,243,248,253,258,265,266,299,309,315,317,319,320,321,322,323,324,327,344,346,352,355,357,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'inclusive_or_expression':([47,53,65,71,83,87,90,95,158,162,166,167,169,170,174,175,177,183,195,196,197,198,204,208,209,236,243,248,253,265,266,299,309,315,317,319,320,321,322,323,324,327,344,346,352,355,357,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,279,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'exclusive_or_expression':([47,53,65,71,83,87,90,95,158,162,166,167,169,170,174,175,177,183,195,196,197,198,204,208,209,210,236,243,248,253,265,266,299,309,315,317,319,320,321,322,323,324,327,344,346,352,355,357,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,280,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'and_expression':([47,53,65,71,83,87,90,95,158,162,166,167,169,170,174,175,177,183,195,196,197,198,204,208,209,210,211,236,243,248,253,265,266,299,309,315,317,319,320,321,322,323,324,327,344,346,352,355,357,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,281,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'equality_expression':([47,53,65,71,83,87,90,95,158,162,166,167,169,170,174,175,177,183,195,196,197,198,204,208,209,210,211,212,236,243,248,253,265,266,299,309,315,317,319,320,321,322,323,324,327,344,346,352,355,357,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,282,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'relational_expression':([47,53,65,71,83,87,90,95,158,162,166,167,169,170,174,175,177,183,195,196,197,198,204,208,209,210,211,212,213,214,236,243,248,253,265,266,299,309,315,317,319,320,321,322,323,324,327,344,346,352,355,357,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,283,284,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'shift_expression':([47,53,65,71,83,87,90,95,158,162,166,167,169,170,174,175,177,183,195,196,197,198,204,208,209,210,211,212,213,214,215,216,217,218,236,243,248,253,265,266,299,309,315,317,319,320,321,322,323,324,327,344,346,352,355,357,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,285,286,287,288,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'additive_expression':([47,53,65,71,83,87,90,95,158,162,166,167,169,170,174,175,177,183,195,196,197,198,204,208,209,210,211,212,213,214,215,216,217,218,219,220,236,243,248,253,265,266,299,309,315,317,319,320,321,322,323,324,327,344,346,352,355,357,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,289,290,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'multiplicative_expression':([47,53,65,71,83,87,90,95,158,162,166,167,169,170,174,175,177,183,195,196,197,198,204,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,236,243,248,253,265,266,299,309,315,317,319,320,321,322,323,324,327,344,346,352,355,357,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,291,292,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'parameter_type_list':([54,235,261,300,],[136,303,303,332,]),'identifier_list':([54,],[138,]),'parameter_declaration':([54,228,235,261,300,],[139,296,139,139,139,]),'struct_declaration_list':([60,145,],[146,237,]),'struct_declaration':([60,145,146,237,],[147,147,239,239,]),'specifier_qualifier_list':([60,87,145,146,149,150,166,208,237,],[148,173,148,148,244,245,173,173,148,]),'enumerator_list':([61,154,],[151,249,]),'enumerator':([61,154,247,],[152,152,311,]),'initializer':([65,158,315,],[156,251,339,]),'constant_expression':([83,243,248,309,],[163,310,312,337,]),'type_name':([87,166,208,],[172,172,278,]),'assignment_operator':([98,],[183,]),'abstract_declarator':([141,173,235,261,],[232,259,302,302,]),'direct_abstract_declarator':([141,173,233,235,260,261,],[234,234,298,234,298,234,]),'struct_declarator_list':([148,],[240,]),'struct_declarator':([148,308,],[241,336,]),'initializer_list':([158,],[250,]),'argument_expression_list':([198,],[274,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> translation_unit','program',1,'p_program','parser',51),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit','parser',57),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit','parser',58),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration','parser',65),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration','parser',66),
  ('function_definition -> declaration_specifiers declarator declaration_list compound_statement','function_definition',4,'p_function_definition_1','parser',73),
  ('function_definition -> declaration_specifiers declarator compound_statement','function_definition',3,'p_function_definition_1','parser',74),
  ('function_definition -> declarator declaration_list compound_statement','function_definition',3,'p_function_definition_2','parser',85),
  ('function_definition -> declarator compound_statement','function_definition',2,'p_function_definition_2','parser',86),
  ('primary_expression -> IDENTIFIER','primary_expression',1,'p_primary_expression','parser',98),
  ('primary_expression -> NULL','primary_expression',1,'p_primary_expression','parser',99),
  ('primary_expression -> INT_CONSTANT','primary_expression',1,'p_primary_expression','parser',100),
  ('primary_expression -> HEX_CONSTANT','primary_expression',1,'p_primary_expression','parser',101),
  ('primary_expression -> OCTAL_CONSTANT','primary_expression',1,'p_primary_expression','parser',102),
  ('primary_expression -> EXPONENT_CONSTANT','primary_expression',1,'p_primary_expression','parser',103),
  ('primary_expression -> REAL_CONSTANT','primary_expression',1,'p_primary_expression','parser',104),
  ('primary_expression -> CHAR_CONSTANT','primary_expression',1,'p_primary_expression','parser',105),
  ('primary_expression -> STR_CONSTANT','primary_expression',1,'p_primary_expression','parser',106),
  ('primary_expression -> L_PAREN expression R_PAREN','primary_expression',3,'p_primary_expression','parser',107),
  ('primary_expression -> TRUE','primary_expression',1,'p_primary_expression','parser',108),
  ('primary_expression -> FALSE','primary_expression',1,'p_primary_expression','parser',109),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression','parser',123),
  ('postfix_expression -> postfix_expression L_SQBR expression R_SQBR','postfix_expression',4,'p_postfix_expression','parser',124),
  ('postfix_expression -> postfix_expression L_PAREN R_PAREN','postfix_expression',3,'p_postfix_expression','parser',125),
  ('postfix_expression -> postfix_expression L_PAREN argument_expression_list R_PAREN','postfix_expression',4,'p_postfix_expression','parser',126),
  ('postfix_expression -> postfix_expression DOT IDENTIFIER','postfix_expression',3,'p_postfix_expression','parser',127),
  ('postfix_expression -> postfix_expression ARROW IDENTIFIER','postfix_expression',3,'p_postfix_expression','parser',128),
  ('postfix_expression -> postfix_expression INCREMENT','postfix_expression',2,'p_postfix_expression','parser',129),
  ('postfix_expression -> postfix_expression DECREMENT','postfix_expression',2,'p_postfix_expression','parser',130),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','parser',148),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','parser',149),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','parser',161),
  ('unary_expression -> INCREMENT unary_expression','unary_expression',2,'p_unary_expression','parser',162),
  ('unary_expression -> DECREMENT unary_expression','unary_expression',2,'p_unary_expression','parser',163),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression','parser',164),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression','parser',165),
  ('unary_expression -> SIZEOF L_PAREN type_name R_PAREN','unary_expression',4,'p_unary_expression','parser',166),
  ('unary_operator -> BITWISE_AND','unary_operator',1,'p_unary_operator','parser',176),
  ('unary_operator -> MULTIPLY','unary_operator',1,'p_unary_operator','parser',177),
  ('unary_operator -> ADD','unary_operator',1,'p_unary_operator','parser',178),
  ('unary_operator -> SUBSTRACT','unary_operator',1,'p_unary_operator','parser',179),
  ('unary_operator -> BITWISE_ONE_COMPLEMENT','unary_operator',1,'p_unary_operator','parser',180),
  ('unary_operator -> LOGICAL_NOT','unary_operator',1,'p_unary_operator','parser',181),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression','parser',188),
  ('cast_expression -> L_PAREN type_name R_PAREN cast_expression','cast_expression',4,'p_cast_expression','parser',189),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multiplicative_expression','parser',200),
  ('multiplicative_expression -> multiplicative_expression MULTIPLY cast_expression','multiplicative_expression',3,'p_multiplicative_expression','parser',201),
  ('multiplicative_expression -> multiplicative_expression DIVIDE cast_expression','multiplicative_expression',3,'p_multiplicative_expression','parser',202),
  ('multiplicative_expression -> multiplicative_expression MODULUS cast_expression','multiplicative_expression',3,'p_multiplicative_expression','parser',203),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','parser',214),
  ('additive_expression -> additive_expression ADD multiplicative_expression','additive_expression',3,'p_additive_expression','parser',215),
  ('additive_expression -> additive_expression SUBSTRACT multiplicative_expression','additive_expression',3,'p_additive_expression','parser',216),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression','parser',226),
  ('shift_expression -> shift_expression LEFT_SHIFT additive_expression','shift_expression',3,'p_shift_expression','parser',227),
  ('shift_expression -> shift_expression RIGHT_SHIFT additive_expression','shift_expression',3,'p_shift_expression','parser',228),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression','parser',239),
  ('relational_expression -> relational_expression LESS shift_expression','relational_expression',3,'p_relational_expression','parser',240),
  ('relational_expression -> relational_expression GREATER shift_expression','relational_expression',3,'p_relational_expression','parser',241),
  ('relational_expression -> relational_expression LESS_EQUALS shift_expression','relational_expression',3,'p_relational_expression','parser',242),
  ('relational_expression -> relational_expression GREATER_EQUALS shift_expression','relational_expression',3,'p_relational_expression','parser',243),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','parser',254),
  ('equality_expression -> equality_expression EQUALS relational_expression','equality_expression',3,'p_equality_expression','parser',255),
  ('equality_expression -> equality_expression NOT_EQUALS relational_expression','equality_expression',3,'p_equality_expression','parser',256),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression','parser',267),
  ('and_expression -> and_expression BITWISE_AND equality_expression','and_expression',3,'p_and_expression','parser',268),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression','parser',279),
  ('exclusive_or_expression -> exclusive_or_expression BITWISE_XOR and_expression','exclusive_or_expression',3,'p_exclusive_or_expression','parser',280),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression','parser',291),
  ('inclusive_or_expression -> inclusive_or_expression BITWISE_OR exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression','parser',292),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression','parser',303),
  ('logical_and_expression -> logical_and_expression LOGICAL_AND inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression','parser',304),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','parser',315),
  ('logical_or_expression -> logical_or_expression LOGICAL_OR logical_and_expression','logical_or_expression',3,'p_logical_or_expression','parser',316),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression','parser',327),
  ('conditional_expression -> logical_or_expression QUES_MARK expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','parser',328),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','parser',339),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','parser',340),
  ('assignment_operator -> ASSIGNMENT','assignment_operator',1,'p_assignment_operator','parser',351),
  ('assignment_operator -> MULTIPLY_ASSIGNMENT','assignment_operator',1,'p_assignment_operator','parser',352),
  ('assignment_operator -> DIVIDE_ASSIGNMENT','assignment_operator',1,'p_assignment_operator','parser',353),
  ('assignment_operator -> MODULUS_ASSIGNMENT','assignment_operator',1,'p_assignment_operator','parser',354),
  ('assignment_operator -> ADD_ASSIGNMENT','assignment_operator',1,'p_assignment_operator','parser',355),
  ('assignment_operator -> SUBSTRACT_ASSIGNMENT','assignment_operator',1,'p_assignment_operator','parser',356),
  ('assignment_operator -> LEFT_SHIFT_ASSIGNMENT','assignment_operator',1,'p_assignment_operator','parser',357),
  ('assignment_operator -> RIGHT_SHIFT_ASSIGNMENT','assignment_operator',1,'p_assignment_operator','parser',358),
  ('assignment_operator -> BITWISE_AND_ASSIGNMENT','assignment_operator',1,'p_assignment_operator','parser',359),
  ('assignment_operator -> BITWISE_XOR_ASSIGNMENT','assignment_operator',1,'p_assignment_operator','parser',360),
  ('assignment_operator -> BITWISE_OR_ASSIGNMENT','assignment_operator',1,'p_assignment_operator','parser',361),
  ('expression -> assignment_expression','expression',1,'p_expression','parser',368),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','parser',369),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','parser',383),
  ('declaration -> declaration_specifiers SEMI_COLON','declaration',2,'p_declaration','parser',391),
  ('declaration -> declaration_specifiers init_declarator_list SEMI_COLON','declaration',3,'p_declaration','parser',392),
  ('declaration_specifiers -> storage_class_specifier','declaration_specifiers',1,'p_declaration_specifiers','parser',402),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser',403),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers','parser',404),
  ('declaration_specifiers -> type_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser',405),
  ('declaration_specifiers -> type_qualifier','declaration_specifiers',1,'p_declaration_specifiers','parser',406),
  ('declaration_specifiers -> type_qualifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser',407),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','parser',416),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','parser',417),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','parser',430),
  ('init_declarator -> declarator ASSIGNMENT initializer','init_declarator',3,'p_init_declarator','parser',431),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','parser',441),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','parser',442),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','parser',443),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','parser',444),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','parser',445),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','parser',452),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','parser',453),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier','parser',454),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','parser',455),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier','parser',456),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','parser',457),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier','parser',458),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier','parser',459),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier','parser',460),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','parser',461),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','parser',462),
  ('type_specifier -> BOOL','type_specifier',1,'p_type_specifier','parser',463),
  ('struct_or_union_specifier -> struct_or_union IDENTIFIER L_BRACES struct_declaration_list R_BRACES','struct_or_union_specifier',5,'p_struct_or_union_specifier','parser',470),
  ('struct_or_union_specifier -> struct_or_union L_BRACES struct_declaration_list R_BRACES','struct_or_union_specifier',4,'p_struct_or_union_specifier','parser',471),
  ('struct_or_union_specifier -> struct_or_union IDENTIFIER','struct_or_union_specifier',2,'p_struct_or_union_specifier','parser',472),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','parser',479),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','parser',480),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','parser',488),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','parser',489),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI_COLON','struct_declaration',3,'p_struct_declaration','parser',496),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','parser',503),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','parser',504),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','parser',505),
  ('specifier_qualifier_list -> type_qualifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','parser',506),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','parser',516),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','parser',517),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator','parser',524),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator','parser',525),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator','parser',526),
  ('enum_specifier -> ENUM L_BRACES enumerator_list R_BRACES','enum_specifier',4,'p_enum_specifier','parser',533),
  ('enum_specifier -> ENUM IDENTIFIER L_BRACES enumerator_list R_BRACES','enum_specifier',5,'p_enum_specifier','parser',534),
  ('enum_specifier -> ENUM IDENTIFIER','enum_specifier',2,'p_enum_specifier','parser',535),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','parser',542),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','parser',543),
  ('enumerator -> IDENTIFIER','enumerator',1,'p_enumerator','parser',550),
  ('enumerator -> IDENTIFIER ASSIGNMENT constant_expression','enumerator',3,'p_enumerator','parser',551),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','parser',558),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','parser',559),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator','parser',566),
  ('declarator -> direct_declarator','declarator',1,'p_declarator','parser',567),
  ('direct_declarator -> IDENTIFIER','direct_declarator',1,'p_direct_declarator','parser',577),
  ('direct_declarator -> L_PAREN declarator R_PAREN','direct_declarator',3,'p_direct_declarator','parser',578),
  ('direct_declarator -> direct_declarator L_SQBR assignment_expression R_SQBR','direct_declarator',4,'p_direct_declarator','parser',579),
  ('direct_declarator -> direct_declarator L_SQBR R_SQBR','direct_declarator',3,'p_direct_declarator','parser',580),
  ('direct_declarator -> direct_declarator L_PAREN parameter_type_list R_PAREN','direct_declarator',4,'p_direct_declarator','parser',581),
  ('direct_declarator -> direct_declarator L_PAREN identifier_list R_PAREN','direct_declarator',4,'p_direct_declarator','parser',582),
  ('direct_declarator -> direct_declarator L_PAREN R_PAREN','direct_declarator',3,'p_direct_declarator','parser',583),
  ('pointer -> MULTIPLY','pointer',1,'p_pointer','parser',597),
  ('pointer -> MULTIPLY type_qualifier_list','pointer',2,'p_pointer','parser',598),
  ('pointer -> MULTIPLY pointer','pointer',2,'p_pointer','parser',599),
  ('pointer -> MULTIPLY type_qualifier_list pointer','pointer',3,'p_pointer','parser',600),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','parser',609),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','parser',610),
  ('parameter_type_list -> parameter_declaration','parameter_type_list',1,'p_parameter_type_list','parser',617),
  ('parameter_type_list -> parameter_type_list COMMA parameter_declaration','parameter_type_list',3,'p_parameter_type_list','parser',618),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration','parser',631),
  ('parameter_declaration -> declaration_specifiers abstract_declarator','parameter_declaration',2,'p_parameter_declaration','parser',632),
  ('parameter_declaration -> declaration_specifiers','parameter_declaration',1,'p_parameter_declaration','parser',633),
  ('identifier_list -> IDENTIFIER','identifier_list',1,'p_identifier_list','parser',646),
  ('identifier_list -> identifier_list COMMA IDENTIFIER','identifier_list',3,'p_identifier_list','parser',647),
  ('type_name -> specifier_qualifier_list','type_name',1,'p_type_name','parser',662),
  ('type_name -> specifier_qualifier_list abstract_declarator','type_name',2,'p_type_name','parser',663),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator','parser',673),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator','parser',674),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator','parser',675),
  ('direct_abstract_declarator -> L_PAREN abstract_declarator R_PAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser',684),
  ('direct_abstract_declarator -> L_SQBR R_SQBR','direct_abstract_declarator',2,'p_direct_abstract_declarator','parser',685),
  ('direct_abstract_declarator -> L_SQBR assignment_expression R_SQBR','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser',686),
  ('direct_abstract_declarator -> direct_abstract_declarator L_SQBR R_SQBR','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser',687),
  ('direct_abstract_declarator -> direct_abstract_declarator L_SQBR assignment_expression R_SQBR','direct_abstract_declarator',4,'p_direct_abstract_declarator','parser',688),
  ('direct_abstract_declarator -> L_PAREN R_PAREN','direct_abstract_declarator',2,'p_direct_abstract_declarator','parser',689),
  ('direct_abstract_declarator -> L_PAREN parameter_type_list R_PAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser',690),
  ('direct_abstract_declarator -> direct_abstract_declarator L_PAREN R_PAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser',691),
  ('direct_abstract_declarator -> direct_abstract_declarator L_PAREN parameter_type_list R_PAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator','parser',692),
  ('initializer -> assignment_expression','initializer',1,'p_initializer','parser',705),
  ('initializer -> L_BRACES initializer_list R_BRACES','initializer',3,'p_initializer','parser',706),
  ('initializer -> L_BRACES initializer_list COMMA R_BRACES','initializer',4,'p_initializer','parser',707),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list','parser',717),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list','parser',718),
  ('statement -> labeled_statement','statement',1,'p_statement','parser',725),
  ('statement -> compound_statement','statement',1,'p_statement','parser',726),
  ('statement -> expression_statement','statement',1,'p_statement','parser',727),
  ('statement -> selection_statement','statement',1,'p_statement','parser',728),
  ('statement -> iteration_statement','statement',1,'p_statement','parser',729),
  ('statement -> jump_statement','statement',1,'p_statement','parser',730),
  ('labeled_statement -> IDENTIFIER COLON statement','labeled_statement',3,'p_labeled_statement_1','parser',737),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','parser',745),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_2','parser',746),
  ('compound_statement -> L_BRACES R_BRACES','compound_statement',2,'p_compound_statement','parser',756),
  ('compound_statement -> L_BRACES block_item_list R_BRACES','compound_statement',3,'p_compound_statement','parser',757),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser',767),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser',768),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','parser',774),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','parser',775),
  ('block_item -> statement','block_item',1,'p_block_item','parser',782),
  ('block_item -> declaration','block_item',1,'p_block_item','parser',783),
  ('expression_statement -> SEMI_COLON','expression_statement',1,'p_expression_statement','parser',790),
  ('expression_statement -> expression SEMI_COLON','expression_statement',2,'p_expression_statement','parser',791),
  ('selection_statement -> IF L_PAREN expression R_PAREN statement','selection_statement',5,'p_selection_statement','parser',801),
  ('selection_statement -> IF L_PAREN expression R_PAREN statement ELSE statement','selection_statement',7,'p_selection_statement','parser',802),
  ('selection_statement -> SWITCH L_PAREN expression R_PAREN statement','selection_statement',5,'p_selection_statement','parser',803),
  ('iteration_statement -> WHILE L_PAREN expression R_PAREN statement','iteration_statement',5,'p_iteration_statement','parser',814),
  ('iteration_statement -> DO statement WHILE L_PAREN expression R_PAREN SEMI_COLON','iteration_statement',7,'p_iteration_statement','parser',815),
  ('iteration_statement -> FOR L_PAREN expression_statement expression_statement R_PAREN statement','iteration_statement',6,'p_iteration_statement','parser',816),
  ('iteration_statement -> FOR L_PAREN expression_statement expression_statement expression R_PAREN statement','iteration_statement',7,'p_iteration_statement','parser',817),
  ('iteration_statement -> FOR L_PAREN declaration expression_statement R_PAREN statement','iteration_statement',6,'p_iteration_statement','parser',818),
  ('iteration_statement -> FOR L_PAREN declaration expression_statement expression R_PAREN statement','iteration_statement',7,'p_iteration_statement','parser',819),
  ('jump_statement -> GOTO IDENTIFIER SEMI_COLON','jump_statement',3,'p_jump_statement','parser',835),
  ('jump_statement -> CONTINUE SEMI_COLON','jump_statement',2,'p_jump_statement','parser',836),
  ('jump_statement -> BREAK SEMI_COLON','jump_statement',2,'p_jump_statement','parser',837),
  ('jump_statement -> RETURN SEMI_COLON','jump_statement',2,'p_jump_statement','parser',838),
  ('jump_statement -> RETURN expression SEMI_COLON','jump_statement',3,'p_jump_statement','parser',839),
]
