
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programADD ADD_ASSIGNMENT ARROW ASSIGNMENT AUTO BITWISE_AND BITWISE_AND_ASSIGNMENT BITWISE_ONE_COMPLEMENT BITWISE_OR BITWISE_OR_ASSIGNMENT BITWISE_XOR BITWISE_XOR_ASSIGNMENT BLOCK_COMMENT BOOL BREAK CASE CHAR CHAR_CONSTANT COLON COMMA CONST CONTINUE DECREMENT DEFAULT DIVIDE DIVIDE_ASSIGNMENT DO DOT DOUBLE ELSE ENUM EQUALS EXPONENT_CONSTANT EXTERN FALSE FLOAT FOR GOTO GREATER GREATER_EQUALS HEX_CONSTANT IDENTIFIER IF INCREMENT INLINE_COMMENT INT INT_CONSTANT LEFT_SHIFT LEFT_SHIFT_ASSIGNMENT LESS LESS_EQUALS LOGICAL_AND LOGICAL_NOT LOGICAL_OR LONG L_BRACES L_PAREN L_SQBR MODULUS MODULUS_ASSIGNMENT MULTIPLY MULTIPLY_ASSIGNMENT NOT_EQUALS NULL OCTAL_CONSTANT QUES_MARK REAL_CONSTANT REGISTER RETURN RIGHT_SHIFT RIGHT_SHIFT_ASSIGNMENT R_BRACES R_PAREN R_SQBR SEMI_COLON SHORT SIGNED SIZEOF STATIC STRUCT STR_CONSTANT SUBSTRACT SUBSTRACT_ASSIGNMENT SWITCH TRUE TYPEDEF UNION UNSIGNED VOID VOLATILE WHILEprogram : translation_unit\n    translation_unit : external_declaration\n                     | translation_unit external_declaration\n    \n    external_declaration : function_definition\n                         | declaration\n    \n    function_definition : declaration_specifiers declarator declaration_list compound_statement\n\t\t\t            | declaration_specifiers declarator compound_statement\n    \n    \n    function_definition : declarator declaration_list compound_statement\n\t\t\t            | declarator compound_statement\n    \n    \n    primary_expression : IDENTIFIER\n                       | NULL\n                       | INT_CONSTANT\n                       | HEX_CONSTANT\n                       | OCTAL_CONSTANT\n                       | EXPONENT_CONSTANT\n                       | REAL_CONSTANT\n                       | CHAR_CONSTANT\n                       | STR_CONSTANT\n                       | L_PAREN expression R_PAREN\n                       | TRUE\n                       | FALSE\n    \n    postfix_expression : primary_expression\n                       | postfix_expression L_SQBR expression R_SQBR\n                       | postfix_expression L_PAREN R_PAREN\n                       | postfix_expression L_PAREN argument_expression_list R_PAREN\n                       | postfix_expression DOT IDENTIFIER\n                       | postfix_expression ARROW IDENTIFIER\n                       | postfix_expression INCREMENT\n                       | postfix_expression DECREMENT\n\n    \n    argument_expression_list : assignment_expression\n\t                         | argument_expression_list COMMA assignment_expression\n    \n    unary_expression : postfix_expression\n                     | INCREMENT unary_expression\n                     | DECREMENT unary_expression\n                     | unary_operator cast_expression\n                     | SIZEOF unary_expression\n                     | SIZEOF L_PAREN type_name R_PAREN\n    \n    unary_operator : BITWISE_AND\n                   | MULTIPLY\n                   | ADD\n                   | SUBSTRACT\n                   | BITWISE_ONE_COMPLEMENT\n                   | LOGICAL_NOT\n    \n    cast_expression : unary_expression\n\t                | L_PAREN type_name R_PAREN cast_expression\n    \n    multiplicative_expression : cast_expression\n                              | multiplicative_expression MULTIPLY cast_expression\n                              | multiplicative_expression DIVIDE cast_expression\n                              | multiplicative_expression MODULUS cast_expression\n    \n    additive_expression : multiplicative_expression\n                        | additive_expression ADD multiplicative_expression\n                        | additive_expression SUBSTRACT multiplicative_expression\n    \n    shift_expression : additive_expression\n                     | shift_expression LEFT_SHIFT additive_expression\n                     | shift_expression RIGHT_SHIFT additive_expression\n    \n    relational_expression : shift_expression\n                          | relational_expression LESS shift_expression\n                          | relational_expression GREATER shift_expression\n                          | relational_expression LESS_EQUALS shift_expression\n                          | relational_expression GREATER_EQUALS shift_expression\n    \n    equality_expression : relational_expression\n                        | equality_expression EQUALS relational_expression\n                        | equality_expression NOT_EQUALS relational_expression\n    \n    and_expression : equality_expression\n\t               | and_expression BITWISE_AND equality_expression\n    \n    exclusive_or_expression : and_expression\n\t                        | exclusive_or_expression BITWISE_XOR and_expression\n    \n    inclusive_or_expression : exclusive_or_expression\n\t                        | inclusive_or_expression BITWISE_OR exclusive_or_expression\n    \n    logical_and_expression : inclusive_or_expression\n\t                       | logical_and_expression LOGICAL_AND inclusive_or_expression\n    \n    logical_or_expression : logical_and_expression\n\t                      | logical_or_expression LOGICAL_OR logical_and_expression\n    \n    conditional_expression : logical_or_expression\n\t                       | logical_or_expression QUES_MARK expression COLON conditional_expression\n    \n    assignment_expression : conditional_expression\n\t                      | unary_expression assignment_operator assignment_expression\n    \n    assignment_operator : ASSIGNMENT\n                        | MULTIPLY_ASSIGNMENT\n                        | DIVIDE_ASSIGNMENT\n                        | MODULUS_ASSIGNMENT\n                        | ADD_ASSIGNMENT\n                        | SUBSTRACT_ASSIGNMENT\n                        | LEFT_SHIFT_ASSIGNMENT\n                        | RIGHT_SHIFT_ASSIGNMENT\n                        | BITWISE_AND_ASSIGNMENT\n                        | BITWISE_XOR_ASSIGNMENT\n                        | BITWISE_OR_ASSIGNMENT\n    \n    expression : assignment_expression\n\t           | expression COMMA assignment_expression\n    \n    constant_expression : conditional_expression\n    \n    declaration : declaration_specifiers SEMI_COLON\n\t            | declaration_specifiers init_declarator_list SEMI_COLON\n    \n    declaration_specifiers : storage_class_specifier\n                           | storage_class_specifier declaration_specifiers\n                           | type_specifier\n                           | type_specifier declaration_specifiers\n                           | type_qualifier\n                           | type_qualifier declaration_specifiers\n    \n    init_declarator_list : init_declarator\n\t                     | init_declarator_list COMMA init_declarator\n    \n    init_declarator : declarator\n\t                | declarator ASSIGNMENT initializer\n    \n    storage_class_specifier : TYPEDEF\n                            | EXTERN\n                            | STATIC\n                            | AUTO\n                            | REGISTER\n    \n    type_specifier : VOID\n                   | CHAR\n                   | SHORT\n                   | INT\n                   | LONG\n                   | FLOAT\n                   | DOUBLE\n                   | SIGNED\n                   | UNSIGNED\n                   | struct_or_union_specifier\n                   | enum_specifier\n                   | BOOL\n    \n    struct_or_union_specifier : struct_or_union IDENTIFIER L_BRACES struct_declaration_list R_BRACES\n\t                          | struct_or_union L_BRACES struct_declaration_list R_BRACES\n\t                          | struct_or_union IDENTIFIER\n    \n    struct_or_union : STRUCT\n\t                | UNION\n    \n    struct_declaration_list : struct_declaration\n\t                        | struct_declaration_list struct_declaration\n    \n    struct_declaration : specifier_qualifier_list struct_declarator_list SEMI_COLON\n    \n    specifier_qualifier_list : type_specifier specifier_qualifier_list\n                             | type_specifier\n                             | type_qualifier specifier_qualifier_list\n                             | type_qualifier\n    \n    struct_declarator_list : struct_declarator\n\t                       | struct_declarator_list COMMA struct_declarator\n    \n    struct_declarator : declarator\n                      | COLON constant_expression\n                      | declarator COLON constant_expression\n    \n    enum_specifier : ENUM L_BRACES enumerator_list R_BRACES\n                   | ENUM IDENTIFIER L_BRACES enumerator_list R_BRACES\n                   | ENUM IDENTIFIER\n    \n    enumerator_list : enumerator\n\t                | enumerator_list COMMA enumerator\n    \n    enumerator : IDENTIFIER\n\t           | IDENTIFIER ASSIGNMENT constant_expression\n    \n    type_qualifier : CONST\n\t               | VOLATILE\n    \n    declarator : pointer direct_declarator\n\t           | direct_declarator\n    \n    direct_declarator : IDENTIFIER\n                      | L_PAREN declarator R_PAREN\n                      | direct_declarator L_SQBR constant_expression R_SQBR\n                      | direct_declarator L_SQBR R_SQBR\n                      | direct_declarator L_PAREN parameter_type_list R_PAREN\n                      | direct_declarator L_PAREN identifier_list R_PAREN\n                      | direct_declarator L_PAREN R_PAREN\n    \n    pointer : MULTIPLY\n\t        | MULTIPLY type_qualifier_list\n            | MULTIPLY pointer\n            | MULTIPLY type_qualifier_list pointer\n    \n    type_qualifier_list : type_qualifier\n\t                    | type_qualifier_list type_qualifier\n    \n    parameter_type_list : parameter_declaration\n\t                    | parameter_type_list COMMA parameter_declaration\n    \n    parameter_declaration : declaration_specifiers declarator\n\t                      | declaration_specifiers abstract_declarator\n\t                      | declaration_specifiers\n    \n    identifier_list : IDENTIFIER\n\t                | identifier_list COMMA IDENTIFIER\n    \n    type_name : specifier_qualifier_list\n\t          | specifier_qualifier_list abstract_declarator\n    \n    abstract_declarator : pointer\n\t                    | direct_abstract_declarator\n\t                    | pointer direct_abstract_declarator\n    \n    direct_abstract_declarator : L_PAREN abstract_declarator R_PAREN\n\t                           | L_SQBR R_SQBR\n\t                           | L_SQBR constant_expression R_SQBR\n\t                           | direct_abstract_declarator L_SQBR R_SQBR\n                               | direct_abstract_declarator L_SQBR constant_expression R_SQBR\n                               | L_PAREN R_PAREN\n                               | L_PAREN parameter_type_list R_PAREN\n                               | direct_abstract_declarator L_PAREN R_PAREN\n                               | direct_abstract_declarator L_PAREN parameter_type_list R_PAREN\n    \n    initializer : assignment_expression\n\t            | L_BRACES initializer_list R_BRACES\n\t            | L_BRACES initializer_list COMMA R_BRACES\n    \n    initializer_list : initializer\n\t                 | initializer_list COMMA initializer\n    \n    statement : labeled_statement\n\t          | compound_statement\n\t          | expression_statement\n\t          | selection_statement\n\t          | iteration_statement\n\t          | jump_statement\n    \n    labeled_statement : IDENTIFIER COLON statement\n    \n    labeled_statement : CASE constant_expression COLON statement\n\t                  | DEFAULT COLON statement\n    \n    compound_statement : L_BRACES R_BRACES\n\t                   | L_BRACES statement_list_with_comment R_BRACES\n    \n    declaration_list : declaration\n\t                 | declaration_list declaration\n    \n    statement_list_with_comment : BLOCK_COMMENT\n                                | INLINE_COMMENT\n                                | statement_list\n                                | statement_list_with_comment BLOCK_COMMENT\n                                | statement_list_with_comment INLINE_COMMENT\n                                | statement_list_with_comment statement_list\n    \n    statement_list : statement\n                   | declaration\n\t               | statement_list statement\n                   | statement_list declaration\n    \n    expression_statement : SEMI_COLON\n\t                     | expression SEMI_COLON\n    \n    selection_statement : IF L_PAREN expression R_PAREN statement\n\t                    | IF L_PAREN expression R_PAREN statement ELSE statement\n\t                    | SWITCH L_PAREN expression R_PAREN statement\n    \n    iteration_statement : WHILE L_PAREN expression R_PAREN statement\n\t                    | DO statement WHILE L_PAREN expression R_PAREN SEMI_COLON\n\t                    | FOR L_PAREN expression_statement expression_statement R_PAREN statement\n\t                    | FOR L_PAREN expression_statement expression_statement expression R_PAREN statement\n                        | FOR L_PAREN declaration expression_statement R_PAREN statement\n                        | FOR L_PAREN declaration expression_statement expression R_PAREN statement\n    \n    jump_statement : GOTO IDENTIFIER SEMI_COLON\n\t               | CONTINUE SEMI_COLON\n\t               | BREAK SEMI_COLON\n\t               | RETURN SEMI_COLON\n\t               | RETURN expression SEMI_COLON\n\t                 \n    '
    
_lr_action_items = {'TYPEDEF':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,136,142,149,160,165,166,167,168,169,170,174,183,185,186,187,232,233,234,235,241,244,252,258,260,267,273,274,306,312,319,322,346,347,348,360,362,364,365,366,367,],[13,13,-2,-4,-5,13,13,13,13,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,13,-92,13,-9,-199,13,-147,13,-123,-140,13,-7,-93,-8,-200,-197,13,-201,-202,13,-207,-208,-188,-189,-190,-191,-192,-193,-211,-152,-155,-150,-6,-198,-204,-205,13,-209,-210,-212,13,-223,-224,-225,-151,-153,13,-154,13,-122,-138,-194,-196,13,-222,-226,13,-121,-139,-195,-213,-215,-216,-218,-220,-214,-217,-219,-221,]),'EXTERN':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,136,142,149,160,165,166,167,168,169,170,174,183,185,186,187,232,233,234,235,241,244,252,258,260,267,273,274,306,312,319,322,346,347,348,360,362,364,365,366,367,],[14,14,-2,-4,-5,14,14,14,14,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,14,-92,14,-9,-199,14,-147,14,-123,-140,14,-7,-93,-8,-200,-197,14,-201,-202,14,-207,-208,-188,-189,-190,-191,-192,-193,-211,-152,-155,-150,-6,-198,-204,-205,14,-209,-210,-212,14,-223,-224,-225,-151,-153,14,-154,14,-122,-138,-194,-196,14,-222,-226,14,-121,-139,-195,-213,-215,-216,-218,-220,-214,-217,-219,-221,]),'STATIC':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,136,142,149,160,165,166,167,168,169,170,174,183,185,186,187,232,233,234,235,241,244,252,258,260,267,273,274,306,312,319,322,346,347,348,360,362,364,365,366,367,],[15,15,-2,-4,-5,15,15,15,15,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,15,-92,15,-9,-199,15,-147,15,-123,-140,15,-7,-93,-8,-200,-197,15,-201,-202,15,-207,-208,-188,-189,-190,-191,-192,-193,-211,-152,-155,-150,-6,-198,-204,-205,15,-209,-210,-212,15,-223,-224,-225,-151,-153,15,-154,15,-122,-138,-194,-196,15,-222,-226,15,-121,-139,-195,-213,-215,-216,-218,-220,-214,-217,-219,-221,]),'AUTO':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,136,142,149,160,165,166,167,168,169,170,174,183,185,186,187,232,233,234,235,241,244,252,258,260,267,273,274,306,312,319,322,346,347,348,360,362,364,365,366,367,],[16,16,-2,-4,-5,16,16,16,16,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,16,-92,16,-9,-199,16,-147,16,-123,-140,16,-7,-93,-8,-200,-197,16,-201,-202,16,-207,-208,-188,-189,-190,-191,-192,-193,-211,-152,-155,-150,-6,-198,-204,-205,16,-209,-210,-212,16,-223,-224,-225,-151,-153,16,-154,16,-122,-138,-194,-196,16,-222,-226,16,-121,-139,-195,-213,-215,-216,-218,-220,-214,-217,-219,-221,]),'REGISTER':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,136,142,149,160,165,166,167,168,169,170,174,183,185,186,187,232,233,234,235,241,244,252,258,260,267,273,274,306,312,319,322,346,347,348,360,362,364,365,366,367,],[17,17,-2,-4,-5,17,17,17,17,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,17,-92,17,-9,-199,17,-147,17,-123,-140,17,-7,-93,-8,-200,-197,17,-201,-202,17,-207,-208,-188,-189,-190,-191,-192,-193,-211,-152,-155,-150,-6,-198,-204,-205,17,-209,-210,-212,17,-223,-224,-225,-151,-153,17,-154,17,-122,-138,-194,-196,17,-222,-226,17,-121,-139,-195,-213,-215,-216,-218,-220,-214,-217,-219,-221,]),'VOID':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,89,136,139,142,149,150,151,152,154,155,160,165,166,167,168,169,170,174,183,185,186,187,214,232,233,234,235,241,243,244,245,252,258,260,267,273,274,306,312,313,319,322,346,347,348,360,362,364,365,366,367,],[18,18,-2,-4,-5,18,18,18,18,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,18,-92,18,-9,-199,18,-147,18,-123,18,-140,18,-7,-93,-8,-200,-197,18,-201,-202,18,-207,-208,-188,-189,-190,-191,-192,-193,-211,18,-152,18,-155,-150,18,18,-126,18,18,-6,-198,-204,-205,18,-209,-210,-212,18,-223,-224,-225,18,-151,-153,18,-154,18,18,-122,-127,-138,-194,-196,18,-222,-226,18,-121,-128,-139,-195,-213,-215,-216,-218,-220,-214,-217,-219,-221,]),'CHAR':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,89,136,139,142,149,150,151,152,154,155,160,165,166,167,168,169,170,174,183,185,186,187,214,232,233,234,235,241,243,244,245,252,258,260,267,273,274,306,312,313,319,322,346,347,348,360,362,364,365,366,367,],[19,19,-2,-4,-5,19,19,19,19,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,19,-92,19,-9,-199,19,-147,19,-123,19,-140,19,-7,-93,-8,-200,-197,19,-201,-202,19,-207,-208,-188,-189,-190,-191,-192,-193,-211,19,-152,19,-155,-150,19,19,-126,19,19,-6,-198,-204,-205,19,-209,-210,-212,19,-223,-224,-225,19,-151,-153,19,-154,19,19,-122,-127,-138,-194,-196,19,-222,-226,19,-121,-128,-139,-195,-213,-215,-216,-218,-220,-214,-217,-219,-221,]),'SHORT':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,89,136,139,142,149,150,151,152,154,155,160,165,166,167,168,169,170,174,183,185,186,187,214,232,233,234,235,241,243,244,245,252,258,260,267,273,274,306,312,313,319,322,346,347,348,360,362,364,365,366,367,],[20,20,-2,-4,-5,20,20,20,20,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,20,-92,20,-9,-199,20,-147,20,-123,20,-140,20,-7,-93,-8,-200,-197,20,-201,-202,20,-207,-208,-188,-189,-190,-191,-192,-193,-211,20,-152,20,-155,-150,20,20,-126,20,20,-6,-198,-204,-205,20,-209,-210,-212,20,-223,-224,-225,20,-151,-153,20,-154,20,20,-122,-127,-138,-194,-196,20,-222,-226,20,-121,-128,-139,-195,-213,-215,-216,-218,-220,-214,-217,-219,-221,]),'INT':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,89,136,139,142,149,150,151,152,154,155,160,165,166,167,168,169,170,174,183,185,186,187,214,232,233,234,235,241,243,244,245,252,258,260,267,273,274,306,312,313,319,322,346,347,348,360,362,364,365,366,367,],[21,21,-2,-4,-5,21,21,21,21,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,21,-92,21,-9,-199,21,-147,21,-123,21,-140,21,-7,-93,-8,-200,-197,21,-201,-202,21,-207,-208,-188,-189,-190,-191,-192,-193,-211,21,-152,21,-155,-150,21,21,-126,21,21,-6,-198,-204,-205,21,-209,-210,-212,21,-223,-224,-225,21,-151,-153,21,-154,21,21,-122,-127,-138,-194,-196,21,-222,-226,21,-121,-128,-139,-195,-213,-215,-216,-218,-220,-214,-217,-219,-221,]),'LONG':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,89,136,139,142,149,150,151,152,154,155,160,165,166,167,168,169,170,174,183,185,186,187,214,232,233,234,235,241,243,244,245,252,258,260,267,273,274,306,312,313,319,322,346,347,348,360,362,364,365,366,367,],[22,22,-2,-4,-5,22,22,22,22,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,22,-92,22,-9,-199,22,-147,22,-123,22,-140,22,-7,-93,-8,-200,-197,22,-201,-202,22,-207,-208,-188,-189,-190,-191,-192,-193,-211,22,-152,22,-155,-150,22,22,-126,22,22,-6,-198,-204,-205,22,-209,-210,-212,22,-223,-224,-225,22,-151,-153,22,-154,22,22,-122,-127,-138,-194,-196,22,-222,-226,22,-121,-128,-139,-195,-213,-215,-216,-218,-220,-214,-217,-219,-221,]),'FLOAT':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,89,136,139,142,149,150,151,152,154,155,160,165,166,167,168,169,170,174,183,185,186,187,214,232,233,234,235,241,243,244,245,252,258,260,267,273,274,306,312,313,319,322,346,347,348,360,362,364,365,366,367,],[23,23,-2,-4,-5,23,23,23,23,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,23,-92,23,-9,-199,23,-147,23,-123,23,-140,23,-7,-93,-8,-200,-197,23,-201,-202,23,-207,-208,-188,-189,-190,-191,-192,-193,-211,23,-152,23,-155,-150,23,23,-126,23,23,-6,-198,-204,-205,23,-209,-210,-212,23,-223,-224,-225,23,-151,-153,23,-154,23,23,-122,-127,-138,-194,-196,23,-222,-226,23,-121,-128,-139,-195,-213,-215,-216,-218,-220,-214,-217,-219,-221,]),'DOUBLE':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,89,136,139,142,149,150,151,152,154,155,160,165,166,167,168,169,170,174,183,185,186,187,214,232,233,234,235,241,243,244,245,252,258,260,267,273,274,306,312,313,319,322,346,347,348,360,362,364,365,366,367,],[24,24,-2,-4,-5,24,24,24,24,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,24,-92,24,-9,-199,24,-147,24,-123,24,-140,24,-7,-93,-8,-200,-197,24,-201,-202,24,-207,-208,-188,-189,-190,-191,-192,-193,-211,24,-152,24,-155,-150,24,24,-126,24,24,-6,-198,-204,-205,24,-209,-210,-212,24,-223,-224,-225,24,-151,-153,24,-154,24,24,-122,-127,-138,-194,-196,24,-222,-226,24,-121,-128,-139,-195,-213,-215,-216,-218,-220,-214,-217,-219,-221,]),'SIGNED':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,89,136,139,142,149,150,151,152,154,155,160,165,166,167,168,169,170,174,183,185,186,187,214,232,233,234,235,241,243,244,245,252,258,260,267,273,274,306,312,313,319,322,346,347,348,360,362,364,365,366,367,],[25,25,-2,-4,-5,25,25,25,25,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,25,-92,25,-9,-199,25,-147,25,-123,25,-140,25,-7,-93,-8,-200,-197,25,-201,-202,25,-207,-208,-188,-189,-190,-191,-192,-193,-211,25,-152,25,-155,-150,25,25,-126,25,25,-6,-198,-204,-205,25,-209,-210,-212,25,-223,-224,-225,25,-151,-153,25,-154,25,25,-122,-127,-138,-194,-196,25,-222,-226,25,-121,-128,-139,-195,-213,-215,-216,-218,-220,-214,-217,-219,-221,]),'UNSIGNED':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,89,136,139,142,149,150,151,152,154,155,160,165,166,167,168,169,170,174,183,185,186,187,214,232,233,234,235,241,243,244,245,252,258,260,267,273,274,306,312,313,319,322,346,347,348,360,362,364,365,366,367,],[26,26,-2,-4,-5,26,26,26,26,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,26,-92,26,-9,-199,26,-147,26,-123,26,-140,26,-7,-93,-8,-200,-197,26,-201,-202,26,-207,-208,-188,-189,-190,-191,-192,-193,-211,26,-152,26,-155,-150,26,26,-126,26,26,-6,-198,-204,-205,26,-209,-210,-212,26,-223,-224,-225,26,-151,-153,26,-154,26,26,-122,-127,-138,-194,-196,26,-222,-226,26,-121,-128,-139,-195,-213,-215,-216,-218,-220,-214,-217,-219,-221,]),'BOOL':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,89,136,139,142,149,150,151,152,154,155,160,165,166,167,168,169,170,174,183,185,186,187,214,232,233,234,235,241,243,244,245,252,258,260,267,273,274,306,312,313,319,322,346,347,348,360,362,364,365,366,367,],[29,29,-2,-4,-5,29,29,29,29,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,29,-92,29,-9,-199,29,-147,29,-123,29,-140,29,-7,-93,-8,-200,-197,29,-201,-202,29,-207,-208,-188,-189,-190,-191,-192,-193,-211,29,-152,29,-155,-150,29,29,-126,29,29,-6,-198,-204,-205,29,-209,-210,-212,29,-223,-224,-225,29,-151,-153,29,-154,29,29,-122,-127,-138,-194,-196,29,-222,-226,29,-121,-128,-139,-195,-213,-215,-216,-218,-220,-214,-217,-219,-221,]),'CONST':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,39,40,41,44,45,46,47,52,54,55,57,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,89,136,139,142,148,149,150,151,152,154,155,160,165,166,167,168,169,170,174,183,185,186,187,214,232,233,234,235,241,243,244,245,252,258,260,267,273,274,306,312,313,319,322,346,347,348,360,362,364,365,366,367,],[30,30,-2,-4,-5,30,30,30,30,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,30,-149,-3,30,-92,30,-9,-199,30,-147,30,30,-160,-123,30,-140,30,-7,-93,-8,-200,-197,30,-201,-202,30,-207,-208,-188,-189,-190,-191,-192,-193,-211,30,-152,30,-155,-161,-150,30,30,-126,30,30,-6,-198,-204,-205,30,-209,-210,-212,30,-223,-224,-225,30,-151,-153,30,-154,30,30,-122,-127,-138,-194,-196,30,-222,-226,30,-121,-128,-139,-195,-213,-215,-216,-218,-220,-214,-217,-219,-221,]),'VOLATILE':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,39,40,41,44,45,46,47,52,54,55,57,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,89,136,139,142,148,149,150,151,152,154,155,160,165,166,167,168,169,170,174,183,185,186,187,214,232,233,234,235,241,243,244,245,252,258,260,267,273,274,306,312,313,319,322,346,347,348,360,362,364,365,366,367,],[31,31,-2,-4,-5,31,31,31,31,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,31,-149,-3,31,-92,31,-9,-199,31,-147,31,31,-160,-123,31,-140,31,-7,-93,-8,-200,-197,31,-201,-202,31,-207,-208,-188,-189,-190,-191,-192,-193,-211,31,-152,31,-155,-161,-150,31,31,-126,31,31,-6,-198,-204,-205,31,-209,-210,-212,31,-223,-224,-225,31,-151,-153,31,-154,31,31,-122,-127,-138,-194,-196,31,-222,-226,31,-121,-128,-139,-195,-213,-215,-216,-218,-220,-214,-217,-219,-221,]),'MULTIPLY':([0,2,3,4,5,6,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,39,41,45,47,48,49,50,51,53,55,57,59,62,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,92,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,133,138,139,140,146,148,153,154,155,160,163,165,166,167,168,169,170,171,173,174,175,176,179,180,181,183,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,241,242,244,249,250,251,252,254,258,259,260,263,264,267,271,272,273,274,279,282,283,297,298,299,300,301,305,312,314,315,319,321,322,323,324,325,326,327,328,329,330,331,332,333,334,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[32,32,-2,-4,-5,32,-94,-96,-98,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,32,32,-3,-92,-9,111,32,-95,-97,-99,111,32,-160,-123,-140,-7,111,-93,32,-8,-197,111,-201,-202,111,-207,-208,-188,-189,-190,-191,-192,-193,-211,-10,111,111,111,111,-44,-32,111,111,111,-46,111,-22,-38,-39,-40,-41,-42,-43,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,229,-44,111,-10,32,-161,32,-130,-132,-6,111,-198,-204,-205,111,-209,-210,111,111,-212,111,111,32,111,111,111,-223,-224,-225,111,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,111,111,111,111,-28,-29,-33,111,-34,-35,-36,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,32,111,-122,111,-129,-131,-138,111,-194,111,-196,-19,111,32,111,111,-222,-226,-24,-26,-27,229,229,-47,-48,-49,111,-121,32,111,-139,111,-195,111,-45,111,111,111,111,111,111,-23,-25,111,-37,-213,-215,-216,111,111,111,-218,111,-220,111,-214,-217,-219,-221,]),'IDENTIFIER':([0,2,3,4,5,6,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,41,45,47,48,49,50,51,53,54,55,56,57,59,61,62,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,89,92,94,97,103,104,105,107,110,111,112,113,114,115,139,146,147,148,153,154,155,159,160,163,165,166,167,168,169,170,171,173,174,175,176,180,181,183,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,210,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,236,239,241,242,244,249,250,251,252,253,254,258,259,260,264,271,272,273,274,305,312,314,315,319,321,322,323,325,326,327,328,329,330,333,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[33,33,-2,-4,-5,33,-94,-96,-98,33,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-156,33,59,62,-124,-125,-3,-92,-9,84,33,-95,-97,-99,140,145,-157,-158,-160,-123,158,-140,-7,140,-93,33,-8,-197,84,-201,-202,84,-207,-208,-188,-189,-190,-191,-192,-193,-211,140,140,84,184,140,140,140,140,140,-38,-39,-40,-41,-42,-43,140,33,-159,-161,33,-130,-132,158,-6,140,-198,-204,-205,84,-209,-210,84,84,-212,140,140,140,140,140,-223,-224,-225,140,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,140,140,140,140,282,283,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,303,33,33,140,-122,140,-129,-131,-138,158,140,-194,84,-196,140,140,140,-222,-226,140,-121,33,140,-139,140,-195,84,84,84,140,140,140,140,140,-213,-215,-216,84,84,84,-218,84,-220,84,-214,-217,-219,-221,]),'L_PAREN':([0,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,39,41,45,47,48,49,50,51,52,53,55,56,57,59,62,64,65,66,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,88,89,90,91,92,93,97,102,103,104,105,107,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,136,139,140,142,146,147,148,149,153,154,155,160,163,165,166,167,168,169,170,171,173,174,175,176,179,180,181,183,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,210,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,235,239,240,241,242,244,249,250,251,252,254,258,259,260,263,264,266,267,270,271,272,273,274,279,282,283,304,305,307,310,312,314,315,319,321,322,323,325,326,327,328,329,330,331,332,333,335,337,339,340,341,346,347,348,350,352,356,357,358,360,361,362,363,364,365,366,367,],[34,34,-2,-4,-5,34,-94,-96,-98,34,54,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-156,-149,34,-3,-92,-9,89,34,-95,-97,-99,54,139,-157,-158,-160,-123,-140,-7,89,-93,34,-8,-197,89,-201,-202,89,-207,-208,-188,-189,-190,-191,-192,-193,-211,-10,139,176,89,180,181,89,183,89,204,210,210,139,214,-22,-38,-39,-40,-41,-42,-43,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-152,89,-10,-155,241,-159,-161,-150,34,-130,-132,-6,89,-198,-204,-205,89,-209,-210,89,89,-212,89,89,267,89,89,89,-223,-224,-225,89,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,89,139,89,89,-28,-29,89,89,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,-151,-153,-154,241,306,241,139,-122,139,-129,-131,-138,139,-194,89,-196,-19,139,267,267,327,89,89,-222,-226,-24,-26,-27,306,139,-179,-175,-121,34,139,-139,89,-195,89,89,89,89,89,89,139,-23,-25,89,-177,-181,-174,-180,-176,-213,-215,-216,89,89,-178,-182,89,-218,89,-220,89,-214,-217,-219,-221,]),'ENUM':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,89,136,139,142,149,150,151,152,154,155,160,165,166,167,168,169,170,174,183,185,186,187,214,232,233,234,235,241,243,244,245,252,258,260,267,273,274,306,312,313,319,322,346,347,348,360,362,364,365,366,367,],[36,36,-2,-4,-5,36,36,36,36,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,36,-92,36,-9,-199,36,-147,36,-123,36,-140,36,-7,-93,-8,-200,-197,36,-201,-202,36,-207,-208,-188,-189,-190,-191,-192,-193,-211,36,-152,36,-155,-150,36,36,-126,36,36,-6,-198,-204,-205,36,-209,-210,-212,36,-223,-224,-225,36,-151,-153,36,-154,36,36,-122,-127,-138,-194,-196,36,-222,-226,36,-121,-128,-139,-195,-213,-215,-216,-218,-220,-214,-217,-219,-221,]),'STRUCT':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,89,136,139,142,149,150,151,152,154,155,160,165,166,167,168,169,170,174,183,185,186,187,214,232,233,234,235,241,243,244,245,252,258,260,267,273,274,306,312,313,319,322,346,347,348,360,362,364,365,366,367,],[37,37,-2,-4,-5,37,37,37,37,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,37,-92,37,-9,-199,37,-147,37,-123,37,-140,37,-7,-93,-8,-200,-197,37,-201,-202,37,-207,-208,-188,-189,-190,-191,-192,-193,-211,37,-152,37,-155,-150,37,37,-126,37,37,-6,-198,-204,-205,37,-209,-210,-212,37,-223,-224,-225,37,-151,-153,37,-154,37,37,-122,-127,-138,-194,-196,37,-222,-226,37,-121,-128,-139,-195,-213,-215,-216,-218,-220,-214,-217,-219,-221,]),'UNION':([0,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,39,40,41,44,45,46,47,52,54,59,60,62,63,64,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,89,136,139,142,149,150,151,152,154,155,160,165,166,167,168,169,170,174,183,185,186,187,214,232,233,234,235,241,243,244,245,252,258,260,267,273,274,306,312,313,319,322,346,347,348,360,362,364,365,366,367,],[38,38,-2,-4,-5,38,38,38,38,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-3,38,-92,38,-9,-199,38,-147,38,-123,38,-140,38,-7,-93,-8,-200,-197,38,-201,-202,38,-207,-208,-188,-189,-190,-191,-192,-193,-211,38,-152,38,-155,-150,38,38,-126,38,38,-6,-198,-204,-205,38,-209,-210,-212,38,-223,-224,-225,38,-151,-153,38,-154,38,38,-122,-127,-138,-194,-196,38,-222,-226,38,-121,-128,-139,-195,-213,-215,-216,-218,-220,-214,-217,-219,-221,]),'$end':([1,2,3,4,5,39,41,45,64,66,68,70,160,165,],[0,-1,-2,-4,-5,-3,-92,-9,-7,-93,-8,-197,-6,-198,]),'SEMI_COLON':([6,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,40,41,42,43,47,48,49,50,51,52,59,62,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,92,95,96,97,98,99,100,101,102,106,108,109,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,140,142,149,161,162,164,165,166,167,168,169,170,171,173,174,183,184,185,186,187,188,207,208,209,211,212,213,232,233,235,244,246,247,248,252,258,259,260,261,263,271,272,273,274,275,277,279,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,312,316,319,320,322,323,324,325,326,331,332,334,342,343,344,346,347,348,350,352,354,358,359,360,361,362,363,364,365,366,367,],[41,-94,-96,-98,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-102,-92,66,-100,83,41,-95,-97,-99,-147,-123,-140,-93,-197,83,-201,-202,83,-207,-208,-188,-189,-190,-191,-192,-193,-211,-10,174,83,185,186,187,-89,-76,-44,-74,-32,-46,-72,-22,-70,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-68,-66,-64,-61,-56,-53,-50,-102,-152,-91,-44,-10,-155,-150,-103,-183,-101,-198,-204,-205,83,-209,-210,83,83,-212,83,273,-223,-224,-225,274,-28,-29,-33,-34,-35,-36,-151,-153,-154,-122,313,-133,-135,-138,-194,83,-196,-90,-19,83,83,-222,-226,-77,-73,-24,-26,-27,-71,-69,-67,-65,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-121,-136,-139,-184,-195,83,-45,83,83,-23,-25,-37,-134,-137,-185,-213,-215,-216,83,83,-75,83,365,-218,83,-220,83,-214,-217,-219,-221,]),'L_BRACES':([7,12,33,35,36,37,38,40,41,44,46,47,52,59,62,63,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,92,136,142,149,163,165,166,167,168,169,170,171,173,174,185,186,187,232,233,235,258,259,260,273,274,321,322,323,325,326,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[47,-148,-149,60,61,-124,-125,47,-92,47,-199,47,-147,150,159,47,163,-93,-200,-197,47,-201,-202,47,-207,-208,-188,-189,-190,-191,-192,-193,-211,47,-152,-155,-150,163,-198,-204,-205,47,-209,-210,47,47,-212,-223,-224,-225,-151,-153,-154,-194,47,-196,-222,-226,163,-195,47,47,47,-213,-215,-216,47,47,47,-218,47,-220,47,-214,-217,-219,-221,]),'L_SQBR':([8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,49,50,51,52,55,56,57,59,62,84,102,109,117,118,119,120,121,122,123,124,125,126,136,140,142,146,147,148,149,154,155,179,207,208,232,233,235,239,240,241,244,250,251,252,263,266,267,279,282,283,304,307,310,312,319,331,332,335,337,339,340,341,356,357,],[-94,-96,-98,53,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-156,-149,-95,-97,-99,53,-157,-158,-160,-123,-140,-10,203,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-152,-10,-155,242,-159,-161,-150,-130,-132,242,-28,-29,-151,-153,-154,242,305,242,-122,-129,-131,-138,-19,242,242,-24,-26,-27,305,-179,-175,-121,-139,-23,-25,-177,-181,-174,-180,-176,-178,-182,]),'R_PAREN':([8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,49,50,51,52,54,55,56,57,58,59,62,83,98,99,100,101,102,106,108,109,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,136,138,140,141,142,143,144,145,146,147,148,149,154,155,174,177,178,179,204,207,208,209,211,212,213,232,233,235,237,238,239,240,241,244,250,251,252,261,262,263,265,266,267,268,269,275,277,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,310,312,319,324,328,329,331,332,334,335,337,338,339,340,341,349,351,353,354,355,356,357,],[-94,-96,-98,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-156,-149,-95,-97,-99,-147,142,-157,-158,-160,149,-123,-140,-211,-89,-76,-44,-74,-32,-46,-72,-22,-70,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-68,-66,-64,-61,-56,-53,-50,-152,-44,-10,233,-155,235,-162,-167,-166,-159,-161,-150,-130,-132,-212,263,264,-169,279,-28,-29,-33,-34,-35,-36,-151,-153,-154,-164,-165,-171,-172,307,-122,-129,-131,-138,-90,323,-19,-170,-171,307,325,326,-77,-73,-24,332,-30,-26,-27,334,-71,-69,-67,-65,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-163,-168,-173,337,-179,339,340,-175,-121,-139,-45,350,352,-23,-25,-37,-177,-181,357,-174,-180,-176,359,361,363,-75,-31,-178,-182,]),'COMMA':([8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,40,42,43,49,50,51,52,55,56,57,59,62,84,87,98,99,100,101,102,106,108,109,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,136,137,138,140,141,142,143,144,145,146,147,148,149,156,157,158,161,162,164,177,188,207,208,209,211,212,213,232,233,235,237,238,239,240,244,246,247,248,252,255,256,257,261,262,263,268,269,275,276,277,278,279,280,281,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,307,309,310,312,316,317,318,319,320,324,331,332,334,335,337,338,339,340,341,342,343,344,345,349,351,353,354,355,356,357,],[-94,-96,-98,-148,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-156,-149,-102,67,-100,-95,-97,-99,-147,-157,-158,-160,-123,-140,-10,175,-89,-76,-44,-74,-32,-46,-72,-22,-70,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-68,-66,-64,-61,-56,-53,-50,-102,-152,-91,-44,-10,234,-155,236,-162,-167,-166,-159,-161,-150,253,-141,-143,-103,-183,-101,175,175,-28,-29,-33,-34,-35,-36,-151,-153,-154,-164,-165,-171,-172,-122,314,-133,-135,-138,253,321,-186,-90,175,-19,175,175,-77,175,-73,175,-24,333,-30,-26,-27,-71,-69,-67,-65,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-163,-168,-173,-179,234,-175,-121,-136,-142,-144,-139,-184,-45,-23,-25,-37,-177,-181,234,-174,-180,-176,-134,-137,-185,-187,175,175,175,-75,-31,-178,-182,]),'ASSIGNMENT':([12,33,40,52,84,100,102,109,117,118,119,120,121,122,123,124,125,126,134,136,138,140,142,149,158,207,208,209,211,212,213,232,233,235,263,279,282,283,324,331,332,334,],[-148,-149,65,-147,-10,190,-32,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,65,-152,-44,-10,-155,-150,254,-28,-29,-33,-34,-35,-36,-151,-153,-154,-19,-24,-26,-27,-45,-23,-25,-37,]),'COLON':([12,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,52,59,62,84,86,98,99,100,101,102,106,108,109,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,136,137,138,140,142,149,153,154,155,172,207,208,209,211,212,213,232,233,235,244,248,250,251,252,261,263,275,276,277,279,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,312,314,319,324,331,332,334,354,],[-148,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-145,-146,-149,-147,-123,-140,171,173,-89,-76,-44,-74,-32,-46,-72,-22,-70,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-68,-66,-64,-61,-56,-53,-50,-152,-91,-44,-10,-155,-150,249,-130,-132,259,-28,-29,-33,-34,-35,-36,-151,-153,-154,-122,315,-129,-131,-138,-90,-19,-77,330,-73,-24,-26,-27,-71,-69,-67,-65,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-121,249,-139,-45,-23,-25,-37,-75,]),'CASE':([41,47,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,92,165,166,167,168,169,170,171,173,174,185,186,187,258,259,260,273,274,322,323,325,326,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,85,-93,-197,85,-201,-202,85,-207,-208,-188,-189,-190,-191,-192,-193,-211,85,-198,-204,-205,85,-209,-210,85,85,-212,-223,-224,-225,-194,85,-196,-222,-226,-195,85,85,85,-213,-215,-216,85,85,85,-218,85,-220,85,-214,-217,-219,-221,]),'DEFAULT':([41,47,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,92,165,166,167,168,169,170,171,173,174,185,186,187,258,259,260,273,274,322,323,325,326,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,86,-93,-197,86,-201,-202,86,-207,-208,-188,-189,-190,-191,-192,-193,-211,86,-198,-204,-205,86,-209,-210,86,86,-212,-223,-224,-225,-194,86,-196,-222,-226,-195,86,86,86,-213,-215,-216,86,86,86,-218,86,-220,86,-214,-217,-219,-221,]),'IF':([41,47,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,92,165,166,167,168,169,170,171,173,174,185,186,187,258,259,260,273,274,322,323,325,326,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,88,-93,-197,88,-201,-202,88,-207,-208,-188,-189,-190,-191,-192,-193,-211,88,-198,-204,-205,88,-209,-210,88,88,-212,-223,-224,-225,-194,88,-196,-222,-226,-195,88,88,88,-213,-215,-216,88,88,88,-218,88,-220,88,-214,-217,-219,-221,]),'SWITCH':([41,47,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,92,165,166,167,168,169,170,171,173,174,185,186,187,258,259,260,273,274,322,323,325,326,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,90,-93,-197,90,-201,-202,90,-207,-208,-188,-189,-190,-191,-192,-193,-211,90,-198,-204,-205,90,-209,-210,90,90,-212,-223,-224,-225,-194,90,-196,-222,-226,-195,90,90,90,-213,-215,-216,90,90,90,-218,90,-220,90,-214,-217,-219,-221,]),'WHILE':([41,47,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,92,165,166,167,168,169,170,171,173,174,182,185,186,187,258,259,260,273,274,322,323,325,326,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,91,-93,-197,91,-201,-202,91,-207,-208,-188,-189,-190,-191,-192,-193,-211,91,-198,-204,-205,91,-209,-210,91,91,-212,270,-223,-224,-225,-194,91,-196,-222,-226,-195,91,91,91,-213,-215,-216,91,91,91,-218,91,-220,91,-214,-217,-219,-221,]),'DO':([41,47,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,92,165,166,167,168,169,170,171,173,174,185,186,187,258,259,260,273,274,322,323,325,326,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,92,-93,-197,92,-201,-202,92,-207,-208,-188,-189,-190,-191,-192,-193,-211,92,-198,-204,-205,92,-209,-210,92,92,-212,-223,-224,-225,-194,92,-196,-222,-226,-195,92,92,92,-213,-215,-216,92,92,92,-218,92,-220,92,-214,-217,-219,-221,]),'FOR':([41,47,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,92,165,166,167,168,169,170,171,173,174,185,186,187,258,259,260,273,274,322,323,325,326,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,93,-93,-197,93,-201,-202,93,-207,-208,-188,-189,-190,-191,-192,-193,-211,93,-198,-204,-205,93,-209,-210,93,93,-212,-223,-224,-225,-194,93,-196,-222,-226,-195,93,93,93,-213,-215,-216,93,93,93,-218,93,-220,93,-214,-217,-219,-221,]),'GOTO':([41,47,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,92,165,166,167,168,169,170,171,173,174,185,186,187,258,259,260,273,274,322,323,325,326,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,94,-93,-197,94,-201,-202,94,-207,-208,-188,-189,-190,-191,-192,-193,-211,94,-198,-204,-205,94,-209,-210,94,94,-212,-223,-224,-225,-194,94,-196,-222,-226,-195,94,94,94,-213,-215,-216,94,94,94,-218,94,-220,94,-214,-217,-219,-221,]),'CONTINUE':([41,47,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,92,165,166,167,168,169,170,171,173,174,185,186,187,258,259,260,273,274,322,323,325,326,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,95,-93,-197,95,-201,-202,95,-207,-208,-188,-189,-190,-191,-192,-193,-211,95,-198,-204,-205,95,-209,-210,95,95,-212,-223,-224,-225,-194,95,-196,-222,-226,-195,95,95,95,-213,-215,-216,95,95,95,-218,95,-220,95,-214,-217,-219,-221,]),'BREAK':([41,47,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,92,165,166,167,168,169,170,171,173,174,185,186,187,258,259,260,273,274,322,323,325,326,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,96,-93,-197,96,-201,-202,96,-207,-208,-188,-189,-190,-191,-192,-193,-211,96,-198,-204,-205,96,-209,-210,96,96,-212,-223,-224,-225,-194,96,-196,-222,-226,-195,96,96,96,-213,-215,-216,96,96,96,-218,96,-220,96,-214,-217,-219,-221,]),'RETURN':([41,47,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,92,165,166,167,168,169,170,171,173,174,185,186,187,258,259,260,273,274,322,323,325,326,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,97,-93,-197,97,-201,-202,97,-207,-208,-188,-189,-190,-191,-192,-193,-211,97,-198,-204,-205,97,-209,-210,97,97,-212,-223,-224,-225,-194,97,-196,-222,-226,-195,97,97,97,-213,-215,-216,97,97,97,-218,97,-220,97,-214,-217,-219,-221,]),'INCREMENT':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,92,97,102,103,104,105,107,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,139,140,163,165,166,167,168,169,170,171,173,174,175,176,180,181,183,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,210,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,242,249,254,258,259,260,263,264,271,272,273,274,279,282,283,305,315,321,322,323,325,326,327,328,329,330,331,332,333,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,103,103,103,-93,-197,103,-201,-202,103,-207,-208,-188,-189,-190,-191,-192,-193,-211,-10,103,103,103,103,207,103,103,103,103,-22,-38,-39,-40,-41,-42,-43,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,103,-10,103,-198,-204,-205,103,-209,-210,103,103,-212,103,103,103,103,103,-223,-224,-225,103,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,103,103,103,103,-28,-29,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-194,103,-196,-19,103,103,103,-222,-226,-24,-26,-27,103,103,103,-195,103,103,103,103,103,103,103,-23,-25,103,-213,-215,-216,103,103,103,-218,103,-220,103,-214,-217,-219,-221,]),'DECREMENT':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,92,97,102,103,104,105,107,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,139,140,163,165,166,167,168,169,170,171,173,174,175,176,180,181,183,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,210,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,242,249,254,258,259,260,263,264,271,272,273,274,279,282,283,305,315,321,322,323,325,326,327,328,329,330,331,332,333,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,104,104,104,-93,-197,104,-201,-202,104,-207,-208,-188,-189,-190,-191,-192,-193,-211,-10,104,104,104,104,208,104,104,104,104,-22,-38,-39,-40,-41,-42,-43,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,104,-10,104,-198,-204,-205,104,-209,-210,104,104,-212,104,104,104,104,104,-223,-224,-225,104,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,104,104,104,104,-28,-29,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-194,104,-196,-19,104,104,104,-222,-226,-24,-26,-27,104,104,104,-195,104,104,104,104,104,104,104,-23,-25,104,-213,-215,-216,104,104,104,-218,104,-220,104,-214,-217,-219,-221,]),'SIZEOF':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,89,92,97,103,104,105,107,110,111,112,113,114,115,139,163,165,166,167,168,169,170,171,173,174,175,176,180,181,183,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,210,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,242,249,254,258,259,260,264,271,272,273,274,305,315,321,322,323,325,326,327,328,329,330,333,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,107,107,107,-93,-197,107,-201,-202,107,-207,-208,-188,-189,-190,-191,-192,-193,-211,107,107,107,107,107,107,107,107,-38,-39,-40,-41,-42,-43,107,107,-198,-204,-205,107,-209,-210,107,107,-212,107,107,107,107,107,-223,-224,-225,107,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-194,107,-196,107,107,107,-222,-226,107,107,107,-195,107,107,107,107,107,107,107,107,-213,-215,-216,107,107,107,-218,107,-220,107,-214,-217,-219,-221,]),'BITWISE_AND':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,92,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,128,129,130,131,132,133,138,139,140,163,165,166,167,168,169,170,171,173,174,175,176,180,181,183,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,242,249,254,258,259,260,263,264,271,272,273,274,279,282,283,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,305,315,321,322,323,324,325,326,327,328,329,330,331,332,333,334,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,110,110,110,-93,-197,110,-201,-202,110,-207,-208,-188,-189,-190,-191,-192,-193,-211,-10,110,110,110,110,-44,-32,110,110,110,-46,110,-22,-38,-39,-40,-41,-42,-43,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,218,-64,-61,-56,-53,-50,-44,110,-10,110,-198,-204,-205,110,-209,-210,110,110,-212,110,110,110,110,110,-223,-224,-225,110,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,110,110,110,110,-28,-29,-33,110,-34,-35,-36,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-194,110,-196,-19,110,110,110,-222,-226,-24,-26,-27,218,-65,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,110,110,110,-195,110,-45,110,110,110,110,110,110,-23,-25,110,-37,-213,-215,-216,110,110,110,-218,110,-220,110,-214,-217,-219,-221,]),'ADD':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,92,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,132,133,138,139,140,163,165,166,167,168,169,170,171,173,174,175,176,180,181,183,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,242,249,254,258,259,260,263,264,271,272,273,274,279,282,283,295,296,297,298,299,300,301,305,315,321,322,323,324,325,326,327,328,329,330,331,332,333,334,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,112,112,112,-93,-197,112,-201,-202,112,-207,-208,-188,-189,-190,-191,-192,-193,-211,-10,112,112,112,112,-44,-32,112,112,112,-46,112,-22,-38,-39,-40,-41,-42,-43,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,227,-50,-44,112,-10,112,-198,-204,-205,112,-209,-210,112,112,-212,112,112,112,112,112,-223,-224,-225,112,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,112,112,112,112,-28,-29,-33,112,-34,-35,-36,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,-194,112,-196,-19,112,112,112,-222,-226,-24,-26,-27,227,227,-51,-52,-47,-48,-49,112,112,112,-195,112,-45,112,112,112,112,112,112,-23,-25,112,-37,-213,-215,-216,112,112,112,-218,112,-220,112,-214,-217,-219,-221,]),'SUBSTRACT':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,89,92,97,100,102,103,104,105,106,107,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,132,133,138,139,140,163,165,166,167,168,169,170,171,173,174,175,176,180,181,183,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,242,249,254,258,259,260,263,264,271,272,273,274,279,282,283,295,296,297,298,299,300,301,305,315,321,322,323,324,325,326,327,328,329,330,331,332,333,334,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,113,113,113,-93,-197,113,-201,-202,113,-207,-208,-188,-189,-190,-191,-192,-193,-211,-10,113,113,113,113,-44,-32,113,113,113,-46,113,-22,-38,-39,-40,-41,-42,-43,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,228,-50,-44,113,-10,113,-198,-204,-205,113,-209,-210,113,113,-212,113,113,113,113,113,-223,-224,-225,113,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,113,113,113,113,-28,-29,-33,113,-34,-35,-36,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,-194,113,-196,-19,113,113,113,-222,-226,-24,-26,-27,228,228,-51,-52,-47,-48,-49,113,113,113,-195,113,-45,113,113,113,113,113,113,-23,-25,113,-37,-213,-215,-216,113,113,113,-218,113,-220,113,-214,-217,-219,-221,]),'BITWISE_ONE_COMPLEMENT':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,89,92,97,103,104,105,107,110,111,112,113,114,115,139,163,165,166,167,168,169,170,171,173,174,175,176,180,181,183,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,210,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,242,249,254,258,259,260,264,271,272,273,274,305,315,321,322,323,325,326,327,328,329,330,333,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,114,114,114,-93,-197,114,-201,-202,114,-207,-208,-188,-189,-190,-191,-192,-193,-211,114,114,114,114,114,114,114,114,-38,-39,-40,-41,-42,-43,114,114,-198,-204,-205,114,-209,-210,114,114,-212,114,114,114,114,114,-223,-224,-225,114,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,-194,114,-196,114,114,114,-222,-226,114,114,114,-195,114,114,114,114,114,114,114,114,-213,-215,-216,114,114,114,-218,114,-220,114,-214,-217,-219,-221,]),'LOGICAL_NOT':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,89,92,97,103,104,105,107,110,111,112,113,114,115,139,163,165,166,167,168,169,170,171,173,174,175,176,180,181,183,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,210,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,242,249,254,258,259,260,264,271,272,273,274,305,315,321,322,323,325,326,327,328,329,330,333,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,115,115,115,-93,-197,115,-201,-202,115,-207,-208,-188,-189,-190,-191,-192,-193,-211,115,115,115,115,115,115,115,115,-38,-39,-40,-41,-42,-43,115,115,-198,-204,-205,115,-209,-210,115,115,-212,115,115,115,115,115,-223,-224,-225,115,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,-194,115,-196,115,115,115,-222,-226,115,115,115,-195,115,115,115,115,115,115,115,115,-213,-215,-216,115,115,115,-218,115,-220,115,-214,-217,-219,-221,]),'NULL':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,89,92,97,103,104,105,107,110,111,112,113,114,115,139,163,165,166,167,168,169,170,171,173,174,175,176,180,181,183,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,210,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,242,249,254,258,259,260,264,271,272,273,274,305,315,321,322,323,325,326,327,328,329,330,333,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,117,117,117,-93,-197,117,-201,-202,117,-207,-208,-188,-189,-190,-191,-192,-193,-211,117,117,117,117,117,117,117,117,-38,-39,-40,-41,-42,-43,117,117,-198,-204,-205,117,-209,-210,117,117,-212,117,117,117,117,117,-223,-224,-225,117,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,-194,117,-196,117,117,117,-222,-226,117,117,117,-195,117,117,117,117,117,117,117,117,-213,-215,-216,117,117,117,-218,117,-220,117,-214,-217,-219,-221,]),'INT_CONSTANT':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,89,92,97,103,104,105,107,110,111,112,113,114,115,139,163,165,166,167,168,169,170,171,173,174,175,176,180,181,183,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,210,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,242,249,254,258,259,260,264,271,272,273,274,305,315,321,322,323,325,326,327,328,329,330,333,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,118,118,118,-93,-197,118,-201,-202,118,-207,-208,-188,-189,-190,-191,-192,-193,-211,118,118,118,118,118,118,118,118,-38,-39,-40,-41,-42,-43,118,118,-198,-204,-205,118,-209,-210,118,118,-212,118,118,118,118,118,-223,-224,-225,118,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,-194,118,-196,118,118,118,-222,-226,118,118,118,-195,118,118,118,118,118,118,118,118,-213,-215,-216,118,118,118,-218,118,-220,118,-214,-217,-219,-221,]),'HEX_CONSTANT':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,89,92,97,103,104,105,107,110,111,112,113,114,115,139,163,165,166,167,168,169,170,171,173,174,175,176,180,181,183,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,210,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,242,249,254,258,259,260,264,271,272,273,274,305,315,321,322,323,325,326,327,328,329,330,333,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,119,119,119,-93,-197,119,-201,-202,119,-207,-208,-188,-189,-190,-191,-192,-193,-211,119,119,119,119,119,119,119,119,-38,-39,-40,-41,-42,-43,119,119,-198,-204,-205,119,-209,-210,119,119,-212,119,119,119,119,119,-223,-224,-225,119,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,-194,119,-196,119,119,119,-222,-226,119,119,119,-195,119,119,119,119,119,119,119,119,-213,-215,-216,119,119,119,-218,119,-220,119,-214,-217,-219,-221,]),'OCTAL_CONSTANT':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,89,92,97,103,104,105,107,110,111,112,113,114,115,139,163,165,166,167,168,169,170,171,173,174,175,176,180,181,183,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,210,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,242,249,254,258,259,260,264,271,272,273,274,305,315,321,322,323,325,326,327,328,329,330,333,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,120,120,120,-93,-197,120,-201,-202,120,-207,-208,-188,-189,-190,-191,-192,-193,-211,120,120,120,120,120,120,120,120,-38,-39,-40,-41,-42,-43,120,120,-198,-204,-205,120,-209,-210,120,120,-212,120,120,120,120,120,-223,-224,-225,120,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,-194,120,-196,120,120,120,-222,-226,120,120,120,-195,120,120,120,120,120,120,120,120,-213,-215,-216,120,120,120,-218,120,-220,120,-214,-217,-219,-221,]),'EXPONENT_CONSTANT':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,89,92,97,103,104,105,107,110,111,112,113,114,115,139,163,165,166,167,168,169,170,171,173,174,175,176,180,181,183,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,210,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,242,249,254,258,259,260,264,271,272,273,274,305,315,321,322,323,325,326,327,328,329,330,333,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,121,121,121,-93,-197,121,-201,-202,121,-207,-208,-188,-189,-190,-191,-192,-193,-211,121,121,121,121,121,121,121,121,-38,-39,-40,-41,-42,-43,121,121,-198,-204,-205,121,-209,-210,121,121,-212,121,121,121,121,121,-223,-224,-225,121,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,-194,121,-196,121,121,121,-222,-226,121,121,121,-195,121,121,121,121,121,121,121,121,-213,-215,-216,121,121,121,-218,121,-220,121,-214,-217,-219,-221,]),'REAL_CONSTANT':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,89,92,97,103,104,105,107,110,111,112,113,114,115,139,163,165,166,167,168,169,170,171,173,174,175,176,180,181,183,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,210,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,242,249,254,258,259,260,264,271,272,273,274,305,315,321,322,323,325,326,327,328,329,330,333,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,122,122,122,-93,-197,122,-201,-202,122,-207,-208,-188,-189,-190,-191,-192,-193,-211,122,122,122,122,122,122,122,122,-38,-39,-40,-41,-42,-43,122,122,-198,-204,-205,122,-209,-210,122,122,-212,122,122,122,122,122,-223,-224,-225,122,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,-194,122,-196,122,122,122,-222,-226,122,122,122,-195,122,122,122,122,122,122,122,122,-213,-215,-216,122,122,122,-218,122,-220,122,-214,-217,-219,-221,]),'CHAR_CONSTANT':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,89,92,97,103,104,105,107,110,111,112,113,114,115,139,163,165,166,167,168,169,170,171,173,174,175,176,180,181,183,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,210,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,242,249,254,258,259,260,264,271,272,273,274,305,315,321,322,323,325,326,327,328,329,330,333,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,123,123,123,-93,-197,123,-201,-202,123,-207,-208,-188,-189,-190,-191,-192,-193,-211,123,123,123,123,123,123,123,123,-38,-39,-40,-41,-42,-43,123,123,-198,-204,-205,123,-209,-210,123,123,-212,123,123,123,123,123,-223,-224,-225,123,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,-194,123,-196,123,123,123,-222,-226,123,123,123,-195,123,123,123,123,123,123,123,123,-213,-215,-216,123,123,123,-218,123,-220,123,-214,-217,-219,-221,]),'STR_CONSTANT':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,89,92,97,103,104,105,107,110,111,112,113,114,115,139,163,165,166,167,168,169,170,171,173,174,175,176,180,181,183,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,210,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,242,249,254,258,259,260,264,271,272,273,274,305,315,321,322,323,325,326,327,328,329,330,333,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,124,124,124,-93,-197,124,-201,-202,124,-207,-208,-188,-189,-190,-191,-192,-193,-211,124,124,124,124,124,124,124,124,-38,-39,-40,-41,-42,-43,124,124,-198,-204,-205,124,-209,-210,124,124,-212,124,124,124,124,124,-223,-224,-225,124,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,-194,124,-196,124,124,124,-222,-226,124,124,124,-195,124,124,124,124,124,124,124,124,-213,-215,-216,124,124,124,-218,124,-220,124,-214,-217,-219,-221,]),'TRUE':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,89,92,97,103,104,105,107,110,111,112,113,114,115,139,163,165,166,167,168,169,170,171,173,174,175,176,180,181,183,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,210,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,242,249,254,258,259,260,264,271,272,273,274,305,315,321,322,323,325,326,327,328,329,330,333,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,125,125,125,-93,-197,125,-201,-202,125,-207,-208,-188,-189,-190,-191,-192,-193,-211,125,125,125,125,125,125,125,125,-38,-39,-40,-41,-42,-43,125,125,-198,-204,-205,125,-209,-210,125,125,-212,125,125,125,125,125,-223,-224,-225,125,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,-194,125,-196,125,125,125,-222,-226,125,125,125,-195,125,125,125,125,125,125,125,125,-213,-215,-216,125,125,125,-218,125,-220,125,-214,-217,-219,-221,]),'FALSE':([41,47,53,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,85,89,92,97,103,104,105,107,110,111,112,113,114,115,139,163,165,166,167,168,169,170,171,173,174,175,176,180,181,183,185,186,187,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,210,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,242,249,254,258,259,260,264,271,272,273,274,305,315,321,322,323,325,326,327,328,329,330,333,346,347,348,350,352,358,360,361,362,363,364,365,366,367,],[-92,126,126,126,-93,-197,126,-201,-202,126,-207,-208,-188,-189,-190,-191,-192,-193,-211,126,126,126,126,126,126,126,126,-38,-39,-40,-41,-42,-43,126,126,-198,-204,-205,126,-209,-210,126,126,-212,126,126,126,126,126,-223,-224,-225,126,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,-194,126,-196,126,126,126,-222,-226,126,126,126,-195,126,126,126,126,126,126,126,126,-213,-215,-216,126,126,126,-218,126,-220,126,-214,-217,-219,-221,]),'R_BRACES':([41,47,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,99,100,101,102,106,108,109,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,137,138,140,151,152,156,157,158,162,165,166,167,168,169,170,174,185,186,187,207,208,209,211,212,213,243,245,255,256,257,258,260,263,273,274,275,277,279,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,313,317,318,320,321,322,324,331,332,334,344,345,346,347,348,354,360,362,364,365,366,367,],[-92,70,-93,-197,165,-201,-202,-203,-207,-208,-188,-189,-190,-191,-192,-193,-211,-76,-44,-74,-32,-46,-72,-22,-70,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-68,-66,-64,-61,-56,-53,-50,-91,-44,-10,244,-126,252,-141,-143,-183,-198,-204,-205,-206,-209,-210,-212,-223,-224,-225,-28,-29,-33,-34,-35,-36,312,-127,319,320,-186,-194,-196,-19,-222,-226,-77,-73,-24,-26,-27,-71,-69,-67,-65,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-128,-142,-144,-184,344,-195,-45,-23,-25,-37,-185,-187,-213,-215,-216,-75,-218,-220,-214,-217,-219,-221,]),'BLOCK_COMMENT':([41,47,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,165,166,167,168,169,170,174,185,186,187,258,260,273,274,322,346,347,348,360,362,364,365,366,367,],[-92,72,-93,-197,166,-201,-202,-203,-207,-208,-188,-189,-190,-191,-192,-193,-211,-198,-204,-205,-206,-209,-210,-212,-223,-224,-225,-194,-196,-222,-226,-195,-213,-215,-216,-218,-220,-214,-217,-219,-221,]),'INLINE_COMMENT':([41,47,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,165,166,167,168,169,170,174,185,186,187,258,260,273,274,322,346,347,348,360,362,364,365,366,367,],[-92,73,-93,-197,167,-201,-202,-203,-207,-208,-188,-189,-190,-191,-192,-193,-211,-198,-204,-205,-206,-209,-210,-212,-223,-224,-225,-194,-196,-222,-226,-195,-213,-215,-216,-218,-220,-214,-217,-219,-221,]),'R_SQBR':([53,98,99,100,101,102,106,108,109,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,135,137,138,140,207,208,209,211,212,213,242,261,263,275,277,278,279,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,305,311,324,331,332,334,336,354,],[136,-89,-76,-44,-74,-32,-46,-72,-22,-70,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-68,-66,-64,-61,-56,-53,-50,232,-91,-44,-10,-28,-29,-33,-34,-35,-36,310,-90,-19,-77,-73,331,-24,-26,-27,-71,-69,-67,-65,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,335,341,-45,-23,-25,-37,356,-75,]),'ELSE':([70,77,78,79,80,81,82,83,165,174,185,186,187,258,260,273,274,322,346,347,348,360,362,364,365,366,367,],[-197,-188,-189,-190,-191,-192,-193,-211,-198,-212,-223,-224,-225,-194,-196,-222,-226,-195,358,-215,-216,-218,-220,-214,-217,-219,-221,]),'DOT':([84,102,109,117,118,119,120,121,122,123,124,125,126,140,207,208,263,279,282,283,331,332,],[-10,205,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-10,-28,-29,-19,-24,-26,-27,-23,-25,]),'ARROW':([84,102,109,117,118,119,120,121,122,123,124,125,126,140,207,208,263,279,282,283,331,332,],[-10,206,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-10,-28,-29,-19,-24,-26,-27,-23,-25,]),'MULTIPLY_ASSIGNMENT':([84,100,102,109,117,118,119,120,121,122,123,124,125,126,138,140,207,208,209,211,212,213,263,279,282,283,324,331,332,334,],[-10,191,-32,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-44,-10,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,-45,-23,-25,-37,]),'DIVIDE_ASSIGNMENT':([84,100,102,109,117,118,119,120,121,122,123,124,125,126,138,140,207,208,209,211,212,213,263,279,282,283,324,331,332,334,],[-10,192,-32,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-44,-10,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,-45,-23,-25,-37,]),'MODULUS_ASSIGNMENT':([84,100,102,109,117,118,119,120,121,122,123,124,125,126,138,140,207,208,209,211,212,213,263,279,282,283,324,331,332,334,],[-10,193,-32,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-44,-10,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,-45,-23,-25,-37,]),'ADD_ASSIGNMENT':([84,100,102,109,117,118,119,120,121,122,123,124,125,126,138,140,207,208,209,211,212,213,263,279,282,283,324,331,332,334,],[-10,194,-32,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-44,-10,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,-45,-23,-25,-37,]),'SUBSTRACT_ASSIGNMENT':([84,100,102,109,117,118,119,120,121,122,123,124,125,126,138,140,207,208,209,211,212,213,263,279,282,283,324,331,332,334,],[-10,195,-32,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-44,-10,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,-45,-23,-25,-37,]),'LEFT_SHIFT_ASSIGNMENT':([84,100,102,109,117,118,119,120,121,122,123,124,125,126,138,140,207,208,209,211,212,213,263,279,282,283,324,331,332,334,],[-10,196,-32,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-44,-10,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,-45,-23,-25,-37,]),'RIGHT_SHIFT_ASSIGNMENT':([84,100,102,109,117,118,119,120,121,122,123,124,125,126,138,140,207,208,209,211,212,213,263,279,282,283,324,331,332,334,],[-10,197,-32,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-44,-10,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,-45,-23,-25,-37,]),'BITWISE_AND_ASSIGNMENT':([84,100,102,109,117,118,119,120,121,122,123,124,125,126,138,140,207,208,209,211,212,213,263,279,282,283,324,331,332,334,],[-10,198,-32,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-44,-10,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,-45,-23,-25,-37,]),'BITWISE_XOR_ASSIGNMENT':([84,100,102,109,117,118,119,120,121,122,123,124,125,126,138,140,207,208,209,211,212,213,263,279,282,283,324,331,332,334,],[-10,199,-32,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-44,-10,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,-45,-23,-25,-37,]),'BITWISE_OR_ASSIGNMENT':([84,100,102,109,117,118,119,120,121,122,123,124,125,126,138,140,207,208,209,211,212,213,263,279,282,283,324,331,332,334,],[-10,200,-32,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-44,-10,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,-45,-23,-25,-37,]),'DIVIDE':([84,100,102,106,109,117,118,119,120,121,122,123,124,125,126,133,138,140,207,208,209,211,212,213,263,279,282,283,297,298,299,300,301,324,331,332,334,],[-10,-44,-32,-46,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,230,-44,-10,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,230,230,-47,-48,-49,-45,-23,-25,-37,]),'MODULUS':([84,100,102,106,109,117,118,119,120,121,122,123,124,125,126,133,138,140,207,208,209,211,212,213,263,279,282,283,297,298,299,300,301,324,331,332,334,],[-10,-44,-32,-46,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,231,-44,-10,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,231,231,-47,-48,-49,-45,-23,-25,-37,]),'LEFT_SHIFT':([84,100,102,106,109,117,118,119,120,121,122,123,124,125,126,131,132,133,138,140,207,208,209,211,212,213,263,279,282,283,291,292,293,294,295,296,297,298,299,300,301,324,331,332,334,],[-10,-44,-32,-46,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,225,-53,-50,-44,-10,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,225,225,225,225,-54,-55,-51,-52,-47,-48,-49,-45,-23,-25,-37,]),'RIGHT_SHIFT':([84,100,102,106,109,117,118,119,120,121,122,123,124,125,126,131,132,133,138,140,207,208,209,211,212,213,263,279,282,283,291,292,293,294,295,296,297,298,299,300,301,324,331,332,334,],[-10,-44,-32,-46,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,226,-53,-50,-44,-10,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,226,226,226,226,-54,-55,-51,-52,-47,-48,-49,-45,-23,-25,-37,]),'LESS':([84,100,102,106,109,117,118,119,120,121,122,123,124,125,126,130,131,132,133,138,140,207,208,209,211,212,213,263,279,282,283,289,290,291,292,293,294,295,296,297,298,299,300,301,324,331,332,334,],[-10,-44,-32,-46,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,221,-56,-53,-50,-44,-10,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,221,221,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-45,-23,-25,-37,]),'GREATER':([84,100,102,106,109,117,118,119,120,121,122,123,124,125,126,130,131,132,133,138,140,207,208,209,211,212,213,263,279,282,283,289,290,291,292,293,294,295,296,297,298,299,300,301,324,331,332,334,],[-10,-44,-32,-46,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,222,-56,-53,-50,-44,-10,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,222,222,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-45,-23,-25,-37,]),'LESS_EQUALS':([84,100,102,106,109,117,118,119,120,121,122,123,124,125,126,130,131,132,133,138,140,207,208,209,211,212,213,263,279,282,283,289,290,291,292,293,294,295,296,297,298,299,300,301,324,331,332,334,],[-10,-44,-32,-46,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,223,-56,-53,-50,-44,-10,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,223,223,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-45,-23,-25,-37,]),'GREATER_EQUALS':([84,100,102,106,109,117,118,119,120,121,122,123,124,125,126,130,131,132,133,138,140,207,208,209,211,212,213,263,279,282,283,289,290,291,292,293,294,295,296,297,298,299,300,301,324,331,332,334,],[-10,-44,-32,-46,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,224,-56,-53,-50,-44,-10,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,224,224,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-45,-23,-25,-37,]),'EQUALS':([84,100,102,106,109,117,118,119,120,121,122,123,124,125,126,129,130,131,132,133,138,140,207,208,209,211,212,213,263,279,282,283,288,289,290,291,292,293,294,295,296,297,298,299,300,301,324,331,332,334,],[-10,-44,-32,-46,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,219,-61,-56,-53,-50,-44,-10,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,219,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-45,-23,-25,-37,]),'NOT_EQUALS':([84,100,102,106,109,117,118,119,120,121,122,123,124,125,126,129,130,131,132,133,138,140,207,208,209,211,212,213,263,279,282,283,288,289,290,291,292,293,294,295,296,297,298,299,300,301,324,331,332,334,],[-10,-44,-32,-46,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,220,-61,-56,-53,-50,-44,-10,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,220,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-45,-23,-25,-37,]),'BITWISE_XOR':([84,100,102,106,109,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,140,207,208,209,211,212,213,263,279,282,283,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,324,331,332,334,],[-10,-44,-32,-46,-22,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,217,-66,-64,-61,-56,-53,-50,-44,-10,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,217,-67,-65,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-45,-23,-25,-37,]),'BITWISE_OR':([84,100,102,106,109,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,140,207,208,209,211,212,213,263,279,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,324,331,332,334,],[-10,-44,-32,-46,-22,216,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-68,-66,-64,-61,-56,-53,-50,-44,-10,-28,-29,-33,-34,-35,-36,-19,-24,-26,-27,216,-69,-67,-65,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-45,-23,-25,-37,]),'LOGICAL_AND':([84,100,102,106,108,109,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,140,207,208,209,211,212,213,263,277,279,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,324,331,332,334,],[-10,-44,-32,-46,215,-22,-70,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-68,-66,-64,-61,-56,-53,-50,-44,-10,-28,-29,-33,-34,-35,-36,-19,215,-24,-26,-27,-71,-69,-67,-65,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-45,-23,-25,-37,]),'QUES_MARK':([84,100,101,102,106,108,109,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,140,207,208,209,211,212,213,263,277,279,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,324,331,332,334,],[-10,-44,201,-32,-46,-72,-22,-70,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-68,-66,-64,-61,-56,-53,-50,-44,-10,-28,-29,-33,-34,-35,-36,-19,-73,-24,-26,-27,-71,-69,-67,-65,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-45,-23,-25,-37,]),'LOGICAL_OR':([84,100,101,102,106,108,109,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,138,140,207,208,209,211,212,213,263,277,279,282,283,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,324,331,332,334,],[-10,-44,202,-32,-46,-72,-22,-70,-11,-12,-13,-14,-15,-16,-17,-18,-20,-21,-68,-66,-64,-61,-56,-53,-50,-44,-10,-28,-29,-33,-34,-35,-36,-19,-73,-24,-26,-27,-71,-69,-67,-65,-62,-63,-57,-58,-59,-60,-54,-55,-51,-52,-47,-48,-49,-45,-23,-25,-37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'translation_unit':([0,],[2,]),'external_declaration':([0,2,],[3,39,]),'function_definition':([0,2,],[4,4,]),'declaration':([0,2,7,40,44,47,63,71,74,168,183,],[5,5,46,46,69,76,69,76,170,170,272,]),'declaration_specifiers':([0,2,7,8,9,10,40,44,47,54,63,71,74,168,183,234,241,267,306,],[6,6,48,49,50,51,48,48,48,146,48,48,48,48,48,146,146,146,146,]),'declarator':([0,2,6,34,48,67,146,153,241,314,],[7,7,40,58,134,134,237,248,58,248,]),'storage_class_specifier':([0,2,7,8,9,10,40,44,47,54,63,71,74,168,183,234,241,267,306,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'type_specifier':([0,2,7,8,9,10,40,44,47,54,60,63,71,74,89,139,150,151,154,155,168,183,214,234,241,243,267,306,],[9,9,9,9,9,9,9,9,9,9,154,9,9,9,154,154,154,154,154,154,9,9,154,9,9,154,9,9,]),'type_qualifier':([0,2,7,8,9,10,32,40,44,47,54,55,60,63,71,74,89,139,150,151,154,155,168,183,214,234,241,243,267,306,],[10,10,10,10,10,10,57,10,10,10,10,148,155,10,10,10,155,155,155,155,155,155,10,10,155,10,10,155,10,10,]),'pointer':([0,2,6,32,34,48,55,67,146,153,179,241,267,314,],[11,11,11,56,11,11,147,11,239,11,266,239,266,11,]),'direct_declarator':([0,2,6,11,34,48,67,146,153,239,241,314,],[12,12,12,52,12,12,12,12,12,52,12,12,]),'struct_or_union_specifier':([0,2,7,8,9,10,40,44,47,54,60,63,71,74,89,139,150,151,154,155,168,183,214,234,241,243,267,306,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'enum_specifier':([0,2,7,8,9,10,40,44,47,54,60,63,71,74,89,139,150,151,154,155,168,183,214,234,241,243,267,306,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'struct_or_union':([0,2,7,8,9,10,40,44,47,54,60,63,71,74,89,139,150,151,154,155,168,183,214,234,241,243,267,306,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'init_declarator_list':([6,48,],[42,42,]),'init_declarator':([6,48,67,],[43,43,164,]),'declaration_list':([7,40,],[44,63,]),'compound_statement':([7,40,44,47,63,71,74,92,168,171,173,259,323,325,326,350,352,358,361,363,],[45,64,68,78,160,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'type_qualifier_list':([32,],[55,]),'statement_list_with_comment':([47,],[71,]),'statement_list':([47,71,],[74,168,]),'statement':([47,71,74,92,168,171,173,259,323,325,326,350,352,358,361,363,],[75,75,169,182,169,258,260,322,346,347,348,360,362,364,366,367,]),'labeled_statement':([47,71,74,92,168,171,173,259,323,325,326,350,352,358,361,363,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'expression_statement':([47,71,74,92,168,171,173,183,259,271,272,323,325,326,350,352,358,361,363,],[79,79,79,79,79,79,79,271,79,328,329,79,79,79,79,79,79,79,79,]),'selection_statement':([47,71,74,92,168,171,173,259,323,325,326,350,352,358,361,363,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'iteration_statement':([47,71,74,92,168,171,173,259,323,325,326,350,352,358,361,363,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'jump_statement':([47,71,74,92,168,171,173,259,323,325,326,350,352,358,361,363,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'expression':([47,71,74,89,92,97,139,168,171,173,176,180,181,183,201,203,210,214,259,271,272,323,325,326,327,328,329,350,352,358,361,363,],[87,87,87,177,87,188,177,87,87,87,262,268,269,87,276,278,177,177,87,87,87,87,87,87,349,351,353,87,87,87,87,87,]),'assignment_expression':([47,65,71,74,89,92,97,139,163,168,171,173,175,176,180,181,183,189,201,203,204,210,214,259,271,272,321,323,325,326,327,328,329,333,350,352,358,361,363,],[98,162,98,98,98,98,98,98,162,98,98,98,261,98,98,98,98,275,98,98,281,98,98,98,98,98,162,98,98,98,98,98,98,355,98,98,98,98,98,]),'conditional_expression':([47,53,65,71,74,85,89,92,97,139,163,168,171,173,175,176,180,181,183,189,201,203,204,210,214,242,249,254,259,271,272,305,315,321,323,325,326,327,328,329,330,333,350,352,358,361,363,],[99,137,99,99,99,137,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,137,137,137,99,99,99,137,137,99,99,99,99,99,99,99,354,99,99,99,99,99,99,]),'unary_expression':([47,53,65,71,74,85,89,92,97,103,104,105,107,139,163,168,171,173,175,176,180,181,183,189,201,202,203,204,210,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,242,249,254,259,264,271,272,305,315,321,323,325,326,327,328,329,330,333,350,352,358,361,363,],[100,138,100,100,100,138,100,100,100,209,211,138,213,100,100,100,100,100,100,100,100,100,100,100,100,138,100,100,100,100,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,100,138,100,100,138,138,100,100,100,100,100,100,100,138,100,100,100,100,100,100,]),'logical_or_expression':([47,53,65,71,74,85,89,92,97,139,163,168,171,173,175,176,180,181,183,189,201,203,204,210,214,242,249,254,259,271,272,305,315,321,323,325,326,327,328,329,330,333,350,352,358,361,363,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'postfix_expression':([47,53,65,71,74,85,89,92,97,103,104,105,107,139,163,168,171,173,175,176,180,181,183,189,201,202,203,204,210,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,242,249,254,259,264,271,272,305,315,321,323,325,326,327,328,329,330,333,350,352,358,361,363,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'unary_operator':([47,53,65,71,74,85,89,92,97,103,104,105,107,139,163,168,171,173,175,176,180,181,183,189,201,202,203,204,210,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,242,249,254,259,264,271,272,305,315,321,323,325,326,327,328,329,330,333,350,352,358,361,363,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'cast_expression':([47,53,65,71,74,85,89,92,97,105,139,163,168,171,173,175,176,180,181,183,189,201,202,203,204,210,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,242,249,254,259,264,271,272,305,315,321,323,325,326,327,328,329,330,333,350,352,358,361,363,],[106,106,106,106,106,106,106,106,106,212,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,299,300,301,106,106,106,106,324,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'logical_and_expression':([47,53,65,71,74,85,89,92,97,139,163,168,171,173,175,176,180,181,183,189,201,202,203,204,210,214,242,249,254,259,271,272,305,315,321,323,325,326,327,328,329,330,333,350,352,358,361,363,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,277,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'primary_expression':([47,53,65,71,74,85,89,92,97,103,104,105,107,139,163,168,171,173,175,176,180,181,183,189,201,202,203,204,210,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,242,249,254,259,264,271,272,305,315,321,323,325,326,327,328,329,330,333,350,352,358,361,363,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'inclusive_or_expression':([47,53,65,71,74,85,89,92,97,139,163,168,171,173,175,176,180,181,183,189,201,202,203,204,210,214,215,242,249,254,259,271,272,305,315,321,323,325,326,327,328,329,330,333,350,352,358,361,363,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,285,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'exclusive_or_expression':([47,53,65,71,74,85,89,92,97,139,163,168,171,173,175,176,180,181,183,189,201,202,203,204,210,214,215,216,242,249,254,259,271,272,305,315,321,323,325,326,327,328,329,330,333,350,352,358,361,363,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,286,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'and_expression':([47,53,65,71,74,85,89,92,97,139,163,168,171,173,175,176,180,181,183,189,201,202,203,204,210,214,215,216,217,242,249,254,259,271,272,305,315,321,323,325,326,327,328,329,330,333,350,352,358,361,363,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,287,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'equality_expression':([47,53,65,71,74,85,89,92,97,139,163,168,171,173,175,176,180,181,183,189,201,202,203,204,210,214,215,216,217,218,242,249,254,259,271,272,305,315,321,323,325,326,327,328,329,330,333,350,352,358,361,363,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,288,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,]),'relational_expression':([47,53,65,71,74,85,89,92,97,139,163,168,171,173,175,176,180,181,183,189,201,202,203,204,210,214,215,216,217,218,219,220,242,249,254,259,271,272,305,315,321,323,325,326,327,328,329,330,333,350,352,358,361,363,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,289,290,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,]),'shift_expression':([47,53,65,71,74,85,89,92,97,139,163,168,171,173,175,176,180,181,183,189,201,202,203,204,210,214,215,216,217,218,219,220,221,222,223,224,242,249,254,259,271,272,305,315,321,323,325,326,327,328,329,330,333,350,352,358,361,363,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,291,292,293,294,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'additive_expression':([47,53,65,71,74,85,89,92,97,139,163,168,171,173,175,176,180,181,183,189,201,202,203,204,210,214,215,216,217,218,219,220,221,222,223,224,225,226,242,249,254,259,271,272,305,315,321,323,325,326,327,328,329,330,333,350,352,358,361,363,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,295,296,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'multiplicative_expression':([47,53,65,71,74,85,89,92,97,139,163,168,171,173,175,176,180,181,183,189,201,202,203,204,210,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,242,249,254,259,271,272,305,315,321,323,325,326,327,328,329,330,333,350,352,358,361,363,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,297,298,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'constant_expression':([53,85,242,249,254,305,315,],[135,172,311,316,318,336,343,]),'parameter_type_list':([54,241,267,306,],[141,309,309,338,]),'identifier_list':([54,],[143,]),'parameter_declaration':([54,234,241,267,306,],[144,302,144,144,144,]),'struct_declaration_list':([60,150,],[151,243,]),'struct_declaration':([60,150,151,243,],[152,152,245,245,]),'specifier_qualifier_list':([60,89,139,150,151,154,155,214,243,],[153,179,179,153,153,250,251,179,153,]),'enumerator_list':([61,159,],[156,255,]),'enumerator':([61,159,253,],[157,157,317,]),'initializer':([65,163,321,],[161,257,345,]),'type_name':([89,139,214,],[178,178,284,]),'assignment_operator':([100,],[189,]),'abstract_declarator':([146,179,241,267,],[238,265,308,308,]),'direct_abstract_declarator':([146,179,239,241,266,267,],[240,240,304,240,304,240,]),'struct_declarator_list':([153,],[246,]),'struct_declarator':([153,314,],[247,342,]),'initializer_list':([163,],[256,]),'argument_expression_list':([204,],[280,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> translation_unit','program',1,'p_program','parser',49),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit','parser',54),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit','parser',55),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration','parser',61),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration','parser',62),
  ('function_definition -> declaration_specifiers declarator declaration_list compound_statement','function_definition',4,'p_function_definition_1','parser',68),
  ('function_definition -> declaration_specifiers declarator compound_statement','function_definition',3,'p_function_definition_1','parser',69),
  ('function_definition -> declarator declaration_list compound_statement','function_definition',3,'p_function_definition_2','parser',79),
  ('function_definition -> declarator compound_statement','function_definition',2,'p_function_definition_2','parser',80),
  ('primary_expression -> IDENTIFIER','primary_expression',1,'p_primary_expression','parser',91),
  ('primary_expression -> NULL','primary_expression',1,'p_primary_expression','parser',92),
  ('primary_expression -> INT_CONSTANT','primary_expression',1,'p_primary_expression','parser',93),
  ('primary_expression -> HEX_CONSTANT','primary_expression',1,'p_primary_expression','parser',94),
  ('primary_expression -> OCTAL_CONSTANT','primary_expression',1,'p_primary_expression','parser',95),
  ('primary_expression -> EXPONENT_CONSTANT','primary_expression',1,'p_primary_expression','parser',96),
  ('primary_expression -> REAL_CONSTANT','primary_expression',1,'p_primary_expression','parser',97),
  ('primary_expression -> CHAR_CONSTANT','primary_expression',1,'p_primary_expression','parser',98),
  ('primary_expression -> STR_CONSTANT','primary_expression',1,'p_primary_expression','parser',99),
  ('primary_expression -> L_PAREN expression R_PAREN','primary_expression',3,'p_primary_expression','parser',100),
  ('primary_expression -> TRUE','primary_expression',1,'p_primary_expression','parser',101),
  ('primary_expression -> FALSE','primary_expression',1,'p_primary_expression','parser',102),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression','parser',111),
  ('postfix_expression -> postfix_expression L_SQBR expression R_SQBR','postfix_expression',4,'p_postfix_expression','parser',112),
  ('postfix_expression -> postfix_expression L_PAREN R_PAREN','postfix_expression',3,'p_postfix_expression','parser',113),
  ('postfix_expression -> postfix_expression L_PAREN argument_expression_list R_PAREN','postfix_expression',4,'p_postfix_expression','parser',114),
  ('postfix_expression -> postfix_expression DOT IDENTIFIER','postfix_expression',3,'p_postfix_expression','parser',115),
  ('postfix_expression -> postfix_expression ARROW IDENTIFIER','postfix_expression',3,'p_postfix_expression','parser',116),
  ('postfix_expression -> postfix_expression INCREMENT','postfix_expression',2,'p_postfix_expression','parser',117),
  ('postfix_expression -> postfix_expression DECREMENT','postfix_expression',2,'p_postfix_expression','parser',118),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','parser',135),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','parser',136),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','parser',146),
  ('unary_expression -> INCREMENT unary_expression','unary_expression',2,'p_unary_expression','parser',147),
  ('unary_expression -> DECREMENT unary_expression','unary_expression',2,'p_unary_expression','parser',148),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression','parser',149),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression','parser',150),
  ('unary_expression -> SIZEOF L_PAREN type_name R_PAREN','unary_expression',4,'p_unary_expression','parser',151),
  ('unary_operator -> BITWISE_AND','unary_operator',1,'p_unary_operator','parser',160),
  ('unary_operator -> MULTIPLY','unary_operator',1,'p_unary_operator','parser',161),
  ('unary_operator -> ADD','unary_operator',1,'p_unary_operator','parser',162),
  ('unary_operator -> SUBSTRACT','unary_operator',1,'p_unary_operator','parser',163),
  ('unary_operator -> BITWISE_ONE_COMPLEMENT','unary_operator',1,'p_unary_operator','parser',164),
  ('unary_operator -> LOGICAL_NOT','unary_operator',1,'p_unary_operator','parser',165),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression','parser',171),
  ('cast_expression -> L_PAREN type_name R_PAREN cast_expression','cast_expression',4,'p_cast_expression','parser',172),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multiplicative_expression','parser',181),
  ('multiplicative_expression -> multiplicative_expression MULTIPLY cast_expression','multiplicative_expression',3,'p_multiplicative_expression','parser',182),
  ('multiplicative_expression -> multiplicative_expression DIVIDE cast_expression','multiplicative_expression',3,'p_multiplicative_expression','parser',183),
  ('multiplicative_expression -> multiplicative_expression MODULUS cast_expression','multiplicative_expression',3,'p_multiplicative_expression','parser',184),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','parser',195),
  ('additive_expression -> additive_expression ADD multiplicative_expression','additive_expression',3,'p_additive_expression','parser',196),
  ('additive_expression -> additive_expression SUBSTRACT multiplicative_expression','additive_expression',3,'p_additive_expression','parser',197),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression','parser',206),
  ('shift_expression -> shift_expression LEFT_SHIFT additive_expression','shift_expression',3,'p_shift_expression','parser',207),
  ('shift_expression -> shift_expression RIGHT_SHIFT additive_expression','shift_expression',3,'p_shift_expression','parser',208),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression','parser',219),
  ('relational_expression -> relational_expression LESS shift_expression','relational_expression',3,'p_relational_expression','parser',220),
  ('relational_expression -> relational_expression GREATER shift_expression','relational_expression',3,'p_relational_expression','parser',221),
  ('relational_expression -> relational_expression LESS_EQUALS shift_expression','relational_expression',3,'p_relational_expression','parser',222),
  ('relational_expression -> relational_expression GREATER_EQUALS shift_expression','relational_expression',3,'p_relational_expression','parser',223),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','parser',234),
  ('equality_expression -> equality_expression EQUALS relational_expression','equality_expression',3,'p_equality_expression','parser',235),
  ('equality_expression -> equality_expression NOT_EQUALS relational_expression','equality_expression',3,'p_equality_expression','parser',236),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression','parser',247),
  ('and_expression -> and_expression BITWISE_AND equality_expression','and_expression',3,'p_and_expression','parser',248),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression','parser',259),
  ('exclusive_or_expression -> exclusive_or_expression BITWISE_XOR and_expression','exclusive_or_expression',3,'p_exclusive_or_expression','parser',260),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression','parser',271),
  ('inclusive_or_expression -> inclusive_or_expression BITWISE_OR exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression','parser',272),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression','parser',282),
  ('logical_and_expression -> logical_and_expression LOGICAL_AND inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression','parser',283),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','parser',294),
  ('logical_or_expression -> logical_or_expression LOGICAL_OR logical_and_expression','logical_or_expression',3,'p_logical_or_expression','parser',295),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression','parser',306),
  ('conditional_expression -> logical_or_expression QUES_MARK expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','parser',307),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','parser',317),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','parser',318),
  ('assignment_operator -> ASSIGNMENT','assignment_operator',1,'p_assignment_operator','parser',328),
  ('assignment_operator -> MULTIPLY_ASSIGNMENT','assignment_operator',1,'p_assignment_operator','parser',329),
  ('assignment_operator -> DIVIDE_ASSIGNMENT','assignment_operator',1,'p_assignment_operator','parser',330),
  ('assignment_operator -> MODULUS_ASSIGNMENT','assignment_operator',1,'p_assignment_operator','parser',331),
  ('assignment_operator -> ADD_ASSIGNMENT','assignment_operator',1,'p_assignment_operator','parser',332),
  ('assignment_operator -> SUBSTRACT_ASSIGNMENT','assignment_operator',1,'p_assignment_operator','parser',333),
  ('assignment_operator -> LEFT_SHIFT_ASSIGNMENT','assignment_operator',1,'p_assignment_operator','parser',334),
  ('assignment_operator -> RIGHT_SHIFT_ASSIGNMENT','assignment_operator',1,'p_assignment_operator','parser',335),
  ('assignment_operator -> BITWISE_AND_ASSIGNMENT','assignment_operator',1,'p_assignment_operator','parser',336),
  ('assignment_operator -> BITWISE_XOR_ASSIGNMENT','assignment_operator',1,'p_assignment_operator','parser',337),
  ('assignment_operator -> BITWISE_OR_ASSIGNMENT','assignment_operator',1,'p_assignment_operator','parser',338),
  ('expression -> assignment_expression','expression',1,'p_expression','parser',344),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','parser',345),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','parser',359),
  ('declaration -> declaration_specifiers SEMI_COLON','declaration',2,'p_declaration','parser',366),
  ('declaration -> declaration_specifiers init_declarator_list SEMI_COLON','declaration',3,'p_declaration','parser',367),
  ('declaration_specifiers -> storage_class_specifier','declaration_specifiers',1,'p_declaration_specifiers','parser',376),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser',377),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers','parser',378),
  ('declaration_specifiers -> type_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser',379),
  ('declaration_specifiers -> type_qualifier','declaration_specifiers',1,'p_declaration_specifiers','parser',380),
  ('declaration_specifiers -> type_qualifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser',381),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','parser',389),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','parser',390),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','parser',402),
  ('init_declarator -> declarator ASSIGNMENT initializer','init_declarator',3,'p_init_declarator','parser',403),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','parser',412),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','parser',413),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','parser',414),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','parser',415),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','parser',416),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','parser',422),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','parser',423),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier','parser',424),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','parser',425),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier','parser',426),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','parser',427),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier','parser',428),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier','parser',429),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier','parser',430),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','parser',431),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','parser',432),
  ('type_specifier -> BOOL','type_specifier',1,'p_type_specifier','parser',433),
  ('struct_or_union_specifier -> struct_or_union IDENTIFIER L_BRACES struct_declaration_list R_BRACES','struct_or_union_specifier',5,'p_struct_or_union_specifier','parser',440),
  ('struct_or_union_specifier -> struct_or_union L_BRACES struct_declaration_list R_BRACES','struct_or_union_specifier',4,'p_struct_or_union_specifier','parser',441),
  ('struct_or_union_specifier -> struct_or_union IDENTIFIER','struct_or_union_specifier',2,'p_struct_or_union_specifier','parser',442),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','parser',448),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','parser',449),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','parser',456),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','parser',457),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list SEMI_COLON','struct_declaration',3,'p_struct_declaration','parser',462),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','parser',467),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','parser',468),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','parser',469),
  ('specifier_qualifier_list -> type_qualifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','parser',470),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','parser',479),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','parser',480),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator','parser',485),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator','parser',486),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator','parser',487),
  ('enum_specifier -> ENUM L_BRACES enumerator_list R_BRACES','enum_specifier',4,'p_enum_specifier','parser',492),
  ('enum_specifier -> ENUM IDENTIFIER L_BRACES enumerator_list R_BRACES','enum_specifier',5,'p_enum_specifier','parser',493),
  ('enum_specifier -> ENUM IDENTIFIER','enum_specifier',2,'p_enum_specifier','parser',494),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','parser',499),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','parser',500),
  ('enumerator -> IDENTIFIER','enumerator',1,'p_enumerator','parser',505),
  ('enumerator -> IDENTIFIER ASSIGNMENT constant_expression','enumerator',3,'p_enumerator','parser',506),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','parser',511),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','parser',512),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator','parser',518),
  ('declarator -> direct_declarator','declarator',1,'p_declarator','parser',519),
  ('direct_declarator -> IDENTIFIER','direct_declarator',1,'p_direct_declarator','parser',528),
  ('direct_declarator -> L_PAREN declarator R_PAREN','direct_declarator',3,'p_direct_declarator','parser',529),
  ('direct_declarator -> direct_declarator L_SQBR constant_expression R_SQBR','direct_declarator',4,'p_direct_declarator','parser',530),
  ('direct_declarator -> direct_declarator L_SQBR R_SQBR','direct_declarator',3,'p_direct_declarator','parser',531),
  ('direct_declarator -> direct_declarator L_PAREN parameter_type_list R_PAREN','direct_declarator',4,'p_direct_declarator','parser',532),
  ('direct_declarator -> direct_declarator L_PAREN identifier_list R_PAREN','direct_declarator',4,'p_direct_declarator','parser',533),
  ('direct_declarator -> direct_declarator L_PAREN R_PAREN','direct_declarator',3,'p_direct_declarator','parser',534),
  ('pointer -> MULTIPLY','pointer',1,'p_pointer','parser',548),
  ('pointer -> MULTIPLY type_qualifier_list','pointer',2,'p_pointer','parser',549),
  ('pointer -> MULTIPLY pointer','pointer',2,'p_pointer','parser',550),
  ('pointer -> MULTIPLY type_qualifier_list pointer','pointer',3,'p_pointer','parser',551),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','parser',559),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','parser',560),
  ('parameter_type_list -> parameter_declaration','parameter_type_list',1,'p_parameter_type_list','parser',566),
  ('parameter_type_list -> parameter_type_list COMMA parameter_declaration','parameter_type_list',3,'p_parameter_type_list','parser',567),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration','parser',580),
  ('parameter_declaration -> declaration_specifiers abstract_declarator','parameter_declaration',2,'p_parameter_declaration','parser',581),
  ('parameter_declaration -> declaration_specifiers','parameter_declaration',1,'p_parameter_declaration','parser',582),
  ('identifier_list -> IDENTIFIER','identifier_list',1,'p_identifier_list','parser',594),
  ('identifier_list -> identifier_list COMMA IDENTIFIER','identifier_list',3,'p_identifier_list','parser',595),
  ('type_name -> specifier_qualifier_list','type_name',1,'p_type_name','parser',610),
  ('type_name -> specifier_qualifier_list abstract_declarator','type_name',2,'p_type_name','parser',611),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator','parser',620),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator','parser',621),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator','parser',622),
  ('direct_abstract_declarator -> L_PAREN abstract_declarator R_PAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser',630),
  ('direct_abstract_declarator -> L_SQBR R_SQBR','direct_abstract_declarator',2,'p_direct_abstract_declarator','parser',631),
  ('direct_abstract_declarator -> L_SQBR constant_expression R_SQBR','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser',632),
  ('direct_abstract_declarator -> direct_abstract_declarator L_SQBR R_SQBR','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser',633),
  ('direct_abstract_declarator -> direct_abstract_declarator L_SQBR constant_expression R_SQBR','direct_abstract_declarator',4,'p_direct_abstract_declarator','parser',634),
  ('direct_abstract_declarator -> L_PAREN R_PAREN','direct_abstract_declarator',2,'p_direct_abstract_declarator','parser',635),
  ('direct_abstract_declarator -> L_PAREN parameter_type_list R_PAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser',636),
  ('direct_abstract_declarator -> direct_abstract_declarator L_PAREN R_PAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser',637),
  ('direct_abstract_declarator -> direct_abstract_declarator L_PAREN parameter_type_list R_PAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator','parser',638),
  ('initializer -> assignment_expression','initializer',1,'p_initializer','parser',651),
  ('initializer -> L_BRACES initializer_list R_BRACES','initializer',3,'p_initializer','parser',652),
  ('initializer -> L_BRACES initializer_list COMMA R_BRACES','initializer',4,'p_initializer','parser',653),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list','parser',662),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list','parser',663),
  ('statement -> labeled_statement','statement',1,'p_statement','parser',669),
  ('statement -> compound_statement','statement',1,'p_statement','parser',670),
  ('statement -> expression_statement','statement',1,'p_statement','parser',671),
  ('statement -> selection_statement','statement',1,'p_statement','parser',672),
  ('statement -> iteration_statement','statement',1,'p_statement','parser',673),
  ('statement -> jump_statement','statement',1,'p_statement','parser',674),
  ('labeled_statement -> IDENTIFIER COLON statement','labeled_statement',3,'p_labeled_statement_1','parser',680),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','parser',687),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_2','parser',688),
  ('compound_statement -> L_BRACES R_BRACES','compound_statement',2,'p_compound_statement','parser',697),
  ('compound_statement -> L_BRACES statement_list_with_comment R_BRACES','compound_statement',3,'p_compound_statement','parser',698),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser',710),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser',711),
  ('statement_list_with_comment -> BLOCK_COMMENT','statement_list_with_comment',1,'p_statement_list_with_comment','parser',718),
  ('statement_list_with_comment -> INLINE_COMMENT','statement_list_with_comment',1,'p_statement_list_with_comment','parser',719),
  ('statement_list_with_comment -> statement_list','statement_list_with_comment',1,'p_statement_list_with_comment','parser',720),
  ('statement_list_with_comment -> statement_list_with_comment BLOCK_COMMENT','statement_list_with_comment',2,'p_statement_list_with_comment','parser',721),
  ('statement_list_with_comment -> statement_list_with_comment INLINE_COMMENT','statement_list_with_comment',2,'p_statement_list_with_comment','parser',722),
  ('statement_list_with_comment -> statement_list_with_comment statement_list','statement_list_with_comment',2,'p_statement_list_with_comment','parser',723),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser',740),
  ('statement_list -> declaration','statement_list',1,'p_statement_list','parser',741),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser',742),
  ('statement_list -> statement_list declaration','statement_list',2,'p_statement_list','parser',743),
  ('expression_statement -> SEMI_COLON','expression_statement',1,'p_expression_statement','parser',750),
  ('expression_statement -> expression SEMI_COLON','expression_statement',2,'p_expression_statement','parser',751),
  ('selection_statement -> IF L_PAREN expression R_PAREN statement','selection_statement',5,'p_selection_statement','parser',760),
  ('selection_statement -> IF L_PAREN expression R_PAREN statement ELSE statement','selection_statement',7,'p_selection_statement','parser',761),
  ('selection_statement -> SWITCH L_PAREN expression R_PAREN statement','selection_statement',5,'p_selection_statement','parser',762),
  ('iteration_statement -> WHILE L_PAREN expression R_PAREN statement','iteration_statement',5,'p_iteration_statement','parser',772),
  ('iteration_statement -> DO statement WHILE L_PAREN expression R_PAREN SEMI_COLON','iteration_statement',7,'p_iteration_statement','parser',773),
  ('iteration_statement -> FOR L_PAREN expression_statement expression_statement R_PAREN statement','iteration_statement',6,'p_iteration_statement','parser',774),
  ('iteration_statement -> FOR L_PAREN expression_statement expression_statement expression R_PAREN statement','iteration_statement',7,'p_iteration_statement','parser',775),
  ('iteration_statement -> FOR L_PAREN declaration expression_statement R_PAREN statement','iteration_statement',6,'p_iteration_statement','parser',776),
  ('iteration_statement -> FOR L_PAREN declaration expression_statement expression R_PAREN statement','iteration_statement',7,'p_iteration_statement','parser',777),
  ('jump_statement -> GOTO IDENTIFIER SEMI_COLON','jump_statement',3,'p_jump_statement','parser',793),
  ('jump_statement -> CONTINUE SEMI_COLON','jump_statement',2,'p_jump_statement','parser',794),
  ('jump_statement -> BREAK SEMI_COLON','jump_statement',2,'p_jump_statement','parser',795),
  ('jump_statement -> RETURN SEMI_COLON','jump_statement',2,'p_jump_statement','parser',796),
  ('jump_statement -> RETURN expression SEMI_COLON','jump_statement',3,'p_jump_statement','parser',797),
]
